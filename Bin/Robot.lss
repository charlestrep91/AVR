
Robot.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002776  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000013a  00800060  00002776  0000280a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000000c6  0080019a  0080019a  00002944  2**0
                  ALLOC
  3 .debug_aranges 000000e0  00000000  00000000  00002944  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000003ad  00000000  00000000  00002a24  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b58  00000000  00000000  00002dd1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004db  00000000  00000000  00003929  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000009f2  00000000  00000000  00003e04  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001e0  00000000  00000000  000047f8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000040b  00000000  00000000  000049d8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 3b 03 	jmp	0x676	; 0x676 <__vector_9>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 b1 01 	jmp	0x362	; 0x362 <__vector_13>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 87 01 	jmp	0x30e	; 0x30e <__vector_15>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 e7       	ldi	r30, 0x76	; 118
      68:	f7 e2       	ldi	r31, 0x27	; 39
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	aa 39       	cpi	r26, 0x9A	; 154
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	12 e0       	ldi	r17, 0x02	; 2
      78:	aa e9       	ldi	r26, 0x9A	; 154
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a0 36       	cpi	r26, 0x60	; 96
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 49 00 	call	0x92	; 0x92 <main>
      8a:	0c 94 b9 13 	jmp	0x2772	; 0x2772 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
#include "pwm.h"



int main( void )
{
      92:	df 93       	push	r29
      94:	cf 93       	push	r28
      96:	0f 92       	push	r0
      98:	cd b7       	in	r28, 0x3d	; 61
      9a:	de b7       	in	r29, 0x3e	; 62
	tREG08 portBREG;
	cli();					//disable interrupts
      9c:	f8 94       	cli
	hdInit();
      9e:	0e 94 e6 02 	call	0x5cc	; 0x5cc <hdInit>
	pwmInit();
      a2:	0e 94 f7 02 	call	0x5ee	; 0x5ee <pwmInit>
	dbgSendRobotString("Reset");
      a6:	80 e6       	ldi	r24, 0x60	; 96
      a8:	90 e0       	ldi	r25, 0x00	; 0
      aa:	0e 94 41 02 	call	0x482	; 0x482 <dbgSendRobotString>
	portBREG.byte=0xff;
      ae:	8f ef       	ldi	r24, 0xFF	; 255
      b0:	89 83       	std	Y+1, r24	; 0x01
	portBREG.bit.b0=0;
      b2:	89 81       	ldd	r24, Y+1	; 0x01
      b4:	8e 7f       	andi	r24, 0xFE	; 254
      b6:	89 83       	std	Y+1, r24	; 0x01
	PORTB=portBREG.byte;
      b8:	e8 e3       	ldi	r30, 0x38	; 56
      ba:	f0 e0       	ldi	r31, 0x00	; 0
      bc:	89 81       	ldd	r24, Y+1	; 0x01
      be:	80 83       	st	Z, r24
	sei();					//enable interrupts
      c0:	78 94       	sei

	while(1)
	{
		cPMainCmdParser();
      c2:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <cPMainCmdParser>
      c6:	fd cf       	rjmp	.-6      	; 0xc2 <main+0x30>

000000c8 <uartInitBuffers>:

/*
 Initialisation des variables pour les FIFOS
*/
void uartInitBuffers(void)
{
      c8:	df 93       	push	r29
      ca:	cf 93       	push	r28
      cc:	cd b7       	in	r28, 0x3d	; 61
      ce:	de b7       	in	r29, 0x3e	; 62
	uartRxInPtr		=0;
      d0:	10 92 20 02 	sts	0x0220, r1
	uartRxOutPtr	=0;
      d4:	10 92 e1 01 	sts	0x01E1, r1
	uartTxInPtr		=0;
      d8:	10 92 e0 01 	sts	0x01E0, r1
	uartTxOutPtr	=0;   
      dc:	10 92 21 02 	sts	0x0221, r1
	uartTxSize		=0;
      e0:	10 92 1f 02 	sts	0x021F, r1
    uartRxSize		=0; 
      e4:	10 92 1e 02 	sts	0x021E, r1
}
      e8:	cf 91       	pop	r28
      ea:	df 91       	pop	r29
      ec:	08 95       	ret

000000ee <uartInit>:

/*
 Initialisation du Uart
*/
void uartInit(void)
{
      ee:	df 93       	push	r29
      f0:	cf 93       	push	r28
      f2:	cd b7       	in	r28, 0x3d	; 61
      f4:	de b7       	in	r29, 0x3e	; 62
    /* configure asynchronous operation, no parity, 1 stop bit, 8 data bits, Tx on rising edge */
    UCSRC = (1<<URSEL)|(0<<UMSEL)|(0<<UPM1)|(0<<UPM0)|(0<<USBS)|(1<<UCSZ1)|(1<<UCSZ0)|(0<<UCPOL);       
      f6:	e0 e4       	ldi	r30, 0x40	; 64
      f8:	f0 e0       	ldi	r31, 0x00	; 0
      fa:	86 e8       	ldi	r24, 0x86	; 134
      fc:	80 83       	st	Z, r24
    /* enable RxD/TxD and ints */
    UCSRB = (1<<RXCIE)|(1<<TXCIE)|(1<<RXEN)|(1<<TXEN)|(0<<UCSZ2);       
      fe:	ea e2       	ldi	r30, 0x2A	; 42
     100:	f0 e0       	ldi	r31, 0x00	; 0
     102:	88 ed       	ldi	r24, 0xD8	; 216
     104:	80 83       	st	Z, r24
    /* set baud rate */
    UBRRH = (U8)(UART_BAUD_SELECT >> 8);          
     106:	e0 e4       	ldi	r30, 0x40	; 64
     108:	f0 e0       	ldi	r31, 0x00	; 0
     10a:	10 82       	st	Z, r1
    UBRRL = (U8)(UART_BAUD_SELECT & 0x00FF); 
     10c:	e9 e2       	ldi	r30, 0x29	; 41
     10e:	f0 e0       	ldi	r31, 0x00	; 0
     110:	87 e6       	ldi	r24, 0x67	; 103
     112:	80 83       	st	Z, r24
	//init les variables des buffers 
	uartInitBuffers();   
     114:	0e 94 64 00 	call	0xc8	; 0xc8 <uartInitBuffers>
}
     118:	cf 91       	pop	r28
     11a:	df 91       	pop	r29
     11c:	08 95       	ret

0000011e <uartTxRoutine>:

/*
 routine d'envoi des data au uart
*/
void uartTxRoutine(void)
{
     11e:	df 93       	push	r29
     120:	cf 93       	push	r28
     122:	cd b7       	in	r28, 0x3d	; 61
     124:	de b7       	in	r29, 0x3e	; 62
	if(uartTxSize)
     126:	80 91 1f 02 	lds	r24, 0x021F
     12a:	88 23       	and	r24, r24
     12c:	e1 f0       	breq	.+56     	; 0x166 <uartTxRoutine+0x48>
	{
		UDR = uartTxBuffer[uartTxOutPtr];      
     12e:	ac e2       	ldi	r26, 0x2C	; 44
     130:	b0 e0       	ldi	r27, 0x00	; 0
     132:	80 91 21 02 	lds	r24, 0x0221
     136:	88 2f       	mov	r24, r24
     138:	90 e0       	ldi	r25, 0x00	; 0
     13a:	fc 01       	movw	r30, r24
     13c:	ee 5d       	subi	r30, 0xDE	; 222
     13e:	fd 4f       	sbci	r31, 0xFD	; 253
     140:	80 81       	ld	r24, Z
     142:	8c 93       	st	X, r24
		uartTxOutPtr++;
     144:	80 91 21 02 	lds	r24, 0x0221
     148:	8f 5f       	subi	r24, 0xFF	; 255
     14a:	80 93 21 02 	sts	0x0221, r24
		uartTxSize--;
     14e:	80 91 1f 02 	lds	r24, 0x021F
     152:	81 50       	subi	r24, 0x01	; 1
     154:	80 93 1f 02 	sts	0x021F, r24
		//remet à zéro si jamais la taille du buffer est dépassé
		if(uartTxOutPtr>(UART_TX_BUFFER_SIZE-1))
     158:	80 91 21 02 	lds	r24, 0x0221
     15c:	8c 33       	cpi	r24, 0x3C	; 60
     15e:	38 f0       	brcs	.+14     	; 0x16e <uartTxRoutine+0x50>
	 		uartTxOutPtr=0;
     160:	10 92 21 02 	sts	0x0221, r1
     164:	04 c0       	rjmp	.+8      	; 0x16e <uartTxRoutine+0x50>
	}
	else
	{
		uartTxOutPtr=0;
     166:	10 92 21 02 	sts	0x0221, r1
		uartTxInPtr=0;
     16a:	10 92 e0 01 	sts	0x01E0, r1
	}
		
}
     16e:	cf 91       	pop	r28
     170:	df 91       	pop	r29
     172:	08 95       	ret

00000174 <uartRxRoutine>:

/*
 routine de reception des data du uart
*/
void uartRxRoutine(void)
{
     174:	df 93       	push	r29
     176:	cf 93       	push	r28
     178:	cd b7       	in	r28, 0x3d	; 61
     17a:	de b7       	in	r29, 0x3e	; 62
	uartRxBuffer[uartRxInPtr] = UDR;        
     17c:	80 91 20 02 	lds	r24, 0x0220
     180:	88 2f       	mov	r24, r24
     182:	90 e0       	ldi	r25, 0x00	; 0
     184:	ec e2       	ldi	r30, 0x2C	; 44
     186:	f0 e0       	ldi	r31, 0x00	; 0
     188:	20 81       	ld	r18, Z
     18a:	fc 01       	movw	r30, r24
     18c:	ee 51       	subi	r30, 0x1E	; 30
     18e:	fe 4f       	sbci	r31, 0xFE	; 254
     190:	20 83       	st	Z, r18
	uartRxInPtr++;
     192:	80 91 20 02 	lds	r24, 0x0220
     196:	8f 5f       	subi	r24, 0xFF	; 255
     198:	80 93 20 02 	sts	0x0220, r24
	uartRxSize++;
     19c:	80 91 1e 02 	lds	r24, 0x021E
     1a0:	8f 5f       	subi	r24, 0xFF	; 255
     1a2:	80 93 1e 02 	sts	0x021E, r24
	//remet à zéro si jamais la taille du buffer est dépassé
	if(uartRxInPtr>(UART_RX_BUFFER_SIZE-1))
     1a6:	80 91 20 02 	lds	r24, 0x0220
     1aa:	8c 33       	cpi	r24, 0x3C	; 60
     1ac:	10 f0       	brcs	.+4      	; 0x1b2 <uartRxRoutine+0x3e>
			uartRxInPtr=0;
     1ae:	10 92 20 02 	sts	0x0220, r1
}
     1b2:	cf 91       	pop	r28
     1b4:	df 91       	pop	r29
     1b6:	08 95       	ret

000001b8 <uartSendString>:

/*
 envoi une chaine de caractère avec caractere de fin
*/ 
void uartSendString(U8 *buf)
{ 
     1b8:	df 93       	push	r29
     1ba:	cf 93       	push	r28
     1bc:	00 d0       	rcall	.+0      	; 0x1be <uartSendString+0x6>
     1be:	0f 92       	push	r0
     1c0:	cd b7       	in	r28, 0x3d	; 61
     1c2:	de b7       	in	r29, 0x3e	; 62
     1c4:	9b 83       	std	Y+3, r25	; 0x03
     1c6:	8a 83       	std	Y+2, r24	; 0x02
	U8 stringSize=0;
     1c8:	19 82       	std	Y+1, r1	; 0x01
     1ca:	23 c0       	rjmp	.+70     	; 0x212 <uartSendString+0x5a>

	//loop tant que le caractere de fin n'est pas trouvé
	while((*buf!=UART_END_OF_STRING_CHAR) && (stringSize<UART_MAX_SIZE_STRING))
	{
		uartTxBuffer[uartTxInPtr]=*buf;
     1cc:	80 91 e0 01 	lds	r24, 0x01E0
     1d0:	88 2f       	mov	r24, r24
     1d2:	90 e0       	ldi	r25, 0x00	; 0
     1d4:	ea 81       	ldd	r30, Y+2	; 0x02
     1d6:	fb 81       	ldd	r31, Y+3	; 0x03
     1d8:	20 81       	ld	r18, Z
     1da:	fc 01       	movw	r30, r24
     1dc:	ee 5d       	subi	r30, 0xDE	; 222
     1de:	fd 4f       	sbci	r31, 0xFD	; 253
     1e0:	20 83       	st	Z, r18

		buf++;
     1e2:	8a 81       	ldd	r24, Y+2	; 0x02
     1e4:	9b 81       	ldd	r25, Y+3	; 0x03
     1e6:	01 96       	adiw	r24, 0x01	; 1
     1e8:	9b 83       	std	Y+3, r25	; 0x03
     1ea:	8a 83       	std	Y+2, r24	; 0x02
		uartTxInPtr++;
     1ec:	80 91 e0 01 	lds	r24, 0x01E0
     1f0:	8f 5f       	subi	r24, 0xFF	; 255
     1f2:	80 93 e0 01 	sts	0x01E0, r24
		uartTxSize++;
     1f6:	80 91 1f 02 	lds	r24, 0x021F
     1fa:	8f 5f       	subi	r24, 0xFF	; 255
     1fc:	80 93 1f 02 	sts	0x021F, r24
		stringSize++;
     200:	89 81       	ldd	r24, Y+1	; 0x01
     202:	8f 5f       	subi	r24, 0xFF	; 255
     204:	89 83       	std	Y+1, r24	; 0x01

		//remet à zéro uartTxInPtr si  dépasse la taille du buffer 
		if(uartTxInPtr>(UART_TX_BUFFER_SIZE-1))
     206:	80 91 e0 01 	lds	r24, 0x01E0
     20a:	8c 33       	cpi	r24, 0x3C	; 60
     20c:	10 f0       	brcs	.+4      	; 0x212 <uartSendString+0x5a>
			uartTxInPtr=0;		
     20e:	10 92 e0 01 	sts	0x01E0, r1
void uartSendString(U8 *buf)
{ 
	U8 stringSize=0;

	//loop tant que le caractere de fin n'est pas trouvé
	while((*buf!=UART_END_OF_STRING_CHAR) && (stringSize<UART_MAX_SIZE_STRING))
     212:	ea 81       	ldd	r30, Y+2	; 0x02
     214:	fb 81       	ldd	r31, Y+3	; 0x03
     216:	80 81       	ld	r24, Z
     218:	88 23       	and	r24, r24
     21a:	19 f0       	breq	.+6      	; 0x222 <uartSendString+0x6a>
     21c:	89 81       	ldd	r24, Y+1	; 0x01
     21e:	8c 33       	cpi	r24, 0x3C	; 60
     220:	a8 f2       	brcs	.-86     	; 0x1cc <uartSendString+0x14>
		if(uartTxInPtr>(UART_TX_BUFFER_SIZE-1))
			uartTxInPtr=0;		
	}

	//envoie le premier byte pour démarrer l'interruption si UDRE est à 1
	if(UCSRA&&(1<<UDRE))
     222:	eb e2       	ldi	r30, 0x2B	; 43
     224:	f0 e0       	ldi	r31, 0x00	; 0
     226:	80 81       	ld	r24, Z
     228:	88 23       	and	r24, r24
     22a:	11 f0       	breq	.+4      	; 0x230 <uartSendString+0x78>
   		 uartTxRoutine();
     22c:	0e 94 8f 00 	call	0x11e	; 0x11e <uartTxRoutine>

}
     230:	0f 90       	pop	r0
     232:	0f 90       	pop	r0
     234:	0f 90       	pop	r0
     236:	cf 91       	pop	r28
     238:	df 91       	pop	r29
     23a:	08 95       	ret

0000023c <uartSendByte>:

/*
 envoi un byte à la fois sur TX
*/
void uartSendByte(U8 byte)
{ 
     23c:	df 93       	push	r29
     23e:	cf 93       	push	r28
     240:	0f 92       	push	r0
     242:	cd b7       	in	r28, 0x3d	; 61
     244:	de b7       	in	r29, 0x3e	; 62
     246:	89 83       	std	Y+1, r24	; 0x01
	
	uartTxBuffer[uartTxInPtr]=byte;
     248:	80 91 e0 01 	lds	r24, 0x01E0
     24c:	88 2f       	mov	r24, r24
     24e:	90 e0       	ldi	r25, 0x00	; 0
     250:	fc 01       	movw	r30, r24
     252:	ee 5d       	subi	r30, 0xDE	; 222
     254:	fd 4f       	sbci	r31, 0xFD	; 253
     256:	89 81       	ldd	r24, Y+1	; 0x01
     258:	80 83       	st	Z, r24
	uartTxInPtr++;
     25a:	80 91 e0 01 	lds	r24, 0x01E0
     25e:	8f 5f       	subi	r24, 0xFF	; 255
     260:	80 93 e0 01 	sts	0x01E0, r24
	uartTxSize++;
     264:	80 91 1f 02 	lds	r24, 0x021F
     268:	8f 5f       	subi	r24, 0xFF	; 255
     26a:	80 93 1f 02 	sts	0x021F, r24
	if(uartTxInPtr>(UART_TX_BUFFER_SIZE-1))
     26e:	80 91 e0 01 	lds	r24, 0x01E0
     272:	8c 33       	cpi	r24, 0x3C	; 60
     274:	10 f0       	brcs	.+4      	; 0x27a <uartSendByte+0x3e>
		uartTxInPtr=0;
     276:	10 92 e0 01 	sts	0x01E0, r1

	//envoie le premier byte pour démarrer l'interruption si UDRE est à 1
   	if(UCSRA&&(1<<UDRE))
     27a:	eb e2       	ldi	r30, 0x2B	; 43
     27c:	f0 e0       	ldi	r31, 0x00	; 0
     27e:	80 81       	ld	r24, Z
     280:	88 23       	and	r24, r24
     282:	11 f0       	breq	.+4      	; 0x288 <uartSendByte+0x4c>
   		uartTxRoutine();
     284:	0e 94 8f 00 	call	0x11e	; 0x11e <uartTxRoutine>
	
}
     288:	0f 90       	pop	r0
     28a:	cf 91       	pop	r28
     28c:	df 91       	pop	r29
     28e:	08 95       	ret

00000290 <uartGetByte>:

/*
	extrait un byte du FIFO de reception
*/
U8 uartGetByte(void)
{ 
     290:	df 93       	push	r29
     292:	cf 93       	push	r28
     294:	0f 92       	push	r0
     296:	cd b7       	in	r28, 0x3d	; 61
     298:	de b7       	in	r29, 0x3e	; 62
	U8 rxByte=0;
     29a:	19 82       	std	Y+1, r1	; 0x01
	if(uartRxSize)
     29c:	80 91 1e 02 	lds	r24, 0x021E
     2a0:	88 23       	and	r24, r24
     2a2:	d1 f0       	breq	.+52     	; 0x2d8 <uartGetByte+0x48>
	{		
		rxByte=uartRxBuffer[uartRxOutPtr];
     2a4:	80 91 e1 01 	lds	r24, 0x01E1
     2a8:	88 2f       	mov	r24, r24
     2aa:	90 e0       	ldi	r25, 0x00	; 0
     2ac:	fc 01       	movw	r30, r24
     2ae:	ee 51       	subi	r30, 0x1E	; 30
     2b0:	fe 4f       	sbci	r31, 0xFE	; 254
     2b2:	80 81       	ld	r24, Z
     2b4:	89 83       	std	Y+1, r24	; 0x01
		uartRxOutPtr++;
     2b6:	80 91 e1 01 	lds	r24, 0x01E1
     2ba:	8f 5f       	subi	r24, 0xFF	; 255
     2bc:	80 93 e1 01 	sts	0x01E1, r24
		//remet à zéro si dépasse la taille du buffer 
		if(uartRxOutPtr>(UART_RX_BUFFER_SIZE-1))
     2c0:	80 91 e1 01 	lds	r24, 0x01E1
     2c4:	8c 33       	cpi	r24, 0x3C	; 60
     2c6:	10 f0       	brcs	.+4      	; 0x2cc <uartGetByte+0x3c>
			uartRxOutPtr=0;
     2c8:	10 92 e1 01 	sts	0x01E1, r1
		uartRxSize--;
     2cc:	80 91 1e 02 	lds	r24, 0x021E
     2d0:	81 50       	subi	r24, 0x01	; 1
     2d2:	80 93 1e 02 	sts	0x021E, r24
     2d6:	04 c0       	rjmp	.+8      	; 0x2e0 <uartGetByte+0x50>
	}
	else
	{
		uartRxOutPtr=0;
     2d8:	10 92 e1 01 	sts	0x01E1, r1
		uartRxInPtr=0;
     2dc:	10 92 20 02 	sts	0x0220, r1
	}
	return rxByte;		
     2e0:	89 81       	ldd	r24, Y+1	; 0x01

}
     2e2:	0f 90       	pop	r0
     2e4:	cf 91       	pop	r28
     2e6:	df 91       	pop	r29
     2e8:	08 95       	ret

000002ea <uartGetRxSize>:

/*
	retourne le nb de byte disponible dans le FIFO de reception
*/
U8 uartGetRxSize(void)
{
     2ea:	df 93       	push	r29
     2ec:	cf 93       	push	r28
     2ee:	cd b7       	in	r28, 0x3d	; 61
     2f0:	de b7       	in	r29, 0x3e	; 62
	return uartRxSize;
     2f2:	80 91 1e 02 	lds	r24, 0x021E
}
     2f6:	cf 91       	pop	r28
     2f8:	df 91       	pop	r29
     2fa:	08 95       	ret

000002fc <uartGetTxSize>:

/*
	retourne le nb de byte dans le buffer d'envoi
*/
U8 uartGetTxSize(void)
{
     2fc:	df 93       	push	r29
     2fe:	cf 93       	push	r28
     300:	cd b7       	in	r28, 0x3d	; 61
     302:	de b7       	in	r29, 0x3e	; 62
	return uartTxSize;
     304:	80 91 1f 02 	lds	r24, 0x021F
}
     308:	cf 91       	pop	r28
     30a:	df 91       	pop	r29
     30c:	08 95       	ret

0000030e <__vector_15>:


//--INTERRUPTS LOOPS--
ISR(USART_TXC_vect)
/* signal handler for uart txd ready interrupt */
{
     30e:	1f 92       	push	r1
     310:	0f 92       	push	r0
     312:	0f b6       	in	r0, 0x3f	; 63
     314:	0f 92       	push	r0
     316:	11 24       	eor	r1, r1
     318:	2f 93       	push	r18
     31a:	3f 93       	push	r19
     31c:	4f 93       	push	r20
     31e:	5f 93       	push	r21
     320:	6f 93       	push	r22
     322:	7f 93       	push	r23
     324:	8f 93       	push	r24
     326:	9f 93       	push	r25
     328:	af 93       	push	r26
     32a:	bf 93       	push	r27
     32c:	ef 93       	push	r30
     32e:	ff 93       	push	r31
     330:	df 93       	push	r29
     332:	cf 93       	push	r28
     334:	cd b7       	in	r28, 0x3d	; 61
     336:	de b7       	in	r29, 0x3e	; 62
    uartTxRoutine();
     338:	0e 94 8f 00 	call	0x11e	; 0x11e <uartTxRoutine>
}
     33c:	cf 91       	pop	r28
     33e:	df 91       	pop	r29
     340:	ff 91       	pop	r31
     342:	ef 91       	pop	r30
     344:	bf 91       	pop	r27
     346:	af 91       	pop	r26
     348:	9f 91       	pop	r25
     34a:	8f 91       	pop	r24
     34c:	7f 91       	pop	r23
     34e:	6f 91       	pop	r22
     350:	5f 91       	pop	r21
     352:	4f 91       	pop	r20
     354:	3f 91       	pop	r19
     356:	2f 91       	pop	r18
     358:	0f 90       	pop	r0
     35a:	0f be       	out	0x3f, r0	; 63
     35c:	0f 90       	pop	r0
     35e:	1f 90       	pop	r1
     360:	18 95       	reti

00000362 <__vector_13>:


ISR(USART_RXC_vect)
/* signal handler for receive complete interrupt */
{
     362:	1f 92       	push	r1
     364:	0f 92       	push	r0
     366:	0f b6       	in	r0, 0x3f	; 63
     368:	0f 92       	push	r0
     36a:	11 24       	eor	r1, r1
     36c:	2f 93       	push	r18
     36e:	3f 93       	push	r19
     370:	4f 93       	push	r20
     372:	5f 93       	push	r21
     374:	6f 93       	push	r22
     376:	7f 93       	push	r23
     378:	8f 93       	push	r24
     37a:	9f 93       	push	r25
     37c:	af 93       	push	r26
     37e:	bf 93       	push	r27
     380:	ef 93       	push	r30
     382:	ff 93       	push	r31
     384:	df 93       	push	r29
     386:	cf 93       	push	r28
     388:	cd b7       	in	r28, 0x3d	; 61
     38a:	de b7       	in	r29, 0x3e	; 62
	uartRxRoutine();  
     38c:	0e 94 ba 00 	call	0x174	; 0x174 <uartRxRoutine>
}
     390:	cf 91       	pop	r28
     392:	df 91       	pop	r29
     394:	ff 91       	pop	r31
     396:	ef 91       	pop	r30
     398:	bf 91       	pop	r27
     39a:	af 91       	pop	r26
     39c:	9f 91       	pop	r25
     39e:	8f 91       	pop	r24
     3a0:	7f 91       	pop	r23
     3a2:	6f 91       	pop	r22
     3a4:	5f 91       	pop	r21
     3a6:	4f 91       	pop	r20
     3a8:	3f 91       	pop	r19
     3aa:	2f 91       	pop	r18
     3ac:	0f 90       	pop	r0
     3ae:	0f be       	out	0x3f, r0	; 63
     3b0:	0f 90       	pop	r0
     3b2:	1f 90       	pop	r1
     3b4:	18 95       	reti

000003b6 <dbgSendDbgString>:




void dbgSendDbgString(U8 *buf)
{	
     3b6:	df 93       	push	r29
     3b8:	cf 93       	push	r28
     3ba:	00 d0       	rcall	.+0      	; 0x3bc <dbgSendDbgString+0x6>
     3bc:	cd b7       	in	r28, 0x3d	; 61
     3be:	de b7       	in	r29, 0x3e	; 62
     3c0:	9a 83       	std	Y+2, r25	; 0x02
     3c2:	89 83       	std	Y+1, r24	; 0x01
		//SEND START BYTE
		uartSendByte(0xFE);
     3c4:	8e ef       	ldi	r24, 0xFE	; 254
     3c6:	0e 94 1e 01 	call	0x23c	; 0x23c <uartSendByte>
		//SEND STRINGS
		uartSendString("Debug: ");
     3ca:	86 e6       	ldi	r24, 0x66	; 102
     3cc:	90 e0       	ldi	r25, 0x00	; 0
     3ce:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <uartSendString>
		uartSendString(buf);
     3d2:	89 81       	ldd	r24, Y+1	; 0x01
     3d4:	9a 81       	ldd	r25, Y+2	; 0x02
     3d6:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <uartSendString>
		//SEND END BYTE
		uartSendByte(0xFF);
     3da:	8f ef       	ldi	r24, 0xFF	; 255
     3dc:	0e 94 1e 01 	call	0x23c	; 0x23c <uartSendByte>
}
     3e0:	0f 90       	pop	r0
     3e2:	0f 90       	pop	r0
     3e4:	cf 91       	pop	r28
     3e6:	df 91       	pop	r29
     3e8:	08 95       	ret

000003ea <dbgSendDbgU16ToDec>:

void dbgSendDbgU16ToDec(U16 value)
{
     3ea:	df 93       	push	r29
     3ec:	cf 93       	push	r28
     3ee:	cd b7       	in	r28, 0x3d	; 61
     3f0:	de b7       	in	r29, 0x3e	; 62
     3f2:	28 97       	sbiw	r28, 0x08	; 8
     3f4:	0f b6       	in	r0, 0x3f	; 63
     3f6:	f8 94       	cli
     3f8:	de bf       	out	0x3e, r29	; 62
     3fa:	0f be       	out	0x3f, r0	; 63
     3fc:	cd bf       	out	0x3d, r28	; 61
     3fe:	98 87       	std	Y+8, r25	; 0x08
     400:	8f 83       	std	Y+7, r24	; 0x07
	U8 buffer[5]={0,0,0,0,0};
     402:	85 e0       	ldi	r24, 0x05	; 5
     404:	fe 01       	movw	r30, r28
     406:	32 96       	adiw	r30, 0x02	; 2
     408:	df 01       	movw	r26, r30
     40a:	98 2f       	mov	r25, r24
     40c:	1d 92       	st	X+, r1
     40e:	9a 95       	dec	r25
     410:	e9 f7       	brne	.-6      	; 0x40c <dbgSendDbgU16ToDec+0x22>
	U8 i=4;	
     412:	84 e0       	ldi	r24, 0x04	; 4
     414:	89 83       	std	Y+1, r24	; 0x01
     416:	1e c0       	rjmp	.+60     	; 0x454 <dbgSendDbgU16ToDec+0x6a>
	while(value!=0)
	{
		buffer[--i]=value%10+0x30;
     418:	89 81       	ldd	r24, Y+1	; 0x01
     41a:	81 50       	subi	r24, 0x01	; 1
     41c:	89 83       	std	Y+1, r24	; 0x01
     41e:	89 81       	ldd	r24, Y+1	; 0x01
     420:	e8 2f       	mov	r30, r24
     422:	f0 e0       	ldi	r31, 0x00	; 0
     424:	8f 81       	ldd	r24, Y+7	; 0x07
     426:	98 85       	ldd	r25, Y+8	; 0x08
     428:	2a e0       	ldi	r18, 0x0A	; 10
     42a:	30 e0       	ldi	r19, 0x00	; 0
     42c:	b9 01       	movw	r22, r18
     42e:	0e 94 6e 13 	call	0x26dc	; 0x26dc <__udivmodhi4>
     432:	28 2f       	mov	r18, r24
     434:	20 5d       	subi	r18, 0xD0	; 208
     436:	ce 01       	movw	r24, r28
     438:	02 96       	adiw	r24, 0x02	; 2
     43a:	e8 0f       	add	r30, r24
     43c:	f9 1f       	adc	r31, r25
     43e:	20 83       	st	Z, r18
		value=value/10;
     440:	8f 81       	ldd	r24, Y+7	; 0x07
     442:	98 85       	ldd	r25, Y+8	; 0x08
     444:	2a e0       	ldi	r18, 0x0A	; 10
     446:	30 e0       	ldi	r19, 0x00	; 0
     448:	b9 01       	movw	r22, r18
     44a:	0e 94 6e 13 	call	0x26dc	; 0x26dc <__udivmodhi4>
     44e:	cb 01       	movw	r24, r22
     450:	98 87       	std	Y+8, r25	; 0x08
     452:	8f 83       	std	Y+7, r24	; 0x07

void dbgSendDbgU16ToDec(U16 value)
{
	U8 buffer[5]={0,0,0,0,0};
	U8 i=4;	
	while(value!=0)
     454:	8f 81       	ldd	r24, Y+7	; 0x07
     456:	98 85       	ldd	r25, Y+8	; 0x08
     458:	00 97       	sbiw	r24, 0x00	; 0
     45a:	f1 f6       	brne	.-68     	; 0x418 <dbgSendDbgU16ToDec+0x2e>
	{
		buffer[--i]=value%10+0x30;
		value=value/10;
	}

	buffer[4]=0;
     45c:	1e 82       	std	Y+6, r1	; 0x06
	dbgSendDbgString(&buffer[i]);
     45e:	89 81       	ldd	r24, Y+1	; 0x01
     460:	28 2f       	mov	r18, r24
     462:	30 e0       	ldi	r19, 0x00	; 0
     464:	ce 01       	movw	r24, r28
     466:	02 96       	adiw	r24, 0x02	; 2
     468:	82 0f       	add	r24, r18
     46a:	93 1f       	adc	r25, r19
     46c:	0e 94 db 01 	call	0x3b6	; 0x3b6 <dbgSendDbgString>
}
     470:	28 96       	adiw	r28, 0x08	; 8
     472:	0f b6       	in	r0, 0x3f	; 63
     474:	f8 94       	cli
     476:	de bf       	out	0x3e, r29	; 62
     478:	0f be       	out	0x3f, r0	; 63
     47a:	cd bf       	out	0x3d, r28	; 61
     47c:	cf 91       	pop	r28
     47e:	df 91       	pop	r29
     480:	08 95       	ret

00000482 <dbgSendRobotString>:

void dbgSendRobotString(U8 *buf)
{	
     482:	df 93       	push	r29
     484:	cf 93       	push	r28
     486:	00 d0       	rcall	.+0      	; 0x488 <dbgSendRobotString+0x6>
     488:	cd b7       	in	r28, 0x3d	; 61
     48a:	de b7       	in	r29, 0x3e	; 62
     48c:	9a 83       	std	Y+2, r25	; 0x02
     48e:	89 83       	std	Y+1, r24	; 0x01
		//SEND START BYTE
		uartSendByte(0xFE);
     490:	8e ef       	ldi	r24, 0xFE	; 254
     492:	0e 94 1e 01 	call	0x23c	; 0x23c <uartSendByte>
		//SEND STRINGS
		uartSendString("Robot: ");
     496:	8e e6       	ldi	r24, 0x6E	; 110
     498:	90 e0       	ldi	r25, 0x00	; 0
     49a:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <uartSendString>
		uartSendString(buf);
     49e:	89 81       	ldd	r24, Y+1	; 0x01
     4a0:	9a 81       	ldd	r25, Y+2	; 0x02
     4a2:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <uartSendString>
		//SEND END BYTE
		uartSendByte(0xFF);
     4a6:	8f ef       	ldi	r24, 0xFF	; 255
     4a8:	0e 94 1e 01 	call	0x23c	; 0x23c <uartSendByte>
}
     4ac:	0f 90       	pop	r0
     4ae:	0f 90       	pop	r0
     4b0:	cf 91       	pop	r28
     4b2:	df 91       	pop	r29
     4b4:	08 95       	ret

000004b6 <cPMainCmdParser>:




void cPMainCmdParser(void)
{
     4b6:	df 93       	push	r29
     4b8:	cf 93       	push	r28
     4ba:	00 d0       	rcall	.+0      	; 0x4bc <cPMainCmdParser+0x6>
     4bc:	00 d0       	rcall	.+0      	; 0x4be <cPMainCmdParser+0x8>
     4be:	cd b7       	in	r28, 0x3d	; 61
     4c0:	de b7       	in	r29, 0x3e	; 62

	if(uartGetRxSize())
     4c2:	0e 94 75 01 	call	0x2ea	; 0x2ea <uartGetRxSize>
     4c6:	88 23       	and	r24, r24
     4c8:	09 f4       	brne	.+2      	; 0x4cc <cPMainCmdParser+0x16>
     4ca:	79 c0       	rjmp	.+242    	; 0x5be <cPMainCmdParser+0x108>
	{
		data=uartGetByte();
     4cc:	0e 94 48 01 	call	0x290	; 0x290 <uartGetByte>
     4d0:	80 93 9e 01 	sts	0x019E, r24
 	  	switch(cPState)
     4d4:	80 91 9a 01 	lds	r24, 0x019A
     4d8:	28 2f       	mov	r18, r24
     4da:	30 e0       	ldi	r19, 0x00	; 0
     4dc:	3c 83       	std	Y+4, r19	; 0x04
     4de:	2b 83       	std	Y+3, r18	; 0x03
     4e0:	8b 81       	ldd	r24, Y+3	; 0x03
     4e2:	9c 81       	ldd	r25, Y+4	; 0x04
     4e4:	82 30       	cpi	r24, 0x02	; 2
     4e6:	91 05       	cpc	r25, r1
     4e8:	09 f4       	brne	.+2      	; 0x4ec <cPMainCmdParser+0x36>
     4ea:	41 c0       	rjmp	.+130    	; 0x56e <cPMainCmdParser+0xb8>
     4ec:	2b 81       	ldd	r18, Y+3	; 0x03
     4ee:	3c 81       	ldd	r19, Y+4	; 0x04
     4f0:	23 30       	cpi	r18, 0x03	; 3
     4f2:	31 05       	cpc	r19, r1
     4f4:	54 f4       	brge	.+20     	; 0x50a <cPMainCmdParser+0x54>
     4f6:	8b 81       	ldd	r24, Y+3	; 0x03
     4f8:	9c 81       	ldd	r25, Y+4	; 0x04
     4fa:	00 97       	sbiw	r24, 0x00	; 0
     4fc:	99 f0       	breq	.+38     	; 0x524 <cPMainCmdParser+0x6e>
     4fe:	2b 81       	ldd	r18, Y+3	; 0x03
     500:	3c 81       	ldd	r19, Y+4	; 0x04
     502:	21 30       	cpi	r18, 0x01	; 1
     504:	31 05       	cpc	r19, r1
     506:	19 f1       	breq	.+70     	; 0x54e <cPMainCmdParser+0x98>
     508:	58 c0       	rjmp	.+176    	; 0x5ba <cPMainCmdParser+0x104>
     50a:	8b 81       	ldd	r24, Y+3	; 0x03
     50c:	9c 81       	ldd	r25, Y+4	; 0x04
     50e:	83 30       	cpi	r24, 0x03	; 3
     510:	91 05       	cpc	r25, r1
     512:	09 f4       	brne	.+2      	; 0x516 <cPMainCmdParser+0x60>
     514:	40 c0       	rjmp	.+128    	; 0x596 <cPMainCmdParser+0xe0>
     516:	2b 81       	ldd	r18, Y+3	; 0x03
     518:	3c 81       	ldd	r19, Y+4	; 0x04
     51a:	24 30       	cpi	r18, 0x04	; 4
     51c:	31 05       	cpc	r19, r1
     51e:	09 f4       	brne	.+2      	; 0x522 <cPMainCmdParser+0x6c>
     520:	43 c0       	rjmp	.+134    	; 0x5a8 <cPMainCmdParser+0xf2>
     522:	4b c0       	rjmp	.+150    	; 0x5ba <cPMainCmdParser+0x104>
 		{
	 		case CP_SYNC_STATE:

				if(data==CP_CMD_NORMALE||data==CP_CMD_ARRET)
     524:	80 91 9e 01 	lds	r24, 0x019E
     528:	81 3f       	cpi	r24, 0xF1	; 241
     52a:	29 f0       	breq	.+10     	; 0x536 <cPMainCmdParser+0x80>
     52c:	80 91 9e 01 	lds	r24, 0x019E
     530:	80 3f       	cpi	r24, 0xF0	; 240
     532:	09 f0       	breq	.+2      	; 0x536 <cPMainCmdParser+0x80>
     534:	44 c0       	rjmp	.+136    	; 0x5be <cPMainCmdParser+0x108>
				{			
					uartSendByte(data);
     536:	80 91 9e 01 	lds	r24, 0x019E
     53a:	0e 94 1e 01 	call	0x23c	; 0x23c <uartSendByte>
					cPCmdValue=data;
     53e:	80 91 9e 01 	lds	r24, 0x019E
     542:	80 93 9b 01 	sts	0x019B, r24
					cPState=CP_GET_VITESSE_STATE;
     546:	81 e0       	ldi	r24, 0x01	; 1
     548:	80 93 9a 01 	sts	0x019A, r24
     54c:	38 c0       	rjmp	.+112    	; 0x5be <cPMainCmdParser+0x108>

			break;

			case CP_GET_VITESSE_STATE:
			
				if( (cPVitesseValue!=data) && (data==0) )
     54e:	30 91 9c 01 	lds	r19, 0x019C
     552:	80 91 9e 01 	lds	r24, 0x019E
				{
//					dbgSendDbgString("vitesse=0");
				}

				cPVitesseValue=data;
     556:	80 91 9e 01 	lds	r24, 0x019E
     55a:	80 93 9c 01 	sts	0x019C, r24
				uartSendByte(data);
     55e:	80 91 9e 01 	lds	r24, 0x019E
     562:	0e 94 1e 01 	call	0x23c	; 0x23c <uartSendByte>
				cPState=CP_GET_ANGLE_STATE;			
     566:	82 e0       	ldi	r24, 0x02	; 2
     568:	80 93 9a 01 	sts	0x019A, r24
     56c:	28 c0       	rjmp	.+80     	; 0x5be <cPMainCmdParser+0x108>
			break;


			case CP_GET_ANGLE_STATE:

				cPAngleValue=data;
     56e:	80 91 9e 01 	lds	r24, 0x019E
     572:	80 93 9d 01 	sts	0x019D, r24
				uartSendByte(data);
     576:	80 91 9e 01 	lds	r24, 0x019E
     57a:	0e 94 1e 01 	call	0x23c	; 0x23c <uartSendByte>

				if(cPCmdValue==CP_CMD_NORMALE)
     57e:	80 91 9b 01 	lds	r24, 0x019B
     582:	81 3f       	cpi	r24, 0xF1	; 241
     584:	21 f4       	brne	.+8      	; 0x58e <cPMainCmdParser+0xd8>
					cPState=CP_RUN_STATE;
     586:	84 e0       	ldi	r24, 0x04	; 4
     588:	80 93 9a 01 	sts	0x019A, r24
     58c:	18 c0       	rjmp	.+48     	; 0x5be <cPMainCmdParser+0x108>
				else
					cPState=CP_ARRET_STATE;
     58e:	83 e0       	ldi	r24, 0x03	; 3
     590:	80 93 9a 01 	sts	0x019A, r24
     594:	14 c0       	rjmp	.+40     	; 0x5be <cPMainCmdParser+0x108>
			break;

			case CP_ARRET_STATE:

				cPState=CP_SYNC_STATE;
     596:	10 92 9a 01 	sts	0x019A, r1
				(void)moteurControl(cPVitesseValue,0,M_ARRET);
     59a:	80 91 9c 01 	lds	r24, 0x019C
     59e:	60 e0       	ldi	r22, 0x00	; 0
     5a0:	42 e0       	ldi	r20, 0x02	; 2
     5a2:	0e 94 cc 08 	call	0x1198	; 0x1198 <moteurControl>
     5a6:	0b c0       	rjmp	.+22     	; 0x5be <cPMainCmdParser+0x108>

			break;

			case CP_RUN_STATE:

				cPState=CP_SYNC_STATE;
     5a8:	10 92 9a 01 	sts	0x019A, r1
			//	dbgSendDbgString("run");
			  //	PORTB=~cPAngleValue;
				(void)moteurControl(cPVitesseValue,0,M_MARCHE);
     5ac:	80 91 9c 01 	lds	r24, 0x019C
     5b0:	60 e0       	ldi	r22, 0x00	; 0
     5b2:	40 e0       	ldi	r20, 0x00	; 0
     5b4:	0e 94 cc 08 	call	0x1198	; 0x1198 <moteurControl>
     5b8:	02 c0       	rjmp	.+4      	; 0x5be <cPMainCmdParser+0x108>

			break;

			default:
				cPState=CP_SYNC_STATE;
     5ba:	10 92 9a 01 	sts	0x019A, r1
 		}

	}


}
     5be:	0f 90       	pop	r0
     5c0:	0f 90       	pop	r0
     5c2:	0f 90       	pop	r0
     5c4:	0f 90       	pop	r0
     5c6:	cf 91       	pop	r28
     5c8:	df 91       	pop	r29
     5ca:	08 95       	ret

000005cc <hdInit>:
#include "uart.h"



void hdInit(void)
{
     5cc:	df 93       	push	r29
     5ce:	cf 93       	push	r28
     5d0:	cd b7       	in	r28, 0x3d	; 61
     5d2:	de b7       	in	r29, 0x3e	; 62
	//init leds port
	DDRB = 0xff; 
     5d4:	e7 e3       	ldi	r30, 0x37	; 55
     5d6:	f0 e0       	ldi	r31, 0x00	; 0
     5d8:	8f ef       	ldi	r24, 0xFF	; 255
     5da:	80 83       	st	Z, r24
	DDRD = 0xfe;
     5dc:	e1 e3       	ldi	r30, 0x31	; 49
     5de:	f0 e0       	ldi	r31, 0x00	; 0
     5e0:	8e ef       	ldi	r24, 0xFE	; 254
     5e2:	80 83       	st	Z, r24
	//init Uart
	uartInit();	
     5e4:	0e 94 77 00 	call	0xee	; 0xee <uartInit>

}
     5e8:	cf 91       	pop	r28
     5ea:	df 91       	pop	r29
     5ec:	08 95       	ret

000005ee <pwmInit>:
volatile U16 pwmOCR1B_value=0;
tREG08 pwmPortDREG;
U16 period=10000;

void pwmInit(void)
{
     5ee:	df 93       	push	r29
     5f0:	cf 93       	push	r28
     5f2:	cd b7       	in	r28, 0x3d	; 61
     5f4:	de b7       	in	r29, 0x3e	; 62
  //com1b1=1
  TCCR1A=(1<<COM1A1)|(0<<COM1A0)|(1<<COM1B1)|(0<<COM1B0)|(0<<FOC1A)|(0<<FOC1B)|(1<<WGM11)|(0<<WGM10);
     5f6:	ef e4       	ldi	r30, 0x4F	; 79
     5f8:	f0 e0       	ldi	r31, 0x00	; 0
     5fa:	82 ea       	ldi	r24, 0xA2	; 162
     5fc:	80 83       	st	Z, r24
  TCCR1B=(0<<ICNC1)|(0<<ICES1)|(1<<WGM13)|(1<<WGM12)|(0<<CS12)|(1<<CS11)|(0<<CS10);
     5fe:	ee e4       	ldi	r30, 0x4E	; 78
     600:	f0 e0       	ldi	r31, 0x00	; 0
     602:	8a e1       	ldi	r24, 0x1A	; 26
     604:	80 83       	st	Z, r24
  //overflow interruption on
  TIMSK=(0<<TICIE1)|(0<<OCIE1A)|(0<<OCIE1B)|(1<<TOIE1);
     606:	e9 e5       	ldi	r30, 0x59	; 89
     608:	f0 e0       	ldi	r31, 0x00	; 0
     60a:	84 e0       	ldi	r24, 0x04	; 4
     60c:	80 83       	st	Z, r24

  //ajustement de la periode de 5mS
//  ICR1H=0x27;
//  ICR1L=0x10;
	ICR1=0x2710;
     60e:	e6 e4       	ldi	r30, 0x46	; 70
     610:	f0 e0       	ldi	r31, 0x00	; 0
     612:	80 e1       	ldi	r24, 0x10	; 16
     614:	97 e2       	ldi	r25, 0x27	; 39
     616:	91 83       	std	Z+1, r25	; 0x01
     618:	80 83       	st	Z, r24
  OCR1A=0;
     61a:	ea e4       	ldi	r30, 0x4A	; 74
     61c:	f0 e0       	ldi	r31, 0x00	; 0
     61e:	11 82       	std	Z+1, r1	; 0x01
     620:	10 82       	st	Z, r1
  OCR1B=0;
     622:	e8 e4       	ldi	r30, 0x48	; 72
     624:	f0 e0       	ldi	r31, 0x00	; 0
     626:	11 82       	std	Z+1, r1	; 0x01
     628:	10 82       	st	Z, r1
}
     62a:	cf 91       	pop	r28
     62c:	df 91       	pop	r29
     62e:	08 95       	ret

00000630 <pwmSetDutyValue>:

void pwmSetDutyValue(U16 valueD,U16 valueG,U8 portValue)
{
     630:	df 93       	push	r29
     632:	cf 93       	push	r28
     634:	00 d0       	rcall	.+0      	; 0x636 <pwmSetDutyValue+0x6>
     636:	00 d0       	rcall	.+0      	; 0x638 <pwmSetDutyValue+0x8>
     638:	0f 92       	push	r0
     63a:	cd b7       	in	r28, 0x3d	; 61
     63c:	de b7       	in	r29, 0x3e	; 62
     63e:	9a 83       	std	Y+2, r25	; 0x02
     640:	89 83       	std	Y+1, r24	; 0x01
     642:	7c 83       	std	Y+4, r23	; 0x04
     644:	6b 83       	std	Y+3, r22	; 0x03
     646:	4d 83       	std	Y+5, r20	; 0x05
	pwmOCR1A_value=valueD;
     648:	89 81       	ldd	r24, Y+1	; 0x01
     64a:	9a 81       	ldd	r25, Y+2	; 0x02
     64c:	90 93 a0 01 	sts	0x01A0, r25
     650:	80 93 9f 01 	sts	0x019F, r24
	pwmOCR1B_value=valueG;
     654:	8b 81       	ldd	r24, Y+3	; 0x03
     656:	9c 81       	ldd	r25, Y+4	; 0x04
     658:	90 93 a2 01 	sts	0x01A2, r25
     65c:	80 93 a1 01 	sts	0x01A1, r24
	pwmPortDREG.byte=portValue;
     660:	8d 81       	ldd	r24, Y+5	; 0x05
     662:	80 93 5e 02 	sts	0x025E, r24
}
     666:	0f 90       	pop	r0
     668:	0f 90       	pop	r0
     66a:	0f 90       	pop	r0
     66c:	0f 90       	pop	r0
     66e:	0f 90       	pop	r0
     670:	cf 91       	pop	r28
     672:	df 91       	pop	r29
     674:	08 95       	ret

00000676 <__vector_9>:


ISR(TIMER1_OVF_vect)
{
     676:	1f 92       	push	r1
     678:	0f 92       	push	r0
     67a:	0f b6       	in	r0, 0x3f	; 63
     67c:	0f 92       	push	r0
     67e:	11 24       	eor	r1, r1
     680:	8f 93       	push	r24
     682:	9f 93       	push	r25
     684:	ef 93       	push	r30
     686:	ff 93       	push	r31
     688:	df 93       	push	r29
     68a:	cf 93       	push	r28
     68c:	cd b7       	in	r28, 0x3d	; 61
     68e:	de b7       	in	r29, 0x3e	; 62
	OCR1A=pwmOCR1A_value;
     690:	ea e4       	ldi	r30, 0x4A	; 74
     692:	f0 e0       	ldi	r31, 0x00	; 0
     694:	80 91 9f 01 	lds	r24, 0x019F
     698:	90 91 a0 01 	lds	r25, 0x01A0
     69c:	91 83       	std	Z+1, r25	; 0x01
     69e:	80 83       	st	Z, r24
	OCR1B=pwmOCR1B_value;
     6a0:	e8 e4       	ldi	r30, 0x48	; 72
     6a2:	f0 e0       	ldi	r31, 0x00	; 0
     6a4:	80 91 a1 01 	lds	r24, 0x01A1
     6a8:	90 91 a2 01 	lds	r25, 0x01A2
     6ac:	91 83       	std	Z+1, r25	; 0x01
     6ae:	80 83       	st	Z, r24
	pwmPortDREG.bit.b4=1;
     6b0:	80 91 5e 02 	lds	r24, 0x025E
     6b4:	80 61       	ori	r24, 0x10	; 16
     6b6:	80 93 5e 02 	sts	0x025E, r24
	pwmPortDREG.bit.b5=1;
     6ba:	80 91 5e 02 	lds	r24, 0x025E
     6be:	80 62       	ori	r24, 0x20	; 32
     6c0:	80 93 5e 02 	sts	0x025E, r24
	PORTD=pwmPortDREG.byte;
     6c4:	e2 e3       	ldi	r30, 0x32	; 50
     6c6:	f0 e0       	ldi	r31, 0x00	; 0
     6c8:	80 91 5e 02 	lds	r24, 0x025E
     6cc:	80 83       	st	Z, r24
}
     6ce:	cf 91       	pop	r28
     6d0:	df 91       	pop	r29
     6d2:	ff 91       	pop	r31
     6d4:	ef 91       	pop	r30
     6d6:	9f 91       	pop	r25
     6d8:	8f 91       	pop	r24
     6da:	0f 90       	pop	r0
     6dc:	0f be       	out	0x3f, r0	; 63
     6de:	0f 90       	pop	r0
     6e0:	1f 90       	pop	r1
     6e2:	18 95       	reti

000006e4 <CalculPWM>:
#define M_DIR_D1 mPortDREG.bit.b6
#define M_DIR_D2 mPortDREG.bit.b7


void CalculPWM(float Vitesse_D, float Angle_D, float Vg, float Vd, float *Duty_G, float *Duty_D)
{
     6e4:	8f 92       	push	r8
     6e6:	9f 92       	push	r9
     6e8:	af 92       	push	r10
     6ea:	bf 92       	push	r11
     6ec:	cf 92       	push	r12
     6ee:	df 92       	push	r13
     6f0:	ef 92       	push	r14
     6f2:	ff 92       	push	r15
     6f4:	0f 93       	push	r16
     6f6:	1f 93       	push	r17
     6f8:	df 93       	push	r29
     6fa:	cf 93       	push	r28
     6fc:	cd b7       	in	r28, 0x3d	; 61
     6fe:	de b7       	in	r29, 0x3e	; 62
     700:	c6 55       	subi	r28, 0x56	; 86
     702:	d0 40       	sbci	r29, 0x00	; 0
     704:	0f b6       	in	r0, 0x3f	; 63
     706:	f8 94       	cli
     708:	de bf       	out	0x3e, r29	; 62
     70a:	0f be       	out	0x3f, r0	; 63
     70c:	cd bf       	out	0x3d, r28	; 61
     70e:	69 83       	std	Y+1, r22	; 0x01
     710:	7a 83       	std	Y+2, r23	; 0x02
     712:	8b 83       	std	Y+3, r24	; 0x03
     714:	9c 83       	std	Y+4, r25	; 0x04
     716:	2d 83       	std	Y+5, r18	; 0x05
     718:	3e 83       	std	Y+6, r19	; 0x06
     71a:	4f 83       	std	Y+7, r20	; 0x07
     71c:	58 87       	std	Y+8, r21	; 0x08
     71e:	e9 86       	std	Y+9, r14	; 0x09
     720:	fa 86       	std	Y+10, r15	; 0x0a
     722:	0b 87       	std	Y+11, r16	; 0x0b
     724:	1c 87       	std	Y+12, r17	; 0x0c
     726:	ad 86       	std	Y+13, r10	; 0x0d
     728:	be 86       	std	Y+14, r11	; 0x0e
     72a:	cf 86       	std	Y+15, r12	; 0x0f
     72c:	d8 8a       	std	Y+16, r13	; 0x10
     72e:	9a 8a       	std	Y+18, r9	; 0x12
     730:	89 8a       	std	Y+17, r8	; 0x11
	static float Ua     = 0.0;
	static int 	 Signe_Ua = 0;
	static int 	 Signe_Ut = 0;


	Vg = (Vg > 1.0) ? 1.0 : ((Vg < -1.0) ? -1.0 : Vg);  /* Regarde les limites (-1.0 à 1.0) */
     732:	69 85       	ldd	r22, Y+9	; 0x09
     734:	7a 85       	ldd	r23, Y+10	; 0x0a
     736:	8b 85       	ldd	r24, Y+11	; 0x0b
     738:	9c 85       	ldd	r25, Y+12	; 0x0c
     73a:	20 e0       	ldi	r18, 0x00	; 0
     73c:	30 e0       	ldi	r19, 0x00	; 0
     73e:	40 e8       	ldi	r20, 0x80	; 128
     740:	5f e3       	ldi	r21, 0x3F	; 63
     742:	0e 94 8e 0f 	call	0x1f1c	; 0x1f1c <__gtsf2>
     746:	18 16       	cp	r1, r24
     748:	5c f4       	brge	.+22     	; 0x760 <CalculPWM+0x7c>
     74a:	80 e0       	ldi	r24, 0x00	; 0
     74c:	90 e0       	ldi	r25, 0x00	; 0
     74e:	a0 e8       	ldi	r26, 0x80	; 128
     750:	bf e3       	ldi	r27, 0x3F	; 63
     752:	67 96       	adiw	r28, 0x17	; 23
     754:	8c af       	std	Y+60, r24	; 0x3c
     756:	9d af       	std	Y+61, r25	; 0x3d
     758:	ae af       	std	Y+62, r26	; 0x3e
     75a:	bf af       	std	Y+63, r27	; 0x3f
     75c:	67 97       	sbiw	r28, 0x17	; 23
     75e:	2d c0       	rjmp	.+90     	; 0x7ba <CalculPWM+0xd6>
     760:	69 85       	ldd	r22, Y+9	; 0x09
     762:	7a 85       	ldd	r23, Y+10	; 0x0a
     764:	8b 85       	ldd	r24, Y+11	; 0x0b
     766:	9c 85       	ldd	r25, Y+12	; 0x0c
     768:	20 e0       	ldi	r18, 0x00	; 0
     76a:	30 e0       	ldi	r19, 0x00	; 0
     76c:	40 e8       	ldi	r20, 0x80	; 128
     76e:	5f eb       	ldi	r21, 0xBF	; 191
     770:	0e 94 ee 0f 	call	0x1fdc	; 0x1fdc <__ltsf2>
     774:	88 23       	and	r24, r24
     776:	5c f4       	brge	.+22     	; 0x78e <CalculPWM+0xaa>
     778:	80 e0       	ldi	r24, 0x00	; 0
     77a:	90 e0       	ldi	r25, 0x00	; 0
     77c:	a0 e8       	ldi	r26, 0x80	; 128
     77e:	bf eb       	ldi	r27, 0xBF	; 191
     780:	63 96       	adiw	r28, 0x13	; 19
     782:	8c af       	std	Y+60, r24	; 0x3c
     784:	9d af       	std	Y+61, r25	; 0x3d
     786:	ae af       	std	Y+62, r26	; 0x3e
     788:	bf af       	std	Y+63, r27	; 0x3f
     78a:	63 97       	sbiw	r28, 0x13	; 19
     78c:	0a c0       	rjmp	.+20     	; 0x7a2 <CalculPWM+0xbe>
     78e:	89 85       	ldd	r24, Y+9	; 0x09
     790:	9a 85       	ldd	r25, Y+10	; 0x0a
     792:	ab 85       	ldd	r26, Y+11	; 0x0b
     794:	bc 85       	ldd	r27, Y+12	; 0x0c
     796:	63 96       	adiw	r28, 0x13	; 19
     798:	8c af       	std	Y+60, r24	; 0x3c
     79a:	9d af       	std	Y+61, r25	; 0x3d
     79c:	ae af       	std	Y+62, r26	; 0x3e
     79e:	bf af       	std	Y+63, r27	; 0x3f
     7a0:	63 97       	sbiw	r28, 0x13	; 19
     7a2:	63 96       	adiw	r28, 0x13	; 19
     7a4:	8c ad       	ldd	r24, Y+60	; 0x3c
     7a6:	9d ad       	ldd	r25, Y+61	; 0x3d
     7a8:	ae ad       	ldd	r26, Y+62	; 0x3e
     7aa:	bf ad       	ldd	r27, Y+63	; 0x3f
     7ac:	63 97       	sbiw	r28, 0x13	; 19
     7ae:	67 96       	adiw	r28, 0x17	; 23
     7b0:	8c af       	std	Y+60, r24	; 0x3c
     7b2:	9d af       	std	Y+61, r25	; 0x3d
     7b4:	ae af       	std	Y+62, r26	; 0x3e
     7b6:	bf af       	std	Y+63, r27	; 0x3f
     7b8:	67 97       	sbiw	r28, 0x17	; 23
     7ba:	67 96       	adiw	r28, 0x17	; 23
     7bc:	8c ad       	ldd	r24, Y+60	; 0x3c
     7be:	9d ad       	ldd	r25, Y+61	; 0x3d
     7c0:	ae ad       	ldd	r26, Y+62	; 0x3e
     7c2:	bf ad       	ldd	r27, Y+63	; 0x3f
     7c4:	67 97       	sbiw	r28, 0x17	; 23
     7c6:	89 87       	std	Y+9, r24	; 0x09
     7c8:	9a 87       	std	Y+10, r25	; 0x0a
     7ca:	ab 87       	std	Y+11, r26	; 0x0b
     7cc:	bc 87       	std	Y+12, r27	; 0x0c
	Vd = (Vd > 1.0) ? 1.0 : ((Vd < -1.0) ? -1.0 : Vd);  /* Regarde les limites (-1.0 à 1.0) */
     7ce:	6d 85       	ldd	r22, Y+13	; 0x0d
     7d0:	7e 85       	ldd	r23, Y+14	; 0x0e
     7d2:	8f 85       	ldd	r24, Y+15	; 0x0f
     7d4:	98 89       	ldd	r25, Y+16	; 0x10
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e8       	ldi	r20, 0x80	; 128
     7dc:	5f e3       	ldi	r21, 0x3F	; 63
     7de:	0e 94 8e 0f 	call	0x1f1c	; 0x1f1c <__gtsf2>
     7e2:	18 16       	cp	r1, r24
     7e4:	5c f4       	brge	.+22     	; 0x7fc <CalculPWM+0x118>
     7e6:	80 e0       	ldi	r24, 0x00	; 0
     7e8:	90 e0       	ldi	r25, 0x00	; 0
     7ea:	a0 e8       	ldi	r26, 0x80	; 128
     7ec:	bf e3       	ldi	r27, 0x3F	; 63
     7ee:	2f 96       	adiw	r28, 0x0f	; 15
     7f0:	8c af       	std	Y+60, r24	; 0x3c
     7f2:	9d af       	std	Y+61, r25	; 0x3d
     7f4:	ae af       	std	Y+62, r26	; 0x3e
     7f6:	bf af       	std	Y+63, r27	; 0x3f
     7f8:	2f 97       	sbiw	r28, 0x0f	; 15
     7fa:	2d c0       	rjmp	.+90     	; 0x856 <CalculPWM+0x172>
     7fc:	6d 85       	ldd	r22, Y+13	; 0x0d
     7fe:	7e 85       	ldd	r23, Y+14	; 0x0e
     800:	8f 85       	ldd	r24, Y+15	; 0x0f
     802:	98 89       	ldd	r25, Y+16	; 0x10
     804:	20 e0       	ldi	r18, 0x00	; 0
     806:	30 e0       	ldi	r19, 0x00	; 0
     808:	40 e8       	ldi	r20, 0x80	; 128
     80a:	5f eb       	ldi	r21, 0xBF	; 191
     80c:	0e 94 ee 0f 	call	0x1fdc	; 0x1fdc <__ltsf2>
     810:	88 23       	and	r24, r24
     812:	5c f4       	brge	.+22     	; 0x82a <CalculPWM+0x146>
     814:	80 e0       	ldi	r24, 0x00	; 0
     816:	90 e0       	ldi	r25, 0x00	; 0
     818:	a0 e8       	ldi	r26, 0x80	; 128
     81a:	bf eb       	ldi	r27, 0xBF	; 191
     81c:	2b 96       	adiw	r28, 0x0b	; 11
     81e:	8c af       	std	Y+60, r24	; 0x3c
     820:	9d af       	std	Y+61, r25	; 0x3d
     822:	ae af       	std	Y+62, r26	; 0x3e
     824:	bf af       	std	Y+63, r27	; 0x3f
     826:	2b 97       	sbiw	r28, 0x0b	; 11
     828:	0a c0       	rjmp	.+20     	; 0x83e <CalculPWM+0x15a>
     82a:	8d 85       	ldd	r24, Y+13	; 0x0d
     82c:	9e 85       	ldd	r25, Y+14	; 0x0e
     82e:	af 85       	ldd	r26, Y+15	; 0x0f
     830:	b8 89       	ldd	r27, Y+16	; 0x10
     832:	2b 96       	adiw	r28, 0x0b	; 11
     834:	8c af       	std	Y+60, r24	; 0x3c
     836:	9d af       	std	Y+61, r25	; 0x3d
     838:	ae af       	std	Y+62, r26	; 0x3e
     83a:	bf af       	std	Y+63, r27	; 0x3f
     83c:	2b 97       	sbiw	r28, 0x0b	; 11
     83e:	2b 96       	adiw	r28, 0x0b	; 11
     840:	8c ad       	ldd	r24, Y+60	; 0x3c
     842:	9d ad       	ldd	r25, Y+61	; 0x3d
     844:	ae ad       	ldd	r26, Y+62	; 0x3e
     846:	bf ad       	ldd	r27, Y+63	; 0x3f
     848:	2b 97       	sbiw	r28, 0x0b	; 11
     84a:	2f 96       	adiw	r28, 0x0f	; 15
     84c:	8c af       	std	Y+60, r24	; 0x3c
     84e:	9d af       	std	Y+61, r25	; 0x3d
     850:	ae af       	std	Y+62, r26	; 0x3e
     852:	bf af       	std	Y+63, r27	; 0x3f
     854:	2f 97       	sbiw	r28, 0x0f	; 15
     856:	2f 96       	adiw	r28, 0x0f	; 15
     858:	8c ad       	ldd	r24, Y+60	; 0x3c
     85a:	9d ad       	ldd	r25, Y+61	; 0x3d
     85c:	ae ad       	ldd	r26, Y+62	; 0x3e
     85e:	bf ad       	ldd	r27, Y+63	; 0x3f
     860:	2f 97       	sbiw	r28, 0x0f	; 15
     862:	8d 87       	std	Y+13, r24	; 0x0d
     864:	9e 87       	std	Y+14, r25	; 0x0e
     866:	af 87       	std	Y+15, r26	; 0x0f
     868:	b8 8b       	std	Y+16, r27	; 0x10
		
	Old_W = W;
     86a:	80 91 d4 01 	lds	r24, 0x01D4
     86e:	90 91 d5 01 	lds	r25, 0x01D5
     872:	a0 91 d6 01 	lds	r26, 0x01D6
     876:	b0 91 d7 01 	lds	r27, 0x01D7
     87a:	80 93 d0 01 	sts	0x01D0, r24
     87e:	90 93 d1 01 	sts	0x01D1, r25
     882:	a0 93 d2 01 	sts	0x01D2, r26
     886:	b0 93 d3 01 	sts	0x01D3, r27
	W     = 0.5*(Vmax/RAYON)*(Vd-Vg);
     88a:	6d 85       	ldd	r22, Y+13	; 0x0d
     88c:	7e 85       	ldd	r23, Y+14	; 0x0e
     88e:	8f 85       	ldd	r24, Y+15	; 0x0f
     890:	98 89       	ldd	r25, Y+16	; 0x10
     892:	29 85       	ldd	r18, Y+9	; 0x09
     894:	3a 85       	ldd	r19, Y+10	; 0x0a
     896:	4b 85       	ldd	r20, Y+11	; 0x0b
     898:	5c 85       	ldd	r21, Y+12	; 0x0c
     89a:	0e 94 8a 0d 	call	0x1b14	; 0x1b14 <__subsf3>
     89e:	dc 01       	movw	r26, r24
     8a0:	cb 01       	movw	r24, r22
     8a2:	bc 01       	movw	r22, r24
     8a4:	cd 01       	movw	r24, r26
     8a6:	2a e1       	ldi	r18, 0x1A	; 26
     8a8:	32 e6       	ldi	r19, 0x62	; 98
     8aa:	46 e8       	ldi	r20, 0x86	; 134
     8ac:	50 e4       	ldi	r21, 0x40	; 64
     8ae:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <__mulsf3>
     8b2:	dc 01       	movw	r26, r24
     8b4:	cb 01       	movw	r24, r22
     8b6:	80 93 d4 01 	sts	0x01D4, r24
     8ba:	90 93 d5 01 	sts	0x01D5, r25
     8be:	a0 93 d6 01 	sts	0x01D6, r26
     8c2:	b0 93 d7 01 	sts	0x01D7, r27
	Vt    = 0.5*(Vd+Vg);
     8c6:	6d 85       	ldd	r22, Y+13	; 0x0d
     8c8:	7e 85       	ldd	r23, Y+14	; 0x0e
     8ca:	8f 85       	ldd	r24, Y+15	; 0x0f
     8cc:	98 89       	ldd	r25, Y+16	; 0x10
     8ce:	29 85       	ldd	r18, Y+9	; 0x09
     8d0:	3a 85       	ldd	r19, Y+10	; 0x0a
     8d2:	4b 85       	ldd	r20, Y+11	; 0x0b
     8d4:	5c 85       	ldd	r21, Y+12	; 0x0c
     8d6:	0e 94 bb 0d 	call	0x1b76	; 0x1b76 <__addsf3>
     8da:	dc 01       	movw	r26, r24
     8dc:	cb 01       	movw	r24, r22
     8de:	bc 01       	movw	r22, r24
     8e0:	cd 01       	movw	r24, r26
     8e2:	20 e0       	ldi	r18, 0x00	; 0
     8e4:	30 e0       	ldi	r19, 0x00	; 0
     8e6:	40 e0       	ldi	r20, 0x00	; 0
     8e8:	5f e3       	ldi	r21, 0x3F	; 63
     8ea:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <__mulsf3>
     8ee:	dc 01       	movw	r26, r24
     8f0:	cb 01       	movw	r24, r22
     8f2:	80 93 cc 01 	sts	0x01CC, r24
     8f6:	90 93 cd 01 	sts	0x01CD, r25
     8fa:	a0 93 ce 01 	sts	0x01CE, r26
     8fe:	b0 93 cf 01 	sts	0x01CF, r27

	Angle =  Angle + (0.5)*TS*(W+Old_W);
     902:	80 91 d4 01 	lds	r24, 0x01D4
     906:	90 91 d5 01 	lds	r25, 0x01D5
     90a:	a0 91 d6 01 	lds	r26, 0x01D6
     90e:	b0 91 d7 01 	lds	r27, 0x01D7
     912:	20 91 d0 01 	lds	r18, 0x01D0
     916:	30 91 d1 01 	lds	r19, 0x01D1
     91a:	40 91 d2 01 	lds	r20, 0x01D2
     91e:	50 91 d3 01 	lds	r21, 0x01D3
     922:	bc 01       	movw	r22, r24
     924:	cd 01       	movw	r24, r26
     926:	0e 94 bb 0d 	call	0x1b76	; 0x1b76 <__addsf3>
     92a:	dc 01       	movw	r26, r24
     92c:	cb 01       	movw	r24, r22
     92e:	bc 01       	movw	r22, r24
     930:	cd 01       	movw	r24, r26
     932:	2a e0       	ldi	r18, 0x0A	; 10
     934:	37 ed       	ldi	r19, 0xD7	; 215
     936:	43 e2       	ldi	r20, 0x23	; 35
     938:	5b e3       	ldi	r21, 0x3B	; 59
     93a:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <__mulsf3>
     93e:	dc 01       	movw	r26, r24
     940:	cb 01       	movw	r24, r22
     942:	20 91 dc 01 	lds	r18, 0x01DC
     946:	30 91 dd 01 	lds	r19, 0x01DD
     94a:	40 91 de 01 	lds	r20, 0x01DE
     94e:	50 91 df 01 	lds	r21, 0x01DF
     952:	bc 01       	movw	r22, r24
     954:	cd 01       	movw	r24, r26
     956:	0e 94 bb 0d 	call	0x1b76	; 0x1b76 <__addsf3>
     95a:	dc 01       	movw	r26, r24
     95c:	cb 01       	movw	r24, r22
     95e:	80 93 dc 01 	sts	0x01DC, r24
     962:	90 93 dd 01 	sts	0x01DD, r25
     966:	a0 93 de 01 	sts	0x01DE, r26
     96a:	b0 93 df 01 	sts	0x01DF, r27
	Angle = (Angle > 2.0*Pi) ? Angle - 2*Pi : ((Angle < 0.0) ? Angle + 2*Pi : Angle); /* Angle entre 0 et 2 pi */
     96e:	80 91 dc 01 	lds	r24, 0x01DC
     972:	90 91 dd 01 	lds	r25, 0x01DD
     976:	a0 91 de 01 	lds	r26, 0x01DE
     97a:	b0 91 df 01 	lds	r27, 0x01DF
     97e:	bc 01       	movw	r22, r24
     980:	cd 01       	movw	r24, r26
     982:	2b ed       	ldi	r18, 0xDB	; 219
     984:	3f e0       	ldi	r19, 0x0F	; 15
     986:	49 ec       	ldi	r20, 0xC9	; 201
     988:	50 e4       	ldi	r21, 0x40	; 64
     98a:	0e 94 8e 0f 	call	0x1f1c	; 0x1f1c <__gtsf2>
     98e:	18 16       	cp	r1, r24
     990:	cc f4       	brge	.+50     	; 0x9c4 <__stack+0x165>
     992:	80 91 dc 01 	lds	r24, 0x01DC
     996:	90 91 dd 01 	lds	r25, 0x01DD
     99a:	a0 91 de 01 	lds	r26, 0x01DE
     99e:	b0 91 df 01 	lds	r27, 0x01DF
     9a2:	bc 01       	movw	r22, r24
     9a4:	cd 01       	movw	r24, r26
     9a6:	2b ed       	ldi	r18, 0xDB	; 219
     9a8:	3f e0       	ldi	r19, 0x0F	; 15
     9aa:	49 ec       	ldi	r20, 0xC9	; 201
     9ac:	50 e4       	ldi	r21, 0x40	; 64
     9ae:	0e 94 8a 0d 	call	0x1b14	; 0x1b14 <__subsf3>
     9b2:	dc 01       	movw	r26, r24
     9b4:	cb 01       	movw	r24, r22
     9b6:	27 96       	adiw	r28, 0x07	; 7
     9b8:	8c af       	std	Y+60, r24	; 0x3c
     9ba:	9d af       	std	Y+61, r25	; 0x3d
     9bc:	ae af       	std	Y+62, r26	; 0x3e
     9be:	bf af       	std	Y+63, r27	; 0x3f
     9c0:	27 97       	sbiw	r28, 0x07	; 7
     9c2:	45 c0       	rjmp	.+138    	; 0xa4e <__stack+0x1ef>
     9c4:	80 91 dc 01 	lds	r24, 0x01DC
     9c8:	90 91 dd 01 	lds	r25, 0x01DD
     9cc:	a0 91 de 01 	lds	r26, 0x01DE
     9d0:	b0 91 df 01 	lds	r27, 0x01DF
     9d4:	bc 01       	movw	r22, r24
     9d6:	cd 01       	movw	r24, r26
     9d8:	20 e0       	ldi	r18, 0x00	; 0
     9da:	30 e0       	ldi	r19, 0x00	; 0
     9dc:	40 e0       	ldi	r20, 0x00	; 0
     9de:	50 e0       	ldi	r21, 0x00	; 0
     9e0:	0e 94 ee 0f 	call	0x1fdc	; 0x1fdc <__ltsf2>
     9e4:	88 23       	and	r24, r24
     9e6:	cc f4       	brge	.+50     	; 0xa1a <__stack+0x1bb>
     9e8:	80 91 dc 01 	lds	r24, 0x01DC
     9ec:	90 91 dd 01 	lds	r25, 0x01DD
     9f0:	a0 91 de 01 	lds	r26, 0x01DE
     9f4:	b0 91 df 01 	lds	r27, 0x01DF
     9f8:	bc 01       	movw	r22, r24
     9fa:	cd 01       	movw	r24, r26
     9fc:	2b ed       	ldi	r18, 0xDB	; 219
     9fe:	3f e0       	ldi	r19, 0x0F	; 15
     a00:	49 ec       	ldi	r20, 0xC9	; 201
     a02:	50 e4       	ldi	r21, 0x40	; 64
     a04:	0e 94 bb 0d 	call	0x1b76	; 0x1b76 <__addsf3>
     a08:	dc 01       	movw	r26, r24
     a0a:	cb 01       	movw	r24, r22
     a0c:	23 96       	adiw	r28, 0x03	; 3
     a0e:	8c af       	std	Y+60, r24	; 0x3c
     a10:	9d af       	std	Y+61, r25	; 0x3d
     a12:	ae af       	std	Y+62, r26	; 0x3e
     a14:	bf af       	std	Y+63, r27	; 0x3f
     a16:	23 97       	sbiw	r28, 0x03	; 3
     a18:	0e c0       	rjmp	.+28     	; 0xa36 <__stack+0x1d7>
     a1a:	80 91 dc 01 	lds	r24, 0x01DC
     a1e:	90 91 dd 01 	lds	r25, 0x01DD
     a22:	a0 91 de 01 	lds	r26, 0x01DE
     a26:	b0 91 df 01 	lds	r27, 0x01DF
     a2a:	23 96       	adiw	r28, 0x03	; 3
     a2c:	8c af       	std	Y+60, r24	; 0x3c
     a2e:	9d af       	std	Y+61, r25	; 0x3d
     a30:	ae af       	std	Y+62, r26	; 0x3e
     a32:	bf af       	std	Y+63, r27	; 0x3f
     a34:	23 97       	sbiw	r28, 0x03	; 3
     a36:	23 96       	adiw	r28, 0x03	; 3
     a38:	8c ad       	ldd	r24, Y+60	; 0x3c
     a3a:	9d ad       	ldd	r25, Y+61	; 0x3d
     a3c:	ae ad       	ldd	r26, Y+62	; 0x3e
     a3e:	bf ad       	ldd	r27, Y+63	; 0x3f
     a40:	23 97       	sbiw	r28, 0x03	; 3
     a42:	27 96       	adiw	r28, 0x07	; 7
     a44:	8c af       	std	Y+60, r24	; 0x3c
     a46:	9d af       	std	Y+61, r25	; 0x3d
     a48:	ae af       	std	Y+62, r26	; 0x3e
     a4a:	bf af       	std	Y+63, r27	; 0x3f
     a4c:	27 97       	sbiw	r28, 0x07	; 7
     a4e:	27 96       	adiw	r28, 0x07	; 7
     a50:	8c ad       	ldd	r24, Y+60	; 0x3c
     a52:	9d ad       	ldd	r25, Y+61	; 0x3d
     a54:	ae ad       	ldd	r26, Y+62	; 0x3e
     a56:	bf ad       	ldd	r27, Y+63	; 0x3f
     a58:	27 97       	sbiw	r28, 0x07	; 7
     a5a:	80 93 dc 01 	sts	0x01DC, r24
     a5e:	90 93 dd 01 	sts	0x01DD, r25
     a62:	a0 93 de 01 	sts	0x01DE, r26
     a66:	b0 93 df 01 	sts	0x01DF, r27
	ErreurAngle = ((Angle_D >= Pi + Angle) ? Angle_D - 2*Pi : ((Angle_D <= -Pi + Angle) ? Angle_D + 2*Pi : Angle_D))-Angle;
     a6a:	80 91 dc 01 	lds	r24, 0x01DC
     a6e:	90 91 dd 01 	lds	r25, 0x01DD
     a72:	a0 91 de 01 	lds	r26, 0x01DE
     a76:	b0 91 df 01 	lds	r27, 0x01DF
     a7a:	bc 01       	movw	r22, r24
     a7c:	cd 01       	movw	r24, r26
     a7e:	2b ed       	ldi	r18, 0xDB	; 219
     a80:	3f e0       	ldi	r19, 0x0F	; 15
     a82:	49 e4       	ldi	r20, 0x49	; 73
     a84:	50 e4       	ldi	r21, 0x40	; 64
     a86:	0e 94 bb 0d 	call	0x1b76	; 0x1b76 <__addsf3>
     a8a:	dc 01       	movw	r26, r24
     a8c:	cb 01       	movw	r24, r22
     a8e:	bc 01       	movw	r22, r24
     a90:	cd 01       	movw	r24, r26
     a92:	2d 81       	ldd	r18, Y+5	; 0x05
     a94:	3e 81       	ldd	r19, Y+6	; 0x06
     a96:	4f 81       	ldd	r20, Y+7	; 0x07
     a98:	58 85       	ldd	r21, Y+8	; 0x08
     a9a:	0e 94 1e 10 	call	0x203c	; 0x203c <__lesf2>
     a9e:	18 16       	cp	r1, r24
     aa0:	8c f0       	brlt	.+34     	; 0xac4 <__stack+0x265>
     aa2:	6d 81       	ldd	r22, Y+5	; 0x05
     aa4:	7e 81       	ldd	r23, Y+6	; 0x06
     aa6:	8f 81       	ldd	r24, Y+7	; 0x07
     aa8:	98 85       	ldd	r25, Y+8	; 0x08
     aaa:	2b ed       	ldi	r18, 0xDB	; 219
     aac:	3f e0       	ldi	r19, 0x0F	; 15
     aae:	49 ec       	ldi	r20, 0xC9	; 201
     ab0:	50 e4       	ldi	r21, 0x40	; 64
     ab2:	0e 94 8a 0d 	call	0x1b14	; 0x1b14 <__subsf3>
     ab6:	dc 01       	movw	r26, r24
     ab8:	cb 01       	movw	r24, r22
     aba:	8b af       	std	Y+59, r24	; 0x3b
     abc:	9c af       	std	Y+60, r25	; 0x3c
     abe:	ad af       	std	Y+61, r26	; 0x3d
     ac0:	be af       	std	Y+62, r27	; 0x3e
     ac2:	3d c0       	rjmp	.+122    	; 0xb3e <__stack+0x2df>
     ac4:	80 91 dc 01 	lds	r24, 0x01DC
     ac8:	90 91 dd 01 	lds	r25, 0x01DD
     acc:	a0 91 de 01 	lds	r26, 0x01DE
     ad0:	b0 91 df 01 	lds	r27, 0x01DF
     ad4:	bc 01       	movw	r22, r24
     ad6:	cd 01       	movw	r24, r26
     ad8:	2b ed       	ldi	r18, 0xDB	; 219
     ada:	3f e0       	ldi	r19, 0x0F	; 15
     adc:	49 e4       	ldi	r20, 0x49	; 73
     ade:	50 e4       	ldi	r21, 0x40	; 64
     ae0:	0e 94 8a 0d 	call	0x1b14	; 0x1b14 <__subsf3>
     ae4:	dc 01       	movw	r26, r24
     ae6:	cb 01       	movw	r24, r22
     ae8:	bc 01       	movw	r22, r24
     aea:	cd 01       	movw	r24, r26
     aec:	2d 81       	ldd	r18, Y+5	; 0x05
     aee:	3e 81       	ldd	r19, Y+6	; 0x06
     af0:	4f 81       	ldd	r20, Y+7	; 0x07
     af2:	58 85       	ldd	r21, Y+8	; 0x08
     af4:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__gesf2>
     af8:	88 23       	and	r24, r24
     afa:	8c f0       	brlt	.+34     	; 0xb1e <__stack+0x2bf>
     afc:	6d 81       	ldd	r22, Y+5	; 0x05
     afe:	7e 81       	ldd	r23, Y+6	; 0x06
     b00:	8f 81       	ldd	r24, Y+7	; 0x07
     b02:	98 85       	ldd	r25, Y+8	; 0x08
     b04:	2b ed       	ldi	r18, 0xDB	; 219
     b06:	3f e0       	ldi	r19, 0x0F	; 15
     b08:	49 ec       	ldi	r20, 0xC9	; 201
     b0a:	50 e4       	ldi	r21, 0x40	; 64
     b0c:	0e 94 bb 0d 	call	0x1b76	; 0x1b76 <__addsf3>
     b10:	dc 01       	movw	r26, r24
     b12:	cb 01       	movw	r24, r22
     b14:	8f ab       	std	Y+55, r24	; 0x37
     b16:	98 af       	std	Y+56, r25	; 0x38
     b18:	a9 af       	std	Y+57, r26	; 0x39
     b1a:	ba af       	std	Y+58, r27	; 0x3a
     b1c:	08 c0       	rjmp	.+16     	; 0xb2e <__stack+0x2cf>
     b1e:	8d 81       	ldd	r24, Y+5	; 0x05
     b20:	9e 81       	ldd	r25, Y+6	; 0x06
     b22:	af 81       	ldd	r26, Y+7	; 0x07
     b24:	b8 85       	ldd	r27, Y+8	; 0x08
     b26:	8f ab       	std	Y+55, r24	; 0x37
     b28:	98 af       	std	Y+56, r25	; 0x38
     b2a:	a9 af       	std	Y+57, r26	; 0x39
     b2c:	ba af       	std	Y+58, r27	; 0x3a
     b2e:	8f a9       	ldd	r24, Y+55	; 0x37
     b30:	98 ad       	ldd	r25, Y+56	; 0x38
     b32:	a9 ad       	ldd	r26, Y+57	; 0x39
     b34:	ba ad       	ldd	r27, Y+58	; 0x3a
     b36:	8b af       	std	Y+59, r24	; 0x3b
     b38:	9c af       	std	Y+60, r25	; 0x3c
     b3a:	ad af       	std	Y+61, r26	; 0x3d
     b3c:	be af       	std	Y+62, r27	; 0x3e
     b3e:	20 91 dc 01 	lds	r18, 0x01DC
     b42:	30 91 dd 01 	lds	r19, 0x01DD
     b46:	40 91 de 01 	lds	r20, 0x01DE
     b4a:	50 91 df 01 	lds	r21, 0x01DF
     b4e:	6b ad       	ldd	r22, Y+59	; 0x3b
     b50:	7c ad       	ldd	r23, Y+60	; 0x3c
     b52:	8d ad       	ldd	r24, Y+61	; 0x3d
     b54:	9e ad       	ldd	r25, Y+62	; 0x3e
     b56:	0e 94 8a 0d 	call	0x1b14	; 0x1b14 <__subsf3>
     b5a:	dc 01       	movw	r26, r24
     b5c:	cb 01       	movw	r24, r22
     b5e:	80 93 d8 01 	sts	0x01D8, r24
     b62:	90 93 d9 01 	sts	0x01D9, r25
     b66:	a0 93 da 01 	sts	0x01DA, r26
     b6a:	b0 93 db 01 	sts	0x01DB, r27

	Ut = -H11*Vt + H12*Vitesse_D;
     b6e:	80 91 cc 01 	lds	r24, 0x01CC
     b72:	90 91 cd 01 	lds	r25, 0x01CD
     b76:	a0 91 ce 01 	lds	r26, 0x01CE
     b7a:	b0 91 cf 01 	lds	r27, 0x01CF
     b7e:	bc 01       	movw	r22, r24
     b80:	cd 01       	movw	r24, r26
     b82:	28 ee       	ldi	r18, 0xE8	; 232
     b84:	31 eb       	ldi	r19, 0xB1	; 177
     b86:	49 e7       	ldi	r20, 0x79	; 121
     b88:	50 ec       	ldi	r21, 0xC0	; 192
     b8a:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <__mulsf3>
     b8e:	dc 01       	movw	r26, r24
     b90:	cb 01       	movw	r24, r22
     b92:	7c 01       	movw	r14, r24
     b94:	8d 01       	movw	r16, r26
     b96:	69 81       	ldd	r22, Y+1	; 0x01
     b98:	7a 81       	ldd	r23, Y+2	; 0x02
     b9a:	8b 81       	ldd	r24, Y+3	; 0x03
     b9c:	9c 81       	ldd	r25, Y+4	; 0x04
     b9e:	24 ef       	ldi	r18, 0xF4	; 244
     ba0:	38 ed       	ldi	r19, 0xD8	; 216
     ba2:	4c e9       	ldi	r20, 0x9C	; 156
     ba4:	50 e4       	ldi	r21, 0x40	; 64
     ba6:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <__mulsf3>
     baa:	dc 01       	movw	r26, r24
     bac:	cb 01       	movw	r24, r22
     bae:	9c 01       	movw	r18, r24
     bb0:	ad 01       	movw	r20, r26
     bb2:	c8 01       	movw	r24, r16
     bb4:	b7 01       	movw	r22, r14
     bb6:	0e 94 bb 0d 	call	0x1b76	; 0x1b76 <__addsf3>
     bba:	dc 01       	movw	r26, r24
     bbc:	cb 01       	movw	r24, r22
     bbe:	80 93 c8 01 	sts	0x01C8, r24
     bc2:	90 93 c9 01 	sts	0x01C9, r25
     bc6:	a0 93 ca 01 	sts	0x01CA, r26
     bca:	b0 93 cb 01 	sts	0x01CB, r27
	Ua = H21*ErreurAngle - H22*W;
     bce:	80 91 d8 01 	lds	r24, 0x01D8
     bd2:	90 91 d9 01 	lds	r25, 0x01D9
     bd6:	a0 91 da 01 	lds	r26, 0x01DA
     bda:	b0 91 db 01 	lds	r27, 0x01DB
     bde:	bc 01       	movw	r22, r24
     be0:	cd 01       	movw	r24, r26
     be2:	21 e2       	ldi	r18, 0x21	; 33
     be4:	37 ea       	ldi	r19, 0xA7	; 167
     be6:	44 e9       	ldi	r20, 0x94	; 148
     be8:	5f e3       	ldi	r21, 0x3F	; 63
     bea:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <__mulsf3>
     bee:	dc 01       	movw	r26, r24
     bf0:	cb 01       	movw	r24, r22
     bf2:	7c 01       	movw	r14, r24
     bf4:	8d 01       	movw	r16, r26
     bf6:	80 91 d4 01 	lds	r24, 0x01D4
     bfa:	90 91 d5 01 	lds	r25, 0x01D5
     bfe:	a0 91 d6 01 	lds	r26, 0x01D6
     c02:	b0 91 d7 01 	lds	r27, 0x01D7
     c06:	bc 01       	movw	r22, r24
     c08:	cd 01       	movw	r24, r26
     c0a:	28 e1       	ldi	r18, 0x18	; 24
     c0c:	37 ea       	ldi	r19, 0xA7	; 167
     c0e:	44 e1       	ldi	r20, 0x14	; 20
     c10:	5f eb       	ldi	r21, 0xBF	; 191
     c12:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <__mulsf3>
     c16:	dc 01       	movw	r26, r24
     c18:	cb 01       	movw	r24, r22
     c1a:	9c 01       	movw	r18, r24
     c1c:	ad 01       	movw	r20, r26
     c1e:	c8 01       	movw	r24, r16
     c20:	b7 01       	movw	r22, r14
     c22:	0e 94 bb 0d 	call	0x1b76	; 0x1b76 <__addsf3>
     c26:	dc 01       	movw	r26, r24
     c28:	cb 01       	movw	r24, r22
     c2a:	80 93 c4 01 	sts	0x01C4, r24
     c2e:	90 93 c5 01 	sts	0x01C5, r25
     c32:	a0 93 c6 01 	sts	0x01C6, r26
     c36:	b0 93 c7 01 	sts	0x01C7, r27
			
	Signe_Ua = (Ua >= 0.0) ? 1 : -1;
     c3a:	80 91 c4 01 	lds	r24, 0x01C4
     c3e:	90 91 c5 01 	lds	r25, 0x01C5
     c42:	a0 91 c6 01 	lds	r26, 0x01C6
     c46:	b0 91 c7 01 	lds	r27, 0x01C7
     c4a:	bc 01       	movw	r22, r24
     c4c:	cd 01       	movw	r24, r26
     c4e:	20 e0       	ldi	r18, 0x00	; 0
     c50:	30 e0       	ldi	r19, 0x00	; 0
     c52:	40 e0       	ldi	r20, 0x00	; 0
     c54:	50 e0       	ldi	r21, 0x00	; 0
     c56:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__gesf2>
     c5a:	88 23       	and	r24, r24
     c5c:	2c f0       	brlt	.+10     	; 0xc68 <__stack+0x409>
     c5e:	a1 e0       	ldi	r26, 0x01	; 1
     c60:	b0 e0       	ldi	r27, 0x00	; 0
     c62:	be ab       	std	Y+54, r27	; 0x36
     c64:	ad ab       	std	Y+53, r26	; 0x35
     c66:	04 c0       	rjmp	.+8      	; 0xc70 <__stack+0x411>
     c68:	8f ef       	ldi	r24, 0xFF	; 255
     c6a:	9f ef       	ldi	r25, 0xFF	; 255
     c6c:	9e ab       	std	Y+54, r25	; 0x36
     c6e:	8d ab       	std	Y+53, r24	; 0x35
     c70:	ad a9       	ldd	r26, Y+53	; 0x35
     c72:	be a9       	ldd	r27, Y+54	; 0x36
     c74:	b0 93 c3 01 	sts	0x01C3, r27
     c78:	a0 93 c2 01 	sts	0x01C2, r26
	Signe_Ut = (Ut >= 0.0) ? 1 : -1;
     c7c:	80 91 c8 01 	lds	r24, 0x01C8
     c80:	90 91 c9 01 	lds	r25, 0x01C9
     c84:	a0 91 ca 01 	lds	r26, 0x01CA
     c88:	b0 91 cb 01 	lds	r27, 0x01CB
     c8c:	bc 01       	movw	r22, r24
     c8e:	cd 01       	movw	r24, r26
     c90:	20 e0       	ldi	r18, 0x00	; 0
     c92:	30 e0       	ldi	r19, 0x00	; 0
     c94:	40 e0       	ldi	r20, 0x00	; 0
     c96:	50 e0       	ldi	r21, 0x00	; 0
     c98:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__gesf2>
     c9c:	88 23       	and	r24, r24
     c9e:	2c f0       	brlt	.+10     	; 0xcaa <__stack+0x44b>
     ca0:	81 e0       	ldi	r24, 0x01	; 1
     ca2:	90 e0       	ldi	r25, 0x00	; 0
     ca4:	9c ab       	std	Y+52, r25	; 0x34
     ca6:	8b ab       	std	Y+51, r24	; 0x33
     ca8:	04 c0       	rjmp	.+8      	; 0xcb2 <__stack+0x453>
     caa:	af ef       	ldi	r26, 0xFF	; 255
     cac:	bf ef       	ldi	r27, 0xFF	; 255
     cae:	bc ab       	std	Y+52, r27	; 0x34
     cb0:	ab ab       	std	Y+51, r26	; 0x33
     cb2:	8b a9       	ldd	r24, Y+51	; 0x33
     cb4:	9c a9       	ldd	r25, Y+52	; 0x34
     cb6:	90 93 c1 01 	sts	0x01C1, r25
     cba:	80 93 c0 01 	sts	0x01C0, r24
	
	Ua = (Signe_Ua*Ua > 1.0) ? Signe_Ua*1.0 : ((Signe_Ua*Ua <= 0.05) ? 0.0 : Ua);
     cbe:	80 91 c2 01 	lds	r24, 0x01C2
     cc2:	90 91 c3 01 	lds	r25, 0x01C3
     cc6:	aa 27       	eor	r26, r26
     cc8:	97 fd       	sbrc	r25, 7
     cca:	a0 95       	com	r26
     ccc:	ba 2f       	mov	r27, r26
     cce:	bc 01       	movw	r22, r24
     cd0:	cd 01       	movw	r24, r26
     cd2:	0e 94 4e 10 	call	0x209c	; 0x209c <__floatsisf>
     cd6:	dc 01       	movw	r26, r24
     cd8:	cb 01       	movw	r24, r22
     cda:	20 91 c4 01 	lds	r18, 0x01C4
     cde:	30 91 c5 01 	lds	r19, 0x01C5
     ce2:	40 91 c6 01 	lds	r20, 0x01C6
     ce6:	50 91 c7 01 	lds	r21, 0x01C7
     cea:	bc 01       	movw	r22, r24
     cec:	cd 01       	movw	r24, r26
     cee:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <__mulsf3>
     cf2:	dc 01       	movw	r26, r24
     cf4:	cb 01       	movw	r24, r22
     cf6:	bc 01       	movw	r22, r24
     cf8:	cd 01       	movw	r24, r26
     cfa:	20 e0       	ldi	r18, 0x00	; 0
     cfc:	30 e0       	ldi	r19, 0x00	; 0
     cfe:	40 e8       	ldi	r20, 0x80	; 128
     d00:	5f e3       	ldi	r21, 0x3F	; 63
     d02:	0e 94 8e 0f 	call	0x1f1c	; 0x1f1c <__gtsf2>
     d06:	18 16       	cp	r1, r24
     d08:	8c f4       	brge	.+34     	; 0xd2c <__stack+0x4cd>
     d0a:	80 91 c2 01 	lds	r24, 0x01C2
     d0e:	90 91 c3 01 	lds	r25, 0x01C3
     d12:	aa 27       	eor	r26, r26
     d14:	97 fd       	sbrc	r25, 7
     d16:	a0 95       	com	r26
     d18:	ba 2f       	mov	r27, r26
     d1a:	bc 01       	movw	r22, r24
     d1c:	cd 01       	movw	r24, r26
     d1e:	0e 94 4e 10 	call	0x209c	; 0x209c <__floatsisf>
     d22:	6f a7       	std	Y+47, r22	; 0x2f
     d24:	78 ab       	std	Y+48, r23	; 0x30
     d26:	89 ab       	std	Y+49, r24	; 0x31
     d28:	9a ab       	std	Y+50, r25	; 0x32
     d2a:	43 c0       	rjmp	.+134    	; 0xdb2 <__stack+0x553>
     d2c:	80 91 c2 01 	lds	r24, 0x01C2
     d30:	90 91 c3 01 	lds	r25, 0x01C3
     d34:	aa 27       	eor	r26, r26
     d36:	97 fd       	sbrc	r25, 7
     d38:	a0 95       	com	r26
     d3a:	ba 2f       	mov	r27, r26
     d3c:	bc 01       	movw	r22, r24
     d3e:	cd 01       	movw	r24, r26
     d40:	0e 94 4e 10 	call	0x209c	; 0x209c <__floatsisf>
     d44:	dc 01       	movw	r26, r24
     d46:	cb 01       	movw	r24, r22
     d48:	20 91 c4 01 	lds	r18, 0x01C4
     d4c:	30 91 c5 01 	lds	r19, 0x01C5
     d50:	40 91 c6 01 	lds	r20, 0x01C6
     d54:	50 91 c7 01 	lds	r21, 0x01C7
     d58:	bc 01       	movw	r22, r24
     d5a:	cd 01       	movw	r24, r26
     d5c:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <__mulsf3>
     d60:	dc 01       	movw	r26, r24
     d62:	cb 01       	movw	r24, r22
     d64:	bc 01       	movw	r22, r24
     d66:	cd 01       	movw	r24, r26
     d68:	2d ec       	ldi	r18, 0xCD	; 205
     d6a:	3c ec       	ldi	r19, 0xCC	; 204
     d6c:	4c e4       	ldi	r20, 0x4C	; 76
     d6e:	5d e3       	ldi	r21, 0x3D	; 61
     d70:	0e 94 1e 10 	call	0x203c	; 0x203c <__lesf2>
     d74:	18 16       	cp	r1, r24
     d76:	4c f0       	brlt	.+18     	; 0xd8a <__stack+0x52b>
     d78:	80 e0       	ldi	r24, 0x00	; 0
     d7a:	90 e0       	ldi	r25, 0x00	; 0
     d7c:	a0 e0       	ldi	r26, 0x00	; 0
     d7e:	b0 e0       	ldi	r27, 0x00	; 0
     d80:	8b a7       	std	Y+43, r24	; 0x2b
     d82:	9c a7       	std	Y+44, r25	; 0x2c
     d84:	ad a7       	std	Y+45, r26	; 0x2d
     d86:	be a7       	std	Y+46, r27	; 0x2e
     d88:	0c c0       	rjmp	.+24     	; 0xda2 <__stack+0x543>
     d8a:	80 91 c4 01 	lds	r24, 0x01C4
     d8e:	90 91 c5 01 	lds	r25, 0x01C5
     d92:	a0 91 c6 01 	lds	r26, 0x01C6
     d96:	b0 91 c7 01 	lds	r27, 0x01C7
     d9a:	8b a7       	std	Y+43, r24	; 0x2b
     d9c:	9c a7       	std	Y+44, r25	; 0x2c
     d9e:	ad a7       	std	Y+45, r26	; 0x2d
     da0:	be a7       	std	Y+46, r27	; 0x2e
     da2:	8b a5       	ldd	r24, Y+43	; 0x2b
     da4:	9c a5       	ldd	r25, Y+44	; 0x2c
     da6:	ad a5       	ldd	r26, Y+45	; 0x2d
     da8:	be a5       	ldd	r27, Y+46	; 0x2e
     daa:	8f a7       	std	Y+47, r24	; 0x2f
     dac:	98 ab       	std	Y+48, r25	; 0x30
     dae:	a9 ab       	std	Y+49, r26	; 0x31
     db0:	ba ab       	std	Y+50, r27	; 0x32
     db2:	8f a5       	ldd	r24, Y+47	; 0x2f
     db4:	98 a9       	ldd	r25, Y+48	; 0x30
     db6:	a9 a9       	ldd	r26, Y+49	; 0x31
     db8:	ba a9       	ldd	r27, Y+50	; 0x32
     dba:	80 93 c4 01 	sts	0x01C4, r24
     dbe:	90 93 c5 01 	sts	0x01C5, r25
     dc2:	a0 93 c6 01 	sts	0x01C6, r26
     dc6:	b0 93 c7 01 	sts	0x01C7, r27
	Ut = (Signe_Ut*Ut > 1.0) ? Signe_Ut*1.0 : Ut;
     dca:	80 91 c0 01 	lds	r24, 0x01C0
     dce:	90 91 c1 01 	lds	r25, 0x01C1
     dd2:	aa 27       	eor	r26, r26
     dd4:	97 fd       	sbrc	r25, 7
     dd6:	a0 95       	com	r26
     dd8:	ba 2f       	mov	r27, r26
     dda:	bc 01       	movw	r22, r24
     ddc:	cd 01       	movw	r24, r26
     dde:	0e 94 4e 10 	call	0x209c	; 0x209c <__floatsisf>
     de2:	dc 01       	movw	r26, r24
     de4:	cb 01       	movw	r24, r22
     de6:	20 91 c8 01 	lds	r18, 0x01C8
     dea:	30 91 c9 01 	lds	r19, 0x01C9
     dee:	40 91 ca 01 	lds	r20, 0x01CA
     df2:	50 91 cb 01 	lds	r21, 0x01CB
     df6:	bc 01       	movw	r22, r24
     df8:	cd 01       	movw	r24, r26
     dfa:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <__mulsf3>
     dfe:	dc 01       	movw	r26, r24
     e00:	cb 01       	movw	r24, r22
     e02:	bc 01       	movw	r22, r24
     e04:	cd 01       	movw	r24, r26
     e06:	20 e0       	ldi	r18, 0x00	; 0
     e08:	30 e0       	ldi	r19, 0x00	; 0
     e0a:	40 e8       	ldi	r20, 0x80	; 128
     e0c:	5f e3       	ldi	r21, 0x3F	; 63
     e0e:	0e 94 8e 0f 	call	0x1f1c	; 0x1f1c <__gtsf2>
     e12:	18 16       	cp	r1, r24
     e14:	8c f4       	brge	.+34     	; 0xe38 <__stack+0x5d9>
     e16:	80 91 c0 01 	lds	r24, 0x01C0
     e1a:	90 91 c1 01 	lds	r25, 0x01C1
     e1e:	aa 27       	eor	r26, r26
     e20:	97 fd       	sbrc	r25, 7
     e22:	a0 95       	com	r26
     e24:	ba 2f       	mov	r27, r26
     e26:	bc 01       	movw	r22, r24
     e28:	cd 01       	movw	r24, r26
     e2a:	0e 94 4e 10 	call	0x209c	; 0x209c <__floatsisf>
     e2e:	6f a3       	std	Y+39, r22	; 0x27
     e30:	78 a7       	std	Y+40, r23	; 0x28
     e32:	89 a7       	std	Y+41, r24	; 0x29
     e34:	9a a7       	std	Y+42, r25	; 0x2a
     e36:	0c c0       	rjmp	.+24     	; 0xe50 <__stack+0x5f1>
     e38:	80 91 c8 01 	lds	r24, 0x01C8
     e3c:	90 91 c9 01 	lds	r25, 0x01C9
     e40:	a0 91 ca 01 	lds	r26, 0x01CA
     e44:	b0 91 cb 01 	lds	r27, 0x01CB
     e48:	8f a3       	std	Y+39, r24	; 0x27
     e4a:	98 a7       	std	Y+40, r25	; 0x28
     e4c:	a9 a7       	std	Y+41, r26	; 0x29
     e4e:	ba a7       	std	Y+42, r27	; 0x2a
     e50:	8f a1       	ldd	r24, Y+39	; 0x27
     e52:	98 a5       	ldd	r25, Y+40	; 0x28
     e54:	a9 a5       	ldd	r26, Y+41	; 0x29
     e56:	ba a5       	ldd	r27, Y+42	; 0x2a
     e58:	80 93 c8 01 	sts	0x01C8, r24
     e5c:	90 93 c9 01 	sts	0x01C9, r25
     e60:	a0 93 ca 01 	sts	0x01CA, r26
     e64:	b0 93 cb 01 	sts	0x01CB, r27
	Ut = ((Signe_Ut*Ut) > (1.0 - Signe_Ua*Ua)) ? Signe_Ut*(1.0 - Signe_Ua*Ua) : Ut;
     e68:	80 91 c0 01 	lds	r24, 0x01C0
     e6c:	90 91 c1 01 	lds	r25, 0x01C1
     e70:	aa 27       	eor	r26, r26
     e72:	97 fd       	sbrc	r25, 7
     e74:	a0 95       	com	r26
     e76:	ba 2f       	mov	r27, r26
     e78:	bc 01       	movw	r22, r24
     e7a:	cd 01       	movw	r24, r26
     e7c:	0e 94 4e 10 	call	0x209c	; 0x209c <__floatsisf>
     e80:	dc 01       	movw	r26, r24
     e82:	cb 01       	movw	r24, r22
     e84:	20 91 c8 01 	lds	r18, 0x01C8
     e88:	30 91 c9 01 	lds	r19, 0x01C9
     e8c:	40 91 ca 01 	lds	r20, 0x01CA
     e90:	50 91 cb 01 	lds	r21, 0x01CB
     e94:	bc 01       	movw	r22, r24
     e96:	cd 01       	movw	r24, r26
     e98:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <__mulsf3>
     e9c:	dc 01       	movw	r26, r24
     e9e:	cb 01       	movw	r24, r22
     ea0:	7c 01       	movw	r14, r24
     ea2:	8d 01       	movw	r16, r26
     ea4:	80 91 c2 01 	lds	r24, 0x01C2
     ea8:	90 91 c3 01 	lds	r25, 0x01C3
     eac:	aa 27       	eor	r26, r26
     eae:	97 fd       	sbrc	r25, 7
     eb0:	a0 95       	com	r26
     eb2:	ba 2f       	mov	r27, r26
     eb4:	bc 01       	movw	r22, r24
     eb6:	cd 01       	movw	r24, r26
     eb8:	0e 94 4e 10 	call	0x209c	; 0x209c <__floatsisf>
     ebc:	dc 01       	movw	r26, r24
     ebe:	cb 01       	movw	r24, r22
     ec0:	20 91 c4 01 	lds	r18, 0x01C4
     ec4:	30 91 c5 01 	lds	r19, 0x01C5
     ec8:	40 91 c6 01 	lds	r20, 0x01C6
     ecc:	50 91 c7 01 	lds	r21, 0x01C7
     ed0:	bc 01       	movw	r22, r24
     ed2:	cd 01       	movw	r24, r26
     ed4:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <__mulsf3>
     ed8:	dc 01       	movw	r26, r24
     eda:	cb 01       	movw	r24, r22
     edc:	9c 01       	movw	r18, r24
     ede:	ad 01       	movw	r20, r26
     ee0:	60 e0       	ldi	r22, 0x00	; 0
     ee2:	70 e0       	ldi	r23, 0x00	; 0
     ee4:	80 e8       	ldi	r24, 0x80	; 128
     ee6:	9f e3       	ldi	r25, 0x3F	; 63
     ee8:	0e 94 8a 0d 	call	0x1b14	; 0x1b14 <__subsf3>
     eec:	dc 01       	movw	r26, r24
     eee:	cb 01       	movw	r24, r22
     ef0:	9c 01       	movw	r18, r24
     ef2:	ad 01       	movw	r20, r26
     ef4:	c8 01       	movw	r24, r16
     ef6:	b7 01       	movw	r22, r14
     ef8:	0e 94 8e 0f 	call	0x1f1c	; 0x1f1c <__gtsf2>
     efc:	18 16       	cp	r1, r24
     efe:	0c f0       	brlt	.+2      	; 0xf02 <__stack+0x6a3>
     f00:	41 c0       	rjmp	.+130    	; 0xf84 <__stack+0x725>
     f02:	80 91 c0 01 	lds	r24, 0x01C0
     f06:	90 91 c1 01 	lds	r25, 0x01C1
     f0a:	aa 27       	eor	r26, r26
     f0c:	97 fd       	sbrc	r25, 7
     f0e:	a0 95       	com	r26
     f10:	ba 2f       	mov	r27, r26
     f12:	bc 01       	movw	r22, r24
     f14:	cd 01       	movw	r24, r26
     f16:	0e 94 4e 10 	call	0x209c	; 0x209c <__floatsisf>
     f1a:	7b 01       	movw	r14, r22
     f1c:	8c 01       	movw	r16, r24
     f1e:	80 91 c2 01 	lds	r24, 0x01C2
     f22:	90 91 c3 01 	lds	r25, 0x01C3
     f26:	aa 27       	eor	r26, r26
     f28:	97 fd       	sbrc	r25, 7
     f2a:	a0 95       	com	r26
     f2c:	ba 2f       	mov	r27, r26
     f2e:	bc 01       	movw	r22, r24
     f30:	cd 01       	movw	r24, r26
     f32:	0e 94 4e 10 	call	0x209c	; 0x209c <__floatsisf>
     f36:	dc 01       	movw	r26, r24
     f38:	cb 01       	movw	r24, r22
     f3a:	20 91 c4 01 	lds	r18, 0x01C4
     f3e:	30 91 c5 01 	lds	r19, 0x01C5
     f42:	40 91 c6 01 	lds	r20, 0x01C6
     f46:	50 91 c7 01 	lds	r21, 0x01C7
     f4a:	bc 01       	movw	r22, r24
     f4c:	cd 01       	movw	r24, r26
     f4e:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <__mulsf3>
     f52:	dc 01       	movw	r26, r24
     f54:	cb 01       	movw	r24, r22
     f56:	9c 01       	movw	r18, r24
     f58:	ad 01       	movw	r20, r26
     f5a:	60 e0       	ldi	r22, 0x00	; 0
     f5c:	70 e0       	ldi	r23, 0x00	; 0
     f5e:	80 e8       	ldi	r24, 0x80	; 128
     f60:	9f e3       	ldi	r25, 0x3F	; 63
     f62:	0e 94 8a 0d 	call	0x1b14	; 0x1b14 <__subsf3>
     f66:	dc 01       	movw	r26, r24
     f68:	cb 01       	movw	r24, r22
     f6a:	9c 01       	movw	r18, r24
     f6c:	ad 01       	movw	r20, r26
     f6e:	c8 01       	movw	r24, r16
     f70:	b7 01       	movw	r22, r14
     f72:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <__mulsf3>
     f76:	dc 01       	movw	r26, r24
     f78:	cb 01       	movw	r24, r22
     f7a:	8b a3       	std	Y+35, r24	; 0x23
     f7c:	9c a3       	std	Y+36, r25	; 0x24
     f7e:	ad a3       	std	Y+37, r26	; 0x25
     f80:	be a3       	std	Y+38, r27	; 0x26
     f82:	0c c0       	rjmp	.+24     	; 0xf9c <__stack+0x73d>
     f84:	80 91 c8 01 	lds	r24, 0x01C8
     f88:	90 91 c9 01 	lds	r25, 0x01C9
     f8c:	a0 91 ca 01 	lds	r26, 0x01CA
     f90:	b0 91 cb 01 	lds	r27, 0x01CB
     f94:	8b a3       	std	Y+35, r24	; 0x23
     f96:	9c a3       	std	Y+36, r25	; 0x24
     f98:	ad a3       	std	Y+37, r26	; 0x25
     f9a:	be a3       	std	Y+38, r27	; 0x26
     f9c:	8b a1       	ldd	r24, Y+35	; 0x23
     f9e:	9c a1       	ldd	r25, Y+36	; 0x24
     fa0:	ad a1       	ldd	r26, Y+37	; 0x25
     fa2:	be a1       	ldd	r27, Y+38	; 0x26
     fa4:	80 93 c8 01 	sts	0x01C8, r24
     fa8:	90 93 c9 01 	sts	0x01C9, r25
     fac:	a0 93 ca 01 	sts	0x01CA, r26
     fb0:	b0 93 cb 01 	sts	0x01CB, r27


	*Duty_D = (Ut+Ua);
     fb4:	80 91 c8 01 	lds	r24, 0x01C8
     fb8:	90 91 c9 01 	lds	r25, 0x01C9
     fbc:	a0 91 ca 01 	lds	r26, 0x01CA
     fc0:	b0 91 cb 01 	lds	r27, 0x01CB
     fc4:	20 91 c4 01 	lds	r18, 0x01C4
     fc8:	30 91 c5 01 	lds	r19, 0x01C5
     fcc:	40 91 c6 01 	lds	r20, 0x01C6
     fd0:	50 91 c7 01 	lds	r21, 0x01C7
     fd4:	bc 01       	movw	r22, r24
     fd6:	cd 01       	movw	r24, r26
     fd8:	0e 94 bb 0d 	call	0x1b76	; 0x1b76 <__addsf3>
     fdc:	dc 01       	movw	r26, r24
     fde:	cb 01       	movw	r24, r22
     fe0:	a7 96       	adiw	r28, 0x27	; 39
     fe2:	ee ad       	ldd	r30, Y+62	; 0x3e
     fe4:	ff ad       	ldd	r31, Y+63	; 0x3f
     fe6:	a7 97       	sbiw	r28, 0x27	; 39
     fe8:	80 83       	st	Z, r24
     fea:	91 83       	std	Z+1, r25	; 0x01
     fec:	a2 83       	std	Z+2, r26	; 0x02
     fee:	b3 83       	std	Z+3, r27	; 0x03
	*Duty_G = (Ut-Ua);
     ff0:	80 91 c8 01 	lds	r24, 0x01C8
     ff4:	90 91 c9 01 	lds	r25, 0x01C9
     ff8:	a0 91 ca 01 	lds	r26, 0x01CA
     ffc:	b0 91 cb 01 	lds	r27, 0x01CB
    1000:	20 91 c4 01 	lds	r18, 0x01C4
    1004:	30 91 c5 01 	lds	r19, 0x01C5
    1008:	40 91 c6 01 	lds	r20, 0x01C6
    100c:	50 91 c7 01 	lds	r21, 0x01C7
    1010:	bc 01       	movw	r22, r24
    1012:	cd 01       	movw	r24, r26
    1014:	0e 94 8a 0d 	call	0x1b14	; 0x1b14 <__subsf3>
    1018:	dc 01       	movw	r26, r24
    101a:	cb 01       	movw	r24, r22
    101c:	e9 89       	ldd	r30, Y+17	; 0x11
    101e:	fa 89       	ldd	r31, Y+18	; 0x12
    1020:	80 83       	st	Z, r24
    1022:	91 83       	std	Z+1, r25	; 0x01
    1024:	a2 83       	std	Z+2, r26	; 0x02
    1026:	b3 83       	std	Z+3, r27	; 0x03

	*Duty_D = (*Duty_D > 0.99) ? 0.99 : ((*Duty_D < -0.99) ? -0.99 : *Duty_D);
    1028:	a7 96       	adiw	r28, 0x27	; 39
    102a:	ee ad       	ldd	r30, Y+62	; 0x3e
    102c:	ff ad       	ldd	r31, Y+63	; 0x3f
    102e:	a7 97       	sbiw	r28, 0x27	; 39
    1030:	80 81       	ld	r24, Z
    1032:	91 81       	ldd	r25, Z+1	; 0x01
    1034:	a2 81       	ldd	r26, Z+2	; 0x02
    1036:	b3 81       	ldd	r27, Z+3	; 0x03
    1038:	bc 01       	movw	r22, r24
    103a:	cd 01       	movw	r24, r26
    103c:	24 ea       	ldi	r18, 0xA4	; 164
    103e:	30 e7       	ldi	r19, 0x70	; 112
    1040:	4d e7       	ldi	r20, 0x7D	; 125
    1042:	5f e3       	ldi	r21, 0x3F	; 63
    1044:	0e 94 8e 0f 	call	0x1f1c	; 0x1f1c <__gtsf2>
    1048:	18 16       	cp	r1, r24
    104a:	4c f4       	brge	.+18     	; 0x105e <__stack+0x7ff>
    104c:	84 ea       	ldi	r24, 0xA4	; 164
    104e:	90 e7       	ldi	r25, 0x70	; 112
    1050:	ad e7       	ldi	r26, 0x7D	; 125
    1052:	bf e3       	ldi	r27, 0x3F	; 63
    1054:	8f 8f       	std	Y+31, r24	; 0x1f
    1056:	98 a3       	std	Y+32, r25	; 0x20
    1058:	a9 a3       	std	Y+33, r26	; 0x21
    105a:	ba a3       	std	Y+34, r27	; 0x22
    105c:	2f c0       	rjmp	.+94     	; 0x10bc <__stack+0x85d>
    105e:	a7 96       	adiw	r28, 0x27	; 39
    1060:	ee ad       	ldd	r30, Y+62	; 0x3e
    1062:	ff ad       	ldd	r31, Y+63	; 0x3f
    1064:	a7 97       	sbiw	r28, 0x27	; 39
    1066:	80 81       	ld	r24, Z
    1068:	91 81       	ldd	r25, Z+1	; 0x01
    106a:	a2 81       	ldd	r26, Z+2	; 0x02
    106c:	b3 81       	ldd	r27, Z+3	; 0x03
    106e:	bc 01       	movw	r22, r24
    1070:	cd 01       	movw	r24, r26
    1072:	24 ea       	ldi	r18, 0xA4	; 164
    1074:	30 e7       	ldi	r19, 0x70	; 112
    1076:	4d e7       	ldi	r20, 0x7D	; 125
    1078:	5f eb       	ldi	r21, 0xBF	; 191
    107a:	0e 94 ee 0f 	call	0x1fdc	; 0x1fdc <__ltsf2>
    107e:	88 23       	and	r24, r24
    1080:	4c f4       	brge	.+18     	; 0x1094 <__stack+0x835>
    1082:	84 ea       	ldi	r24, 0xA4	; 164
    1084:	90 e7       	ldi	r25, 0x70	; 112
    1086:	ad e7       	ldi	r26, 0x7D	; 125
    1088:	bf eb       	ldi	r27, 0xBF	; 191
    108a:	8b 8f       	std	Y+27, r24	; 0x1b
    108c:	9c 8f       	std	Y+28, r25	; 0x1c
    108e:	ad 8f       	std	Y+29, r26	; 0x1d
    1090:	be 8f       	std	Y+30, r27	; 0x1e
    1092:	0c c0       	rjmp	.+24     	; 0x10ac <__stack+0x84d>
    1094:	a7 96       	adiw	r28, 0x27	; 39
    1096:	ee ad       	ldd	r30, Y+62	; 0x3e
    1098:	ff ad       	ldd	r31, Y+63	; 0x3f
    109a:	a7 97       	sbiw	r28, 0x27	; 39
    109c:	80 81       	ld	r24, Z
    109e:	91 81       	ldd	r25, Z+1	; 0x01
    10a0:	a2 81       	ldd	r26, Z+2	; 0x02
    10a2:	b3 81       	ldd	r27, Z+3	; 0x03
    10a4:	8b 8f       	std	Y+27, r24	; 0x1b
    10a6:	9c 8f       	std	Y+28, r25	; 0x1c
    10a8:	ad 8f       	std	Y+29, r26	; 0x1d
    10aa:	be 8f       	std	Y+30, r27	; 0x1e
    10ac:	8b 8d       	ldd	r24, Y+27	; 0x1b
    10ae:	9c 8d       	ldd	r25, Y+28	; 0x1c
    10b0:	ad 8d       	ldd	r26, Y+29	; 0x1d
    10b2:	be 8d       	ldd	r27, Y+30	; 0x1e
    10b4:	8f 8f       	std	Y+31, r24	; 0x1f
    10b6:	98 a3       	std	Y+32, r25	; 0x20
    10b8:	a9 a3       	std	Y+33, r26	; 0x21
    10ba:	ba a3       	std	Y+34, r27	; 0x22
    10bc:	a7 96       	adiw	r28, 0x27	; 39
    10be:	ee ad       	ldd	r30, Y+62	; 0x3e
    10c0:	ff ad       	ldd	r31, Y+63	; 0x3f
    10c2:	a7 97       	sbiw	r28, 0x27	; 39
    10c4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    10c6:	98 a1       	ldd	r25, Y+32	; 0x20
    10c8:	a9 a1       	ldd	r26, Y+33	; 0x21
    10ca:	ba a1       	ldd	r27, Y+34	; 0x22
    10cc:	80 83       	st	Z, r24
    10ce:	91 83       	std	Z+1, r25	; 0x01
    10d0:	a2 83       	std	Z+2, r26	; 0x02
    10d2:	b3 83       	std	Z+3, r27	; 0x03
	*Duty_G = (*Duty_G > 0.99) ? 0.99 : ((*Duty_G < -0.99) ? -0.99 : *Duty_G);	
    10d4:	e9 89       	ldd	r30, Y+17	; 0x11
    10d6:	fa 89       	ldd	r31, Y+18	; 0x12
    10d8:	80 81       	ld	r24, Z
    10da:	91 81       	ldd	r25, Z+1	; 0x01
    10dc:	a2 81       	ldd	r26, Z+2	; 0x02
    10de:	b3 81       	ldd	r27, Z+3	; 0x03
    10e0:	bc 01       	movw	r22, r24
    10e2:	cd 01       	movw	r24, r26
    10e4:	24 ea       	ldi	r18, 0xA4	; 164
    10e6:	30 e7       	ldi	r19, 0x70	; 112
    10e8:	4d e7       	ldi	r20, 0x7D	; 125
    10ea:	5f e3       	ldi	r21, 0x3F	; 63
    10ec:	0e 94 8e 0f 	call	0x1f1c	; 0x1f1c <__gtsf2>
    10f0:	18 16       	cp	r1, r24
    10f2:	4c f4       	brge	.+18     	; 0x1106 <__stack+0x8a7>
    10f4:	84 ea       	ldi	r24, 0xA4	; 164
    10f6:	90 e7       	ldi	r25, 0x70	; 112
    10f8:	ad e7       	ldi	r26, 0x7D	; 125
    10fa:	bf e3       	ldi	r27, 0x3F	; 63
    10fc:	8f 8b       	std	Y+23, r24	; 0x17
    10fe:	98 8f       	std	Y+24, r25	; 0x18
    1100:	a9 8f       	std	Y+25, r26	; 0x19
    1102:	ba 8f       	std	Y+26, r27	; 0x1a
    1104:	2b c0       	rjmp	.+86     	; 0x115c <__stack+0x8fd>
    1106:	e9 89       	ldd	r30, Y+17	; 0x11
    1108:	fa 89       	ldd	r31, Y+18	; 0x12
    110a:	80 81       	ld	r24, Z
    110c:	91 81       	ldd	r25, Z+1	; 0x01
    110e:	a2 81       	ldd	r26, Z+2	; 0x02
    1110:	b3 81       	ldd	r27, Z+3	; 0x03
    1112:	bc 01       	movw	r22, r24
    1114:	cd 01       	movw	r24, r26
    1116:	24 ea       	ldi	r18, 0xA4	; 164
    1118:	30 e7       	ldi	r19, 0x70	; 112
    111a:	4d e7       	ldi	r20, 0x7D	; 125
    111c:	5f eb       	ldi	r21, 0xBF	; 191
    111e:	0e 94 ee 0f 	call	0x1fdc	; 0x1fdc <__ltsf2>
    1122:	88 23       	and	r24, r24
    1124:	4c f4       	brge	.+18     	; 0x1138 <__stack+0x8d9>
    1126:	84 ea       	ldi	r24, 0xA4	; 164
    1128:	90 e7       	ldi	r25, 0x70	; 112
    112a:	ad e7       	ldi	r26, 0x7D	; 125
    112c:	bf eb       	ldi	r27, 0xBF	; 191
    112e:	8b 8b       	std	Y+19, r24	; 0x13
    1130:	9c 8b       	std	Y+20, r25	; 0x14
    1132:	ad 8b       	std	Y+21, r26	; 0x15
    1134:	be 8b       	std	Y+22, r27	; 0x16
    1136:	0a c0       	rjmp	.+20     	; 0x114c <__stack+0x8ed>
    1138:	e9 89       	ldd	r30, Y+17	; 0x11
    113a:	fa 89       	ldd	r31, Y+18	; 0x12
    113c:	80 81       	ld	r24, Z
    113e:	91 81       	ldd	r25, Z+1	; 0x01
    1140:	a2 81       	ldd	r26, Z+2	; 0x02
    1142:	b3 81       	ldd	r27, Z+3	; 0x03
    1144:	8b 8b       	std	Y+19, r24	; 0x13
    1146:	9c 8b       	std	Y+20, r25	; 0x14
    1148:	ad 8b       	std	Y+21, r26	; 0x15
    114a:	be 8b       	std	Y+22, r27	; 0x16
    114c:	8b 89       	ldd	r24, Y+19	; 0x13
    114e:	9c 89       	ldd	r25, Y+20	; 0x14
    1150:	ad 89       	ldd	r26, Y+21	; 0x15
    1152:	be 89       	ldd	r27, Y+22	; 0x16
    1154:	8f 8b       	std	Y+23, r24	; 0x17
    1156:	98 8f       	std	Y+24, r25	; 0x18
    1158:	a9 8f       	std	Y+25, r26	; 0x19
    115a:	ba 8f       	std	Y+26, r27	; 0x1a
    115c:	e9 89       	ldd	r30, Y+17	; 0x11
    115e:	fa 89       	ldd	r31, Y+18	; 0x12
    1160:	8f 89       	ldd	r24, Y+23	; 0x17
    1162:	98 8d       	ldd	r25, Y+24	; 0x18
    1164:	a9 8d       	ldd	r26, Y+25	; 0x19
    1166:	ba 8d       	ldd	r27, Y+26	; 0x1a
    1168:	80 83       	st	Z, r24
    116a:	91 83       	std	Z+1, r25	; 0x01
    116c:	a2 83       	std	Z+2, r26	; 0x02
    116e:	b3 83       	std	Z+3, r27	; 0x03
}
    1170:	ca 5a       	subi	r28, 0xAA	; 170
    1172:	df 4f       	sbci	r29, 0xFF	; 255
    1174:	0f b6       	in	r0, 0x3f	; 63
    1176:	f8 94       	cli
    1178:	de bf       	out	0x3e, r29	; 62
    117a:	0f be       	out	0x3f, r0	; 63
    117c:	cd bf       	out	0x3d, r28	; 61
    117e:	cf 91       	pop	r28
    1180:	df 91       	pop	r29
    1182:	1f 91       	pop	r17
    1184:	0f 91       	pop	r16
    1186:	ff 90       	pop	r15
    1188:	ef 90       	pop	r14
    118a:	df 90       	pop	r13
    118c:	cf 90       	pop	r12
    118e:	bf 90       	pop	r11
    1190:	af 90       	pop	r10
    1192:	9f 90       	pop	r9
    1194:	8f 90       	pop	r8
    1196:	08 95       	ret

00001198 <moteurControl>:

U8 moteurControl(U8 vitesse,U8 angle,U8 mode)
{
    1198:	8f 92       	push	r8
    119a:	9f 92       	push	r9
    119c:	af 92       	push	r10
    119e:	bf 92       	push	r11
    11a0:	cf 92       	push	r12
    11a2:	df 92       	push	r13
    11a4:	ef 92       	push	r14
    11a6:	ff 92       	push	r15
    11a8:	0f 93       	push	r16
    11aa:	1f 93       	push	r17
    11ac:	df 93       	push	r29
    11ae:	cf 93       	push	r28
    11b0:	cd b7       	in	r28, 0x3d	; 61
    11b2:	de b7       	in	r29, 0x3e	; 62
    11b4:	28 97       	sbiw	r28, 0x08	; 8
    11b6:	0f b6       	in	r0, 0x3f	; 63
    11b8:	f8 94       	cli
    11ba:	de bf       	out	0x3e, r29	; 62
    11bc:	0f be       	out	0x3f, r0	; 63
    11be:	cd bf       	out	0x3d, r28	; 61
    11c0:	8d 83       	std	Y+5, r24	; 0x05
    11c2:	6e 83       	std	Y+6, r22	; 0x06
    11c4:	4f 83       	std	Y+7, r20	; 0x07
	U16 dutyValD;
	U16 dutyValG;

	if(vitesse>VITESSEMAX || angle>ANGLEMAX)	//verifies if received value is not within accepted range
    11c6:	8d 81       	ldd	r24, Y+5	; 0x05
    11c8:	89 3c       	cpi	r24, 0xC9	; 201
    11ca:	18 f4       	brcc	.+6      	; 0x11d2 <moteurControl+0x3a>
    11cc:	8e 81       	ldd	r24, Y+6	; 0x06
    11ce:	85 3b       	cpi	r24, 0xB5	; 181
    11d0:	38 f0       	brcs	.+14     	; 0x11e0 <moteurControl+0x48>
	{
		dbgSendDbgString("ERROR: Value out of range");
    11d2:	88 e7       	ldi	r24, 0x78	; 120
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	0e 94 db 01 	call	0x3b6	; 0x3b6 <dbgSendDbgString>
		return 1;		
    11da:	81 e0       	ldi	r24, 0x01	; 1
    11dc:	88 87       	std	Y+8, r24	; 0x08
    11de:	7e c1       	rjmp	.+764    	; 0x14dc <moteurControl+0x344>
	}

    if(mode!=M_MARCHE)
    11e0:	8f 81       	ldd	r24, Y+7	; 0x07
    11e2:	88 23       	and	r24, r24
    11e4:	c9 f1       	breq	.+114    	; 0x1258 <moteurControl+0xc0>
	{
		switch(mode)
    11e6:	8f 81       	ldd	r24, Y+7	; 0x07
    11e8:	88 2f       	mov	r24, r24
    11ea:	90 e0       	ldi	r25, 0x00	; 0
    11ec:	81 30       	cpi	r24, 0x01	; 1
    11ee:	91 05       	cpc	r25, r1
    11f0:	a9 f4       	brne	.+42     	; 0x121c <moteurControl+0x84>
		{
			case M_NEUTRE:
			M_DIR_G1=0;
    11f2:	80 91 5f 02 	lds	r24, 0x025F
    11f6:	8b 7f       	andi	r24, 0xFB	; 251
    11f8:	80 93 5f 02 	sts	0x025F, r24
			M_DIR_G2=0;
    11fc:	80 91 5f 02 	lds	r24, 0x025F
    1200:	87 7f       	andi	r24, 0xF7	; 247
    1202:	80 93 5f 02 	sts	0x025F, r24
			M_DIR_D1=0;
    1206:	80 91 5f 02 	lds	r24, 0x025F
    120a:	8f 7b       	andi	r24, 0xBF	; 191
    120c:	80 93 5f 02 	sts	0x025F, r24
			M_DIR_D2=0;
    1210:	80 91 5f 02 	lds	r24, 0x025F
    1214:	8f 77       	andi	r24, 0x7F	; 127
    1216:	80 93 5f 02 	sts	0x025F, r24
    121a:	14 c0       	rjmp	.+40     	; 0x1244 <moteurControl+0xac>

			break;

			//M_ARRET
			default:  
			M_DIR_G1=1;
    121c:	80 91 5f 02 	lds	r24, 0x025F
    1220:	84 60       	ori	r24, 0x04	; 4
    1222:	80 93 5f 02 	sts	0x025F, r24
			M_DIR_G2=1;
    1226:	80 91 5f 02 	lds	r24, 0x025F
    122a:	88 60       	ori	r24, 0x08	; 8
    122c:	80 93 5f 02 	sts	0x025F, r24
			M_DIR_D1=1;
    1230:	80 91 5f 02 	lds	r24, 0x025F
    1234:	80 64       	ori	r24, 0x40	; 64
    1236:	80 93 5f 02 	sts	0x025F, r24
			M_DIR_D2=1;
    123a:	80 91 5f 02 	lds	r24, 0x025F
    123e:	80 68       	ori	r24, 0x80	; 128
    1240:	80 93 5f 02 	sts	0x025F, r24
			break;
			mMode=mode;
		}
		
		pwmSetDutyValue(0,0,mPortDREG.byte);
    1244:	20 91 5f 02 	lds	r18, 0x025F
    1248:	80 e0       	ldi	r24, 0x00	; 0
    124a:	90 e0       	ldi	r25, 0x00	; 0
    124c:	60 e0       	ldi	r22, 0x00	; 0
    124e:	70 e0       	ldi	r23, 0x00	; 0
    1250:	42 2f       	mov	r20, r18
    1252:	0e 94 18 03 	call	0x630	; 0x630 <pwmSetDutyValue>
    1256:	41 c1       	rjmp	.+642    	; 0x14da <moteurControl+0x342>
	}
	else if(vitesse!=lastVitesse || angle!=lastAngle)
    1258:	90 91 a3 01 	lds	r25, 0x01A3
    125c:	8d 81       	ldd	r24, Y+5	; 0x05
    125e:	89 17       	cp	r24, r25
    1260:	31 f4       	brne	.+12     	; 0x126e <moteurControl+0xd6>
    1262:	90 91 a4 01 	lds	r25, 0x01A4
    1266:	8e 81       	ldd	r24, Y+6	; 0x06
    1268:	89 17       	cp	r24, r25
    126a:	09 f4       	brne	.+2      	; 0x126e <moteurControl+0xd6>
    126c:	36 c1       	rjmp	.+620    	; 0x14da <moteurControl+0x342>
	{ 
		if(vitesse!=lastVitesse)
    126e:	90 91 a3 01 	lds	r25, 0x01A3
    1272:	8d 81       	ldd	r24, Y+5	; 0x05
    1274:	89 17       	cp	r24, r25
    1276:	09 f1       	breq	.+66     	; 0x12ba <moteurControl+0x122>
		{
			mVitesse_D=(float)(vitesse-100)/100;
    1278:	8d 81       	ldd	r24, Y+5	; 0x05
    127a:	88 2f       	mov	r24, r24
    127c:	90 e0       	ldi	r25, 0x00	; 0
    127e:	84 56       	subi	r24, 0x64	; 100
    1280:	90 40       	sbci	r25, 0x00	; 0
    1282:	aa 27       	eor	r26, r26
    1284:	97 fd       	sbrc	r25, 7
    1286:	a0 95       	com	r26
    1288:	ba 2f       	mov	r27, r26
    128a:	bc 01       	movw	r22, r24
    128c:	cd 01       	movw	r24, r26
    128e:	0e 94 4e 10 	call	0x209c	; 0x209c <__floatsisf>
    1292:	dc 01       	movw	r26, r24
    1294:	cb 01       	movw	r24, r22
    1296:	bc 01       	movw	r22, r24
    1298:	cd 01       	movw	r24, r26
    129a:	20 e0       	ldi	r18, 0x00	; 0
    129c:	30 e0       	ldi	r19, 0x00	; 0
    129e:	48 ec       	ldi	r20, 0xC8	; 200
    12a0:	52 e4       	ldi	r21, 0x42	; 66
    12a2:	0e 94 e2 0e 	call	0x1dc4	; 0x1dc4 <__divsf3>
    12a6:	dc 01       	movw	r26, r24
    12a8:	cb 01       	movw	r24, r22
    12aa:	80 93 a8 01 	sts	0x01A8, r24
    12ae:	90 93 a9 01 	sts	0x01A9, r25
    12b2:	a0 93 aa 01 	sts	0x01AA, r26
    12b6:	b0 93 ab 01 	sts	0x01AB, r27
			
		}

		if(angle!=lastAngle)
    12ba:	90 91 a4 01 	lds	r25, 0x01A4
    12be:	8e 81       	ldd	r24, Y+6	; 0x06
    12c0:	89 17       	cp	r24, r25
    12c2:	59 f1       	breq	.+86     	; 0x131a <moteurControl+0x182>
		{
			mAngle_D=(float)((angle<<1)*Pi)/180;
    12c4:	8e 81       	ldd	r24, Y+6	; 0x06
    12c6:	88 2f       	mov	r24, r24
    12c8:	90 e0       	ldi	r25, 0x00	; 0
    12ca:	88 0f       	add	r24, r24
    12cc:	99 1f       	adc	r25, r25
    12ce:	aa 27       	eor	r26, r26
    12d0:	97 fd       	sbrc	r25, 7
    12d2:	a0 95       	com	r26
    12d4:	ba 2f       	mov	r27, r26
    12d6:	bc 01       	movw	r22, r24
    12d8:	cd 01       	movw	r24, r26
    12da:	0e 94 4e 10 	call	0x209c	; 0x209c <__floatsisf>
    12de:	dc 01       	movw	r26, r24
    12e0:	cb 01       	movw	r24, r22
    12e2:	bc 01       	movw	r22, r24
    12e4:	cd 01       	movw	r24, r26
    12e6:	2b ed       	ldi	r18, 0xDB	; 219
    12e8:	3f e0       	ldi	r19, 0x0F	; 15
    12ea:	49 e4       	ldi	r20, 0x49	; 73
    12ec:	50 e4       	ldi	r21, 0x40	; 64
    12ee:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <__mulsf3>
    12f2:	dc 01       	movw	r26, r24
    12f4:	cb 01       	movw	r24, r22
    12f6:	bc 01       	movw	r22, r24
    12f8:	cd 01       	movw	r24, r26
    12fa:	20 e0       	ldi	r18, 0x00	; 0
    12fc:	30 e0       	ldi	r19, 0x00	; 0
    12fe:	44 e3       	ldi	r20, 0x34	; 52
    1300:	53 e4       	ldi	r21, 0x43	; 67
    1302:	0e 94 e2 0e 	call	0x1dc4	; 0x1dc4 <__divsf3>
    1306:	dc 01       	movw	r26, r24
    1308:	cb 01       	movw	r24, r22
    130a:	80 93 ac 01 	sts	0x01AC, r24
    130e:	90 93 ad 01 	sts	0x01AD, r25
    1312:	a0 93 ae 01 	sts	0x01AE, r26
    1316:	b0 93 af 01 	sts	0x01AF, r27
		}
			
		CalculPWM(mVitesse_D, 0,mVitesse_D,mVitesse_D,&mDuty_G,&mDuty_D);
    131a:	20 91 a8 01 	lds	r18, 0x01A8
    131e:	30 91 a9 01 	lds	r19, 0x01A9
    1322:	40 91 aa 01 	lds	r20, 0x01AA
    1326:	50 91 ab 01 	lds	r21, 0x01AB
    132a:	e0 90 a8 01 	lds	r14, 0x01A8
    132e:	f0 90 a9 01 	lds	r15, 0x01A9
    1332:	00 91 aa 01 	lds	r16, 0x01AA
    1336:	10 91 ab 01 	lds	r17, 0x01AB
    133a:	a0 90 a8 01 	lds	r10, 0x01A8
    133e:	b0 90 a9 01 	lds	r11, 0x01A9
    1342:	c0 90 aa 01 	lds	r12, 0x01AA
    1346:	d0 90 ab 01 	lds	r13, 0x01AB
    134a:	00 d0       	rcall	.+0      	; 0x134c <moteurControl+0x1b4>
    134c:	ed b7       	in	r30, 0x3d	; 61
    134e:	fe b7       	in	r31, 0x3e	; 62
    1350:	31 96       	adiw	r30, 0x01	; 1
    1352:	a8 eb       	ldi	r26, 0xB8	; 184
    1354:	b1 e0       	ldi	r27, 0x01	; 1
    1356:	8c eb       	ldi	r24, 0xBC	; 188
    1358:	91 e0       	ldi	r25, 0x01	; 1
    135a:	91 83       	std	Z+1, r25	; 0x01
    135c:	80 83       	st	Z, r24
    135e:	ca 01       	movw	r24, r20
    1360:	b9 01       	movw	r22, r18
    1362:	20 e0       	ldi	r18, 0x00	; 0
    1364:	30 e0       	ldi	r19, 0x00	; 0
    1366:	40 e0       	ldi	r20, 0x00	; 0
    1368:	50 e0       	ldi	r21, 0x00	; 0
    136a:	4d 01       	movw	r8, r26
    136c:	0e 94 72 03 	call	0x6e4	; 0x6e4 <CalculPWM>
    1370:	0f 90       	pop	r0
    1372:	0f 90       	pop	r0

		//MODE AVANT
		if(mDuty_G<0)
    1374:	80 91 b8 01 	lds	r24, 0x01B8
    1378:	90 91 b9 01 	lds	r25, 0x01B9
    137c:	a0 91 ba 01 	lds	r26, 0x01BA
    1380:	b0 91 bb 01 	lds	r27, 0x01BB
    1384:	bc 01       	movw	r22, r24
    1386:	cd 01       	movw	r24, r26
    1388:	20 e0       	ldi	r18, 0x00	; 0
    138a:	30 e0       	ldi	r19, 0x00	; 0
    138c:	40 e0       	ldi	r20, 0x00	; 0
    138e:	50 e0       	ldi	r21, 0x00	; 0
    1390:	0e 94 ee 0f 	call	0x1fdc	; 0x1fdc <__ltsf2>
    1394:	88 23       	and	r24, r24
    1396:	e4 f4       	brge	.+56     	; 0x13d0 <moteurControl+0x238>
		{
			M_DIR_G1=0;
    1398:	80 91 5f 02 	lds	r24, 0x025F
    139c:	8b 7f       	andi	r24, 0xFB	; 251
    139e:	80 93 5f 02 	sts	0x025F, r24
			M_DIR_G2=1;
    13a2:	80 91 5f 02 	lds	r24, 0x025F
    13a6:	88 60       	ori	r24, 0x08	; 8
    13a8:	80 93 5f 02 	sts	0x025F, r24
			mDuty_G=mDuty_G*(-1);
    13ac:	80 91 b8 01 	lds	r24, 0x01B8
    13b0:	90 91 b9 01 	lds	r25, 0x01B9
    13b4:	a0 91 ba 01 	lds	r26, 0x01BA
    13b8:	b0 91 bb 01 	lds	r27, 0x01BB
    13bc:	b0 58       	subi	r27, 0x80	; 128
    13be:	80 93 b8 01 	sts	0x01B8, r24
    13c2:	90 93 b9 01 	sts	0x01B9, r25
    13c6:	a0 93 ba 01 	sts	0x01BA, r26
    13ca:	b0 93 bb 01 	sts	0x01BB, r27
    13ce:	0a c0       	rjmp	.+20     	; 0x13e4 <moteurControl+0x24c>
		}
		//MODE ARRIERE	
		else
		{
			M_DIR_G1=1;
    13d0:	80 91 5f 02 	lds	r24, 0x025F
    13d4:	84 60       	ori	r24, 0x04	; 4
    13d6:	80 93 5f 02 	sts	0x025F, r24
			M_DIR_G2=0;	
    13da:	80 91 5f 02 	lds	r24, 0x025F
    13de:	87 7f       	andi	r24, 0xF7	; 247
    13e0:	80 93 5f 02 	sts	0x025F, r24
		}	

		//MODE AVANT
		if(mDuty_D<0)
    13e4:	80 91 bc 01 	lds	r24, 0x01BC
    13e8:	90 91 bd 01 	lds	r25, 0x01BD
    13ec:	a0 91 be 01 	lds	r26, 0x01BE
    13f0:	b0 91 bf 01 	lds	r27, 0x01BF
    13f4:	bc 01       	movw	r22, r24
    13f6:	cd 01       	movw	r24, r26
    13f8:	20 e0       	ldi	r18, 0x00	; 0
    13fa:	30 e0       	ldi	r19, 0x00	; 0
    13fc:	40 e0       	ldi	r20, 0x00	; 0
    13fe:	50 e0       	ldi	r21, 0x00	; 0
    1400:	0e 94 ee 0f 	call	0x1fdc	; 0x1fdc <__ltsf2>
    1404:	88 23       	and	r24, r24
    1406:	e4 f4       	brge	.+56     	; 0x1440 <moteurControl+0x2a8>
		{
			M_DIR_D1=0;
    1408:	80 91 5f 02 	lds	r24, 0x025F
    140c:	8f 7b       	andi	r24, 0xBF	; 191
    140e:	80 93 5f 02 	sts	0x025F, r24
			M_DIR_D2=1;
    1412:	80 91 5f 02 	lds	r24, 0x025F
    1416:	80 68       	ori	r24, 0x80	; 128
    1418:	80 93 5f 02 	sts	0x025F, r24
			mDuty_D=mDuty_D*(-1);
    141c:	80 91 bc 01 	lds	r24, 0x01BC
    1420:	90 91 bd 01 	lds	r25, 0x01BD
    1424:	a0 91 be 01 	lds	r26, 0x01BE
    1428:	b0 91 bf 01 	lds	r27, 0x01BF
    142c:	b0 58       	subi	r27, 0x80	; 128
    142e:	80 93 bc 01 	sts	0x01BC, r24
    1432:	90 93 bd 01 	sts	0x01BD, r25
    1436:	a0 93 be 01 	sts	0x01BE, r26
    143a:	b0 93 bf 01 	sts	0x01BF, r27
    143e:	0a c0       	rjmp	.+20     	; 0x1454 <moteurControl+0x2bc>
		}
		//MODE ARRIERE	
		else
		{
			M_DIR_D1=1;
    1440:	80 91 5f 02 	lds	r24, 0x025F
    1444:	80 64       	ori	r24, 0x40	; 64
    1446:	80 93 5f 02 	sts	0x025F, r24
			M_DIR_D2=0;	
    144a:	80 91 5f 02 	lds	r24, 0x025F
    144e:	8f 77       	andi	r24, 0x7F	; 127
    1450:	80 93 5f 02 	sts	0x025F, r24
		}
		dutyValD=(U16)((float)mDuty_D*10000);
    1454:	80 91 bc 01 	lds	r24, 0x01BC
    1458:	90 91 bd 01 	lds	r25, 0x01BD
    145c:	a0 91 be 01 	lds	r26, 0x01BE
    1460:	b0 91 bf 01 	lds	r27, 0x01BF
    1464:	bc 01       	movw	r22, r24
    1466:	cd 01       	movw	r24, r26
    1468:	20 e0       	ldi	r18, 0x00	; 0
    146a:	30 e4       	ldi	r19, 0x40	; 64
    146c:	4c e1       	ldi	r20, 0x1C	; 28
    146e:	56 e4       	ldi	r21, 0x46	; 70
    1470:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <__mulsf3>
    1474:	dc 01       	movw	r26, r24
    1476:	cb 01       	movw	r24, r22
    1478:	bc 01       	movw	r22, r24
    147a:	cd 01       	movw	r24, r26
    147c:	0e 94 12 0c 	call	0x1824	; 0x1824 <__fixunssfsi>
    1480:	dc 01       	movw	r26, r24
    1482:	cb 01       	movw	r24, r22
    1484:	9c 83       	std	Y+4, r25	; 0x04
    1486:	8b 83       	std	Y+3, r24	; 0x03
		dutyValG=(U16)((float)mDuty_D*10000);
    1488:	80 91 bc 01 	lds	r24, 0x01BC
    148c:	90 91 bd 01 	lds	r25, 0x01BD
    1490:	a0 91 be 01 	lds	r26, 0x01BE
    1494:	b0 91 bf 01 	lds	r27, 0x01BF
    1498:	bc 01       	movw	r22, r24
    149a:	cd 01       	movw	r24, r26
    149c:	20 e0       	ldi	r18, 0x00	; 0
    149e:	30 e4       	ldi	r19, 0x40	; 64
    14a0:	4c e1       	ldi	r20, 0x1C	; 28
    14a2:	56 e4       	ldi	r21, 0x46	; 70
    14a4:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <__mulsf3>
    14a8:	dc 01       	movw	r26, r24
    14aa:	cb 01       	movw	r24, r22
    14ac:	bc 01       	movw	r22, r24
    14ae:	cd 01       	movw	r24, r26
    14b0:	0e 94 12 0c 	call	0x1824	; 0x1824 <__fixunssfsi>
    14b4:	dc 01       	movw	r26, r24
    14b6:	cb 01       	movw	r24, r22
    14b8:	9a 83       	std	Y+2, r25	; 0x02
    14ba:	89 83       	std	Y+1, r24	; 0x01
		pwmSetDutyValue(dutyValD,dutyValG,mPortDREG.byte);
    14bc:	40 91 5f 02 	lds	r20, 0x025F
    14c0:	8b 81       	ldd	r24, Y+3	; 0x03
    14c2:	9c 81       	ldd	r25, Y+4	; 0x04
    14c4:	29 81       	ldd	r18, Y+1	; 0x01
    14c6:	3a 81       	ldd	r19, Y+2	; 0x02
    14c8:	b9 01       	movw	r22, r18
    14ca:	0e 94 18 03 	call	0x630	; 0x630 <pwmSetDutyValue>
//		dbgSendDbgU16ToDec(dutyValD);
//		dbgSendDbgU16ToDec(dutyValG);
		lastVitesse=vitesse;
    14ce:	8d 81       	ldd	r24, Y+5	; 0x05
    14d0:	80 93 a3 01 	sts	0x01A3, r24
		lastAngle=angle;
    14d4:	8e 81       	ldd	r24, Y+6	; 0x06
    14d6:	80 93 a4 01 	sts	0x01A4, r24

	}

	return 0;
    14da:	18 86       	std	Y+8, r1	; 0x08
    14dc:	88 85       	ldd	r24, Y+8	; 0x08
}
    14de:	28 96       	adiw	r28, 0x08	; 8
    14e0:	0f b6       	in	r0, 0x3f	; 63
    14e2:	f8 94       	cli
    14e4:	de bf       	out	0x3e, r29	; 62
    14e6:	0f be       	out	0x3f, r0	; 63
    14e8:	cd bf       	out	0x3d, r28	; 61
    14ea:	cf 91       	pop	r28
    14ec:	df 91       	pop	r29
    14ee:	1f 91       	pop	r17
    14f0:	0f 91       	pop	r16
    14f2:	ff 90       	pop	r15
    14f4:	ef 90       	pop	r14
    14f6:	df 90       	pop	r13
    14f8:	cf 90       	pop	r12
    14fa:	bf 90       	pop	r11
    14fc:	af 90       	pop	r10
    14fe:	9f 90       	pop	r9
    1500:	8f 90       	pop	r8
    1502:	08 95       	ret

00001504 <moteurAsservissement>:

void moteurAsservissement(U16 vitG,U16 vitD)
{
    1504:	6f 92       	push	r6
    1506:	7f 92       	push	r7
    1508:	8f 92       	push	r8
    150a:	9f 92       	push	r9
    150c:	af 92       	push	r10
    150e:	bf 92       	push	r11
    1510:	cf 92       	push	r12
    1512:	df 92       	push	r13
    1514:	ef 92       	push	r14
    1516:	ff 92       	push	r15
    1518:	0f 93       	push	r16
    151a:	1f 93       	push	r17
    151c:	df 93       	push	r29
    151e:	cf 93       	push	r28
    1520:	00 d0       	rcall	.+0      	; 0x1522 <moteurAsservissement+0x1e>
    1522:	00 d0       	rcall	.+0      	; 0x1524 <moteurAsservissement+0x20>
    1524:	00 d0       	rcall	.+0      	; 0x1526 <moteurAsservissement+0x22>
    1526:	cd b7       	in	r28, 0x3d	; 61
    1528:	de b7       	in	r29, 0x3e	; 62
    152a:	9c 83       	std	Y+4, r25	; 0x04
    152c:	8b 83       	std	Y+3, r24	; 0x03
    152e:	7e 83       	std	Y+6, r23	; 0x06
    1530:	6d 83       	std	Y+5, r22	; 0x05
	U8 dutyValD;
	U8 dutyValG;
	if((vitG!=lastVitG || vitD!=lastVitD)&&mMode==M_MARCHE)
    1532:	80 91 a5 01 	lds	r24, 0x01A5
    1536:	28 2f       	mov	r18, r24
    1538:	30 e0       	ldi	r19, 0x00	; 0
    153a:	8b 81       	ldd	r24, Y+3	; 0x03
    153c:	9c 81       	ldd	r25, Y+4	; 0x04
    153e:	28 17       	cp	r18, r24
    1540:	39 07       	cpc	r19, r25
    1542:	51 f4       	brne	.+20     	; 0x1558 <moteurAsservissement+0x54>
    1544:	80 91 a6 01 	lds	r24, 0x01A6
    1548:	28 2f       	mov	r18, r24
    154a:	30 e0       	ldi	r19, 0x00	; 0
    154c:	8d 81       	ldd	r24, Y+5	; 0x05
    154e:	9e 81       	ldd	r25, Y+6	; 0x06
    1550:	28 17       	cp	r18, r24
    1552:	39 07       	cpc	r19, r25
    1554:	09 f4       	brne	.+2      	; 0x1558 <moteurAsservissement+0x54>
    1556:	51 c1       	rjmp	.+674    	; 0x17fa <moteurAsservissement+0x2f6>
    1558:	80 91 a7 01 	lds	r24, 0x01A7
    155c:	88 23       	and	r24, r24
    155e:	09 f0       	breq	.+2      	; 0x1562 <moteurAsservissement+0x5e>
    1560:	4c c1       	rjmp	.+664    	; 0x17fa <moteurAsservissement+0x2f6>
	{
		if(vitG!=lastVitG)
    1562:	80 91 a5 01 	lds	r24, 0x01A5
    1566:	28 2f       	mov	r18, r24
    1568:	30 e0       	ldi	r19, 0x00	; 0
    156a:	8b 81       	ldd	r24, Y+3	; 0x03
    156c:	9c 81       	ldd	r25, Y+4	; 0x04
    156e:	28 17       	cp	r18, r24
    1570:	39 07       	cpc	r19, r25
    1572:	39 f1       	breq	.+78     	; 0x15c2 <moteurAsservissement+0xbe>
		{
			mVg=(float)((float)vitG-511)/511;
    1574:	8b 81       	ldd	r24, Y+3	; 0x03
    1576:	9c 81       	ldd	r25, Y+4	; 0x04
    1578:	cc 01       	movw	r24, r24
    157a:	a0 e0       	ldi	r26, 0x00	; 0
    157c:	b0 e0       	ldi	r27, 0x00	; 0
    157e:	bc 01       	movw	r22, r24
    1580:	cd 01       	movw	r24, r26
    1582:	0e 94 00 11 	call	0x2200	; 0x2200 <__floatunsisf>
    1586:	dc 01       	movw	r26, r24
    1588:	cb 01       	movw	r24, r22
    158a:	bc 01       	movw	r22, r24
    158c:	cd 01       	movw	r24, r26
    158e:	20 e0       	ldi	r18, 0x00	; 0
    1590:	30 e8       	ldi	r19, 0x80	; 128
    1592:	4f ef       	ldi	r20, 0xFF	; 255
    1594:	53 e4       	ldi	r21, 0x43	; 67
    1596:	0e 94 8a 0d 	call	0x1b14	; 0x1b14 <__subsf3>
    159a:	dc 01       	movw	r26, r24
    159c:	cb 01       	movw	r24, r22
    159e:	bc 01       	movw	r22, r24
    15a0:	cd 01       	movw	r24, r26
    15a2:	20 e0       	ldi	r18, 0x00	; 0
    15a4:	30 e8       	ldi	r19, 0x80	; 128
    15a6:	4f ef       	ldi	r20, 0xFF	; 255
    15a8:	53 e4       	ldi	r21, 0x43	; 67
    15aa:	0e 94 e2 0e 	call	0x1dc4	; 0x1dc4 <__divsf3>
    15ae:	dc 01       	movw	r26, r24
    15b0:	cb 01       	movw	r24, r22
    15b2:	80 93 b0 01 	sts	0x01B0, r24
    15b6:	90 93 b1 01 	sts	0x01B1, r25
    15ba:	a0 93 b2 01 	sts	0x01B2, r26
    15be:	b0 93 b3 01 	sts	0x01B3, r27
			
		}

		if(vitD!=lastVitD)
    15c2:	80 91 a6 01 	lds	r24, 0x01A6
    15c6:	28 2f       	mov	r18, r24
    15c8:	30 e0       	ldi	r19, 0x00	; 0
    15ca:	8d 81       	ldd	r24, Y+5	; 0x05
    15cc:	9e 81       	ldd	r25, Y+6	; 0x06
    15ce:	28 17       	cp	r18, r24
    15d0:	39 07       	cpc	r19, r25
    15d2:	39 f1       	breq	.+78     	; 0x1622 <moteurAsservissement+0x11e>
		{
			mVd=(float)((float)vitD-511)/511;
    15d4:	8d 81       	ldd	r24, Y+5	; 0x05
    15d6:	9e 81       	ldd	r25, Y+6	; 0x06
    15d8:	cc 01       	movw	r24, r24
    15da:	a0 e0       	ldi	r26, 0x00	; 0
    15dc:	b0 e0       	ldi	r27, 0x00	; 0
    15de:	bc 01       	movw	r22, r24
    15e0:	cd 01       	movw	r24, r26
    15e2:	0e 94 00 11 	call	0x2200	; 0x2200 <__floatunsisf>
    15e6:	dc 01       	movw	r26, r24
    15e8:	cb 01       	movw	r24, r22
    15ea:	bc 01       	movw	r22, r24
    15ec:	cd 01       	movw	r24, r26
    15ee:	20 e0       	ldi	r18, 0x00	; 0
    15f0:	30 e8       	ldi	r19, 0x80	; 128
    15f2:	4f ef       	ldi	r20, 0xFF	; 255
    15f4:	53 e4       	ldi	r21, 0x43	; 67
    15f6:	0e 94 8a 0d 	call	0x1b14	; 0x1b14 <__subsf3>
    15fa:	dc 01       	movw	r26, r24
    15fc:	cb 01       	movw	r24, r22
    15fe:	bc 01       	movw	r22, r24
    1600:	cd 01       	movw	r24, r26
    1602:	20 e0       	ldi	r18, 0x00	; 0
    1604:	30 e8       	ldi	r19, 0x80	; 128
    1606:	4f ef       	ldi	r20, 0xFF	; 255
    1608:	53 e4       	ldi	r21, 0x43	; 67
    160a:	0e 94 e2 0e 	call	0x1dc4	; 0x1dc4 <__divsf3>
    160e:	dc 01       	movw	r26, r24
    1610:	cb 01       	movw	r24, r22
    1612:	80 93 b4 01 	sts	0x01B4, r24
    1616:	90 93 b5 01 	sts	0x01B5, r25
    161a:	a0 93 b6 01 	sts	0x01B6, r26
    161e:	b0 93 b7 01 	sts	0x01B7, r27
		}
			
		CalculPWM(mVitesse_D, mAngle_D,mVg,mVd,&mDuty_G,&mDuty_D);
    1622:	20 91 a8 01 	lds	r18, 0x01A8
    1626:	30 91 a9 01 	lds	r19, 0x01A9
    162a:	40 91 aa 01 	lds	r20, 0x01AA
    162e:	50 91 ab 01 	lds	r21, 0x01AB
    1632:	e0 90 ac 01 	lds	r14, 0x01AC
    1636:	f0 90 ad 01 	lds	r15, 0x01AD
    163a:	00 91 ae 01 	lds	r16, 0x01AE
    163e:	10 91 af 01 	lds	r17, 0x01AF
    1642:	a0 90 b0 01 	lds	r10, 0x01B0
    1646:	b0 90 b1 01 	lds	r11, 0x01B1
    164a:	c0 90 b2 01 	lds	r12, 0x01B2
    164e:	d0 90 b3 01 	lds	r13, 0x01B3
    1652:	60 90 b4 01 	lds	r6, 0x01B4
    1656:	70 90 b5 01 	lds	r7, 0x01B5
    165a:	80 90 b6 01 	lds	r8, 0x01B6
    165e:	90 90 b7 01 	lds	r9, 0x01B7
    1662:	00 d0       	rcall	.+0      	; 0x1664 <moteurAsservissement+0x160>
    1664:	ed b7       	in	r30, 0x3d	; 61
    1666:	fe b7       	in	r31, 0x3e	; 62
    1668:	31 96       	adiw	r30, 0x01	; 1
    166a:	a8 eb       	ldi	r26, 0xB8	; 184
    166c:	b1 e0       	ldi	r27, 0x01	; 1
    166e:	8c eb       	ldi	r24, 0xBC	; 188
    1670:	91 e0       	ldi	r25, 0x01	; 1
    1672:	91 83       	std	Z+1, r25	; 0x01
    1674:	80 83       	st	Z, r24
    1676:	ca 01       	movw	r24, r20
    1678:	b9 01       	movw	r22, r18
    167a:	a8 01       	movw	r20, r16
    167c:	97 01       	movw	r18, r14
    167e:	86 01       	movw	r16, r12
    1680:	75 01       	movw	r14, r10
    1682:	64 01       	movw	r12, r8
    1684:	53 01       	movw	r10, r6
    1686:	4d 01       	movw	r8, r26
    1688:	0e 94 72 03 	call	0x6e4	; 0x6e4 <CalculPWM>
    168c:	0f 90       	pop	r0
    168e:	0f 90       	pop	r0

		//MODE AVANT
		if(mDuty_G<0)
    1690:	80 91 b8 01 	lds	r24, 0x01B8
    1694:	90 91 b9 01 	lds	r25, 0x01B9
    1698:	a0 91 ba 01 	lds	r26, 0x01BA
    169c:	b0 91 bb 01 	lds	r27, 0x01BB
    16a0:	bc 01       	movw	r22, r24
    16a2:	cd 01       	movw	r24, r26
    16a4:	20 e0       	ldi	r18, 0x00	; 0
    16a6:	30 e0       	ldi	r19, 0x00	; 0
    16a8:	40 e0       	ldi	r20, 0x00	; 0
    16aa:	50 e0       	ldi	r21, 0x00	; 0
    16ac:	0e 94 ee 0f 	call	0x1fdc	; 0x1fdc <__ltsf2>
    16b0:	88 23       	and	r24, r24
    16b2:	e4 f4       	brge	.+56     	; 0x16ec <moteurAsservissement+0x1e8>
		{
			M_DIR_G1=0;
    16b4:	80 91 5f 02 	lds	r24, 0x025F
    16b8:	8b 7f       	andi	r24, 0xFB	; 251
    16ba:	80 93 5f 02 	sts	0x025F, r24
			M_DIR_G2=1;
    16be:	80 91 5f 02 	lds	r24, 0x025F
    16c2:	88 60       	ori	r24, 0x08	; 8
    16c4:	80 93 5f 02 	sts	0x025F, r24
			mDuty_G=mDuty_G*(-1);
    16c8:	80 91 b8 01 	lds	r24, 0x01B8
    16cc:	90 91 b9 01 	lds	r25, 0x01B9
    16d0:	a0 91 ba 01 	lds	r26, 0x01BA
    16d4:	b0 91 bb 01 	lds	r27, 0x01BB
    16d8:	b0 58       	subi	r27, 0x80	; 128
    16da:	80 93 b8 01 	sts	0x01B8, r24
    16de:	90 93 b9 01 	sts	0x01B9, r25
    16e2:	a0 93 ba 01 	sts	0x01BA, r26
    16e6:	b0 93 bb 01 	sts	0x01BB, r27
    16ea:	0a c0       	rjmp	.+20     	; 0x1700 <moteurAsservissement+0x1fc>
		}
		//MODE ARRIERE	
		else
		{
			M_DIR_G1=1;
    16ec:	80 91 5f 02 	lds	r24, 0x025F
    16f0:	84 60       	ori	r24, 0x04	; 4
    16f2:	80 93 5f 02 	sts	0x025F, r24
			M_DIR_G2=0;	
    16f6:	80 91 5f 02 	lds	r24, 0x025F
    16fa:	87 7f       	andi	r24, 0xF7	; 247
    16fc:	80 93 5f 02 	sts	0x025F, r24
		}	

		//MODE AVANT
		if(mDuty_D<0)
    1700:	80 91 bc 01 	lds	r24, 0x01BC
    1704:	90 91 bd 01 	lds	r25, 0x01BD
    1708:	a0 91 be 01 	lds	r26, 0x01BE
    170c:	b0 91 bf 01 	lds	r27, 0x01BF
    1710:	bc 01       	movw	r22, r24
    1712:	cd 01       	movw	r24, r26
    1714:	20 e0       	ldi	r18, 0x00	; 0
    1716:	30 e0       	ldi	r19, 0x00	; 0
    1718:	40 e0       	ldi	r20, 0x00	; 0
    171a:	50 e0       	ldi	r21, 0x00	; 0
    171c:	0e 94 ee 0f 	call	0x1fdc	; 0x1fdc <__ltsf2>
    1720:	88 23       	and	r24, r24
    1722:	e4 f4       	brge	.+56     	; 0x175c <moteurAsservissement+0x258>
		{
			M_DIR_D1=0;
    1724:	80 91 5f 02 	lds	r24, 0x025F
    1728:	8f 7b       	andi	r24, 0xBF	; 191
    172a:	80 93 5f 02 	sts	0x025F, r24
			M_DIR_D2=1;
    172e:	80 91 5f 02 	lds	r24, 0x025F
    1732:	80 68       	ori	r24, 0x80	; 128
    1734:	80 93 5f 02 	sts	0x025F, r24
			mDuty_D=mDuty_D*(-1);
    1738:	80 91 bc 01 	lds	r24, 0x01BC
    173c:	90 91 bd 01 	lds	r25, 0x01BD
    1740:	a0 91 be 01 	lds	r26, 0x01BE
    1744:	b0 91 bf 01 	lds	r27, 0x01BF
    1748:	b0 58       	subi	r27, 0x80	; 128
    174a:	80 93 bc 01 	sts	0x01BC, r24
    174e:	90 93 bd 01 	sts	0x01BD, r25
    1752:	a0 93 be 01 	sts	0x01BE, r26
    1756:	b0 93 bf 01 	sts	0x01BF, r27
    175a:	0a c0       	rjmp	.+20     	; 0x1770 <moteurAsservissement+0x26c>
		}
		//MODE ARRIERE	
		else
		{
			M_DIR_D1=1;
    175c:	80 91 5f 02 	lds	r24, 0x025F
    1760:	80 64       	ori	r24, 0x40	; 64
    1762:	80 93 5f 02 	sts	0x025F, r24
			M_DIR_D2=0;	
    1766:	80 91 5f 02 	lds	r24, 0x025F
    176a:	8f 77       	andi	r24, 0x7F	; 127
    176c:	80 93 5f 02 	sts	0x025F, r24
		}
		dutyValD=mDuty_D*255;
    1770:	80 91 bc 01 	lds	r24, 0x01BC
    1774:	90 91 bd 01 	lds	r25, 0x01BD
    1778:	a0 91 be 01 	lds	r26, 0x01BE
    177c:	b0 91 bf 01 	lds	r27, 0x01BF
    1780:	bc 01       	movw	r22, r24
    1782:	cd 01       	movw	r24, r26
    1784:	20 e0       	ldi	r18, 0x00	; 0
    1786:	30 e0       	ldi	r19, 0x00	; 0
    1788:	4f e7       	ldi	r20, 0x7F	; 127
    178a:	53 e4       	ldi	r21, 0x43	; 67
    178c:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <__mulsf3>
    1790:	dc 01       	movw	r26, r24
    1792:	cb 01       	movw	r24, r22
    1794:	bc 01       	movw	r22, r24
    1796:	cd 01       	movw	r24, r26
    1798:	0e 94 12 0c 	call	0x1824	; 0x1824 <__fixunssfsi>
    179c:	dc 01       	movw	r26, r24
    179e:	cb 01       	movw	r24, r22
    17a0:	8a 83       	std	Y+2, r24	; 0x02
		dutyValG=mDuty_D*255;	
    17a2:	80 91 bc 01 	lds	r24, 0x01BC
    17a6:	90 91 bd 01 	lds	r25, 0x01BD
    17aa:	a0 91 be 01 	lds	r26, 0x01BE
    17ae:	b0 91 bf 01 	lds	r27, 0x01BF
    17b2:	bc 01       	movw	r22, r24
    17b4:	cd 01       	movw	r24, r26
    17b6:	20 e0       	ldi	r18, 0x00	; 0
    17b8:	30 e0       	ldi	r19, 0x00	; 0
    17ba:	4f e7       	ldi	r20, 0x7F	; 127
    17bc:	53 e4       	ldi	r21, 0x43	; 67
    17be:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <__mulsf3>
    17c2:	dc 01       	movw	r26, r24
    17c4:	cb 01       	movw	r24, r22
    17c6:	bc 01       	movw	r22, r24
    17c8:	cd 01       	movw	r24, r26
    17ca:	0e 94 12 0c 	call	0x1824	; 0x1824 <__fixunssfsi>
    17ce:	dc 01       	movw	r26, r24
    17d0:	cb 01       	movw	r24, r22
    17d2:	89 83       	std	Y+1, r24	; 0x01
		pwmSetDutyValue(dutyValD,dutyValG,mPortDREG.byte);
    17d4:	8a 81       	ldd	r24, Y+2	; 0x02
    17d6:	48 2f       	mov	r20, r24
    17d8:	50 e0       	ldi	r21, 0x00	; 0
    17da:	89 81       	ldd	r24, Y+1	; 0x01
    17dc:	28 2f       	mov	r18, r24
    17de:	30 e0       	ldi	r19, 0x00	; 0
    17e0:	e0 91 5f 02 	lds	r30, 0x025F
    17e4:	ca 01       	movw	r24, r20
    17e6:	b9 01       	movw	r22, r18
    17e8:	4e 2f       	mov	r20, r30
    17ea:	0e 94 18 03 	call	0x630	; 0x630 <pwmSetDutyValue>
		lastVitG=vitG;
    17ee:	8b 81       	ldd	r24, Y+3	; 0x03
    17f0:	80 93 a5 01 	sts	0x01A5, r24
		lastVitD=vitD;
    17f4:	8d 81       	ldd	r24, Y+5	; 0x05
    17f6:	80 93 a6 01 	sts	0x01A6, r24
	}



}
    17fa:	26 96       	adiw	r28, 0x06	; 6
    17fc:	0f b6       	in	r0, 0x3f	; 63
    17fe:	f8 94       	cli
    1800:	de bf       	out	0x3e, r29	; 62
    1802:	0f be       	out	0x3f, r0	; 63
    1804:	cd bf       	out	0x3d, r28	; 61
    1806:	cf 91       	pop	r28
    1808:	df 91       	pop	r29
    180a:	1f 91       	pop	r17
    180c:	0f 91       	pop	r16
    180e:	ff 90       	pop	r15
    1810:	ef 90       	pop	r14
    1812:	df 90       	pop	r13
    1814:	cf 90       	pop	r12
    1816:	bf 90       	pop	r11
    1818:	af 90       	pop	r10
    181a:	9f 90       	pop	r9
    181c:	8f 90       	pop	r8
    181e:	7f 90       	pop	r7
    1820:	6f 90       	pop	r6
    1822:	08 95       	ret

00001824 <__fixunssfsi>:
    1824:	ef 92       	push	r14
    1826:	ff 92       	push	r15
    1828:	0f 93       	push	r16
    182a:	1f 93       	push	r17
    182c:	7b 01       	movw	r14, r22
    182e:	8c 01       	movw	r16, r24
    1830:	20 e0       	ldi	r18, 0x00	; 0
    1832:	30 e0       	ldi	r19, 0x00	; 0
    1834:	40 e0       	ldi	r20, 0x00	; 0
    1836:	5f e4       	ldi	r21, 0x4F	; 79
    1838:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__gesf2>
    183c:	88 23       	and	r24, r24
    183e:	8c f0       	brlt	.+34     	; 0x1862 <__fixunssfsi+0x3e>
    1840:	c8 01       	movw	r24, r16
    1842:	b7 01       	movw	r22, r14
    1844:	20 e0       	ldi	r18, 0x00	; 0
    1846:	30 e0       	ldi	r19, 0x00	; 0
    1848:	40 e0       	ldi	r20, 0x00	; 0
    184a:	5f e4       	ldi	r21, 0x4F	; 79
    184c:	0e 94 8a 0d 	call	0x1b14	; 0x1b14 <__subsf3>
    1850:	0e 94 ac 10 	call	0x2158	; 0x2158 <__fixsfsi>
    1854:	9b 01       	movw	r18, r22
    1856:	ac 01       	movw	r20, r24
    1858:	20 50       	subi	r18, 0x00	; 0
    185a:	30 40       	sbci	r19, 0x00	; 0
    185c:	40 40       	sbci	r20, 0x00	; 0
    185e:	50 48       	sbci	r21, 0x80	; 128
    1860:	06 c0       	rjmp	.+12     	; 0x186e <__fixunssfsi+0x4a>
    1862:	c8 01       	movw	r24, r16
    1864:	b7 01       	movw	r22, r14
    1866:	0e 94 ac 10 	call	0x2158	; 0x2158 <__fixsfsi>
    186a:	9b 01       	movw	r18, r22
    186c:	ac 01       	movw	r20, r24
    186e:	b9 01       	movw	r22, r18
    1870:	ca 01       	movw	r24, r20
    1872:	1f 91       	pop	r17
    1874:	0f 91       	pop	r16
    1876:	ff 90       	pop	r15
    1878:	ef 90       	pop	r14
    187a:	08 95       	ret

0000187c <_fpadd_parts>:
    187c:	a0 e0       	ldi	r26, 0x00	; 0
    187e:	b0 e0       	ldi	r27, 0x00	; 0
    1880:	e4 e4       	ldi	r30, 0x44	; 68
    1882:	fc e0       	ldi	r31, 0x0C	; 12
    1884:	0c 94 82 13 	jmp	0x2704	; 0x2704 <__prologue_saves__>
    1888:	dc 01       	movw	r26, r24
    188a:	2b 01       	movw	r4, r22
    188c:	fa 01       	movw	r30, r20
    188e:	9c 91       	ld	r25, X
    1890:	92 30       	cpi	r25, 0x02	; 2
    1892:	08 f4       	brcc	.+2      	; 0x1896 <_fpadd_parts+0x1a>
    1894:	39 c1       	rjmp	.+626    	; 0x1b08 <_fpadd_parts+0x28c>
    1896:	eb 01       	movw	r28, r22
    1898:	88 81       	ld	r24, Y
    189a:	82 30       	cpi	r24, 0x02	; 2
    189c:	08 f4       	brcc	.+2      	; 0x18a0 <_fpadd_parts+0x24>
    189e:	33 c1       	rjmp	.+614    	; 0x1b06 <_fpadd_parts+0x28a>
    18a0:	94 30       	cpi	r25, 0x04	; 4
    18a2:	69 f4       	brne	.+26     	; 0x18be <_fpadd_parts+0x42>
    18a4:	84 30       	cpi	r24, 0x04	; 4
    18a6:	09 f0       	breq	.+2      	; 0x18aa <_fpadd_parts+0x2e>
    18a8:	2f c1       	rjmp	.+606    	; 0x1b08 <_fpadd_parts+0x28c>
    18aa:	11 96       	adiw	r26, 0x01	; 1
    18ac:	9c 91       	ld	r25, X
    18ae:	11 97       	sbiw	r26, 0x01	; 1
    18b0:	89 81       	ldd	r24, Y+1	; 0x01
    18b2:	98 17       	cp	r25, r24
    18b4:	09 f4       	brne	.+2      	; 0x18b8 <_fpadd_parts+0x3c>
    18b6:	28 c1       	rjmp	.+592    	; 0x1b08 <_fpadd_parts+0x28c>
    18b8:	a2 e9       	ldi	r26, 0x92	; 146
    18ba:	b0 e0       	ldi	r27, 0x00	; 0
    18bc:	25 c1       	rjmp	.+586    	; 0x1b08 <_fpadd_parts+0x28c>
    18be:	84 30       	cpi	r24, 0x04	; 4
    18c0:	09 f4       	brne	.+2      	; 0x18c4 <_fpadd_parts+0x48>
    18c2:	21 c1       	rjmp	.+578    	; 0x1b06 <_fpadd_parts+0x28a>
    18c4:	82 30       	cpi	r24, 0x02	; 2
    18c6:	a9 f4       	brne	.+42     	; 0x18f2 <_fpadd_parts+0x76>
    18c8:	92 30       	cpi	r25, 0x02	; 2
    18ca:	09 f0       	breq	.+2      	; 0x18ce <_fpadd_parts+0x52>
    18cc:	1d c1       	rjmp	.+570    	; 0x1b08 <_fpadd_parts+0x28c>
    18ce:	9a 01       	movw	r18, r20
    18d0:	ad 01       	movw	r20, r26
    18d2:	88 e0       	ldi	r24, 0x08	; 8
    18d4:	ea 01       	movw	r28, r20
    18d6:	09 90       	ld	r0, Y+
    18d8:	ae 01       	movw	r20, r28
    18da:	e9 01       	movw	r28, r18
    18dc:	09 92       	st	Y+, r0
    18de:	9e 01       	movw	r18, r28
    18e0:	81 50       	subi	r24, 0x01	; 1
    18e2:	c1 f7       	brne	.-16     	; 0x18d4 <_fpadd_parts+0x58>
    18e4:	e2 01       	movw	r28, r4
    18e6:	89 81       	ldd	r24, Y+1	; 0x01
    18e8:	11 96       	adiw	r26, 0x01	; 1
    18ea:	9c 91       	ld	r25, X
    18ec:	89 23       	and	r24, r25
    18ee:	81 83       	std	Z+1, r24	; 0x01
    18f0:	08 c1       	rjmp	.+528    	; 0x1b02 <_fpadd_parts+0x286>
    18f2:	92 30       	cpi	r25, 0x02	; 2
    18f4:	09 f4       	brne	.+2      	; 0x18f8 <_fpadd_parts+0x7c>
    18f6:	07 c1       	rjmp	.+526    	; 0x1b06 <_fpadd_parts+0x28a>
    18f8:	12 96       	adiw	r26, 0x02	; 2
    18fa:	2d 90       	ld	r2, X+
    18fc:	3c 90       	ld	r3, X
    18fe:	13 97       	sbiw	r26, 0x03	; 3
    1900:	eb 01       	movw	r28, r22
    1902:	8a 81       	ldd	r24, Y+2	; 0x02
    1904:	9b 81       	ldd	r25, Y+3	; 0x03
    1906:	14 96       	adiw	r26, 0x04	; 4
    1908:	ad 90       	ld	r10, X+
    190a:	bd 90       	ld	r11, X+
    190c:	cd 90       	ld	r12, X+
    190e:	dc 90       	ld	r13, X
    1910:	17 97       	sbiw	r26, 0x07	; 7
    1912:	ec 80       	ldd	r14, Y+4	; 0x04
    1914:	fd 80       	ldd	r15, Y+5	; 0x05
    1916:	0e 81       	ldd	r16, Y+6	; 0x06
    1918:	1f 81       	ldd	r17, Y+7	; 0x07
    191a:	91 01       	movw	r18, r2
    191c:	28 1b       	sub	r18, r24
    191e:	39 0b       	sbc	r19, r25
    1920:	b9 01       	movw	r22, r18
    1922:	37 ff       	sbrs	r19, 7
    1924:	04 c0       	rjmp	.+8      	; 0x192e <_fpadd_parts+0xb2>
    1926:	66 27       	eor	r22, r22
    1928:	77 27       	eor	r23, r23
    192a:	62 1b       	sub	r22, r18
    192c:	73 0b       	sbc	r23, r19
    192e:	60 32       	cpi	r22, 0x20	; 32
    1930:	71 05       	cpc	r23, r1
    1932:	0c f0       	brlt	.+2      	; 0x1936 <_fpadd_parts+0xba>
    1934:	61 c0       	rjmp	.+194    	; 0x19f8 <_fpadd_parts+0x17c>
    1936:	12 16       	cp	r1, r18
    1938:	13 06       	cpc	r1, r19
    193a:	6c f5       	brge	.+90     	; 0x1996 <_fpadd_parts+0x11a>
    193c:	37 01       	movw	r6, r14
    193e:	48 01       	movw	r8, r16
    1940:	06 2e       	mov	r0, r22
    1942:	04 c0       	rjmp	.+8      	; 0x194c <_fpadd_parts+0xd0>
    1944:	96 94       	lsr	r9
    1946:	87 94       	ror	r8
    1948:	77 94       	ror	r7
    194a:	67 94       	ror	r6
    194c:	0a 94       	dec	r0
    194e:	d2 f7       	brpl	.-12     	; 0x1944 <_fpadd_parts+0xc8>
    1950:	21 e0       	ldi	r18, 0x01	; 1
    1952:	30 e0       	ldi	r19, 0x00	; 0
    1954:	40 e0       	ldi	r20, 0x00	; 0
    1956:	50 e0       	ldi	r21, 0x00	; 0
    1958:	04 c0       	rjmp	.+8      	; 0x1962 <_fpadd_parts+0xe6>
    195a:	22 0f       	add	r18, r18
    195c:	33 1f       	adc	r19, r19
    195e:	44 1f       	adc	r20, r20
    1960:	55 1f       	adc	r21, r21
    1962:	6a 95       	dec	r22
    1964:	d2 f7       	brpl	.-12     	; 0x195a <_fpadd_parts+0xde>
    1966:	21 50       	subi	r18, 0x01	; 1
    1968:	30 40       	sbci	r19, 0x00	; 0
    196a:	40 40       	sbci	r20, 0x00	; 0
    196c:	50 40       	sbci	r21, 0x00	; 0
    196e:	2e 21       	and	r18, r14
    1970:	3f 21       	and	r19, r15
    1972:	40 23       	and	r20, r16
    1974:	51 23       	and	r21, r17
    1976:	21 15       	cp	r18, r1
    1978:	31 05       	cpc	r19, r1
    197a:	41 05       	cpc	r20, r1
    197c:	51 05       	cpc	r21, r1
    197e:	21 f0       	breq	.+8      	; 0x1988 <_fpadd_parts+0x10c>
    1980:	21 e0       	ldi	r18, 0x01	; 1
    1982:	30 e0       	ldi	r19, 0x00	; 0
    1984:	40 e0       	ldi	r20, 0x00	; 0
    1986:	50 e0       	ldi	r21, 0x00	; 0
    1988:	79 01       	movw	r14, r18
    198a:	8a 01       	movw	r16, r20
    198c:	e6 28       	or	r14, r6
    198e:	f7 28       	or	r15, r7
    1990:	08 29       	or	r16, r8
    1992:	19 29       	or	r17, r9
    1994:	3c c0       	rjmp	.+120    	; 0x1a0e <_fpadd_parts+0x192>
    1996:	23 2b       	or	r18, r19
    1998:	d1 f1       	breq	.+116    	; 0x1a0e <_fpadd_parts+0x192>
    199a:	26 0e       	add	r2, r22
    199c:	37 1e       	adc	r3, r23
    199e:	35 01       	movw	r6, r10
    19a0:	46 01       	movw	r8, r12
    19a2:	06 2e       	mov	r0, r22
    19a4:	04 c0       	rjmp	.+8      	; 0x19ae <_fpadd_parts+0x132>
    19a6:	96 94       	lsr	r9
    19a8:	87 94       	ror	r8
    19aa:	77 94       	ror	r7
    19ac:	67 94       	ror	r6
    19ae:	0a 94       	dec	r0
    19b0:	d2 f7       	brpl	.-12     	; 0x19a6 <_fpadd_parts+0x12a>
    19b2:	21 e0       	ldi	r18, 0x01	; 1
    19b4:	30 e0       	ldi	r19, 0x00	; 0
    19b6:	40 e0       	ldi	r20, 0x00	; 0
    19b8:	50 e0       	ldi	r21, 0x00	; 0
    19ba:	04 c0       	rjmp	.+8      	; 0x19c4 <_fpadd_parts+0x148>
    19bc:	22 0f       	add	r18, r18
    19be:	33 1f       	adc	r19, r19
    19c0:	44 1f       	adc	r20, r20
    19c2:	55 1f       	adc	r21, r21
    19c4:	6a 95       	dec	r22
    19c6:	d2 f7       	brpl	.-12     	; 0x19bc <_fpadd_parts+0x140>
    19c8:	21 50       	subi	r18, 0x01	; 1
    19ca:	30 40       	sbci	r19, 0x00	; 0
    19cc:	40 40       	sbci	r20, 0x00	; 0
    19ce:	50 40       	sbci	r21, 0x00	; 0
    19d0:	2a 21       	and	r18, r10
    19d2:	3b 21       	and	r19, r11
    19d4:	4c 21       	and	r20, r12
    19d6:	5d 21       	and	r21, r13
    19d8:	21 15       	cp	r18, r1
    19da:	31 05       	cpc	r19, r1
    19dc:	41 05       	cpc	r20, r1
    19de:	51 05       	cpc	r21, r1
    19e0:	21 f0       	breq	.+8      	; 0x19ea <_fpadd_parts+0x16e>
    19e2:	21 e0       	ldi	r18, 0x01	; 1
    19e4:	30 e0       	ldi	r19, 0x00	; 0
    19e6:	40 e0       	ldi	r20, 0x00	; 0
    19e8:	50 e0       	ldi	r21, 0x00	; 0
    19ea:	59 01       	movw	r10, r18
    19ec:	6a 01       	movw	r12, r20
    19ee:	a6 28       	or	r10, r6
    19f0:	b7 28       	or	r11, r7
    19f2:	c8 28       	or	r12, r8
    19f4:	d9 28       	or	r13, r9
    19f6:	0b c0       	rjmp	.+22     	; 0x1a0e <_fpadd_parts+0x192>
    19f8:	82 15       	cp	r24, r2
    19fa:	93 05       	cpc	r25, r3
    19fc:	2c f0       	brlt	.+10     	; 0x1a08 <_fpadd_parts+0x18c>
    19fe:	1c 01       	movw	r2, r24
    1a00:	aa 24       	eor	r10, r10
    1a02:	bb 24       	eor	r11, r11
    1a04:	65 01       	movw	r12, r10
    1a06:	03 c0       	rjmp	.+6      	; 0x1a0e <_fpadd_parts+0x192>
    1a08:	ee 24       	eor	r14, r14
    1a0a:	ff 24       	eor	r15, r15
    1a0c:	87 01       	movw	r16, r14
    1a0e:	11 96       	adiw	r26, 0x01	; 1
    1a10:	9c 91       	ld	r25, X
    1a12:	d2 01       	movw	r26, r4
    1a14:	11 96       	adiw	r26, 0x01	; 1
    1a16:	8c 91       	ld	r24, X
    1a18:	98 17       	cp	r25, r24
    1a1a:	09 f4       	brne	.+2      	; 0x1a1e <_fpadd_parts+0x1a2>
    1a1c:	45 c0       	rjmp	.+138    	; 0x1aa8 <_fpadd_parts+0x22c>
    1a1e:	99 23       	and	r25, r25
    1a20:	39 f0       	breq	.+14     	; 0x1a30 <_fpadd_parts+0x1b4>
    1a22:	a8 01       	movw	r20, r16
    1a24:	97 01       	movw	r18, r14
    1a26:	2a 19       	sub	r18, r10
    1a28:	3b 09       	sbc	r19, r11
    1a2a:	4c 09       	sbc	r20, r12
    1a2c:	5d 09       	sbc	r21, r13
    1a2e:	06 c0       	rjmp	.+12     	; 0x1a3c <_fpadd_parts+0x1c0>
    1a30:	a6 01       	movw	r20, r12
    1a32:	95 01       	movw	r18, r10
    1a34:	2e 19       	sub	r18, r14
    1a36:	3f 09       	sbc	r19, r15
    1a38:	40 0b       	sbc	r20, r16
    1a3a:	51 0b       	sbc	r21, r17
    1a3c:	57 fd       	sbrc	r21, 7
    1a3e:	08 c0       	rjmp	.+16     	; 0x1a50 <_fpadd_parts+0x1d4>
    1a40:	11 82       	std	Z+1, r1	; 0x01
    1a42:	33 82       	std	Z+3, r3	; 0x03
    1a44:	22 82       	std	Z+2, r2	; 0x02
    1a46:	24 83       	std	Z+4, r18	; 0x04
    1a48:	35 83       	std	Z+5, r19	; 0x05
    1a4a:	46 83       	std	Z+6, r20	; 0x06
    1a4c:	57 83       	std	Z+7, r21	; 0x07
    1a4e:	1d c0       	rjmp	.+58     	; 0x1a8a <_fpadd_parts+0x20e>
    1a50:	81 e0       	ldi	r24, 0x01	; 1
    1a52:	81 83       	std	Z+1, r24	; 0x01
    1a54:	33 82       	std	Z+3, r3	; 0x03
    1a56:	22 82       	std	Z+2, r2	; 0x02
    1a58:	88 27       	eor	r24, r24
    1a5a:	99 27       	eor	r25, r25
    1a5c:	dc 01       	movw	r26, r24
    1a5e:	82 1b       	sub	r24, r18
    1a60:	93 0b       	sbc	r25, r19
    1a62:	a4 0b       	sbc	r26, r20
    1a64:	b5 0b       	sbc	r27, r21
    1a66:	84 83       	std	Z+4, r24	; 0x04
    1a68:	95 83       	std	Z+5, r25	; 0x05
    1a6a:	a6 83       	std	Z+6, r26	; 0x06
    1a6c:	b7 83       	std	Z+7, r27	; 0x07
    1a6e:	0d c0       	rjmp	.+26     	; 0x1a8a <_fpadd_parts+0x20e>
    1a70:	22 0f       	add	r18, r18
    1a72:	33 1f       	adc	r19, r19
    1a74:	44 1f       	adc	r20, r20
    1a76:	55 1f       	adc	r21, r21
    1a78:	24 83       	std	Z+4, r18	; 0x04
    1a7a:	35 83       	std	Z+5, r19	; 0x05
    1a7c:	46 83       	std	Z+6, r20	; 0x06
    1a7e:	57 83       	std	Z+7, r21	; 0x07
    1a80:	82 81       	ldd	r24, Z+2	; 0x02
    1a82:	93 81       	ldd	r25, Z+3	; 0x03
    1a84:	01 97       	sbiw	r24, 0x01	; 1
    1a86:	93 83       	std	Z+3, r25	; 0x03
    1a88:	82 83       	std	Z+2, r24	; 0x02
    1a8a:	24 81       	ldd	r18, Z+4	; 0x04
    1a8c:	35 81       	ldd	r19, Z+5	; 0x05
    1a8e:	46 81       	ldd	r20, Z+6	; 0x06
    1a90:	57 81       	ldd	r21, Z+7	; 0x07
    1a92:	da 01       	movw	r26, r20
    1a94:	c9 01       	movw	r24, r18
    1a96:	01 97       	sbiw	r24, 0x01	; 1
    1a98:	a1 09       	sbc	r26, r1
    1a9a:	b1 09       	sbc	r27, r1
    1a9c:	8f 5f       	subi	r24, 0xFF	; 255
    1a9e:	9f 4f       	sbci	r25, 0xFF	; 255
    1aa0:	af 4f       	sbci	r26, 0xFF	; 255
    1aa2:	bf 43       	sbci	r27, 0x3F	; 63
    1aa4:	28 f3       	brcs	.-54     	; 0x1a70 <_fpadd_parts+0x1f4>
    1aa6:	0b c0       	rjmp	.+22     	; 0x1abe <_fpadd_parts+0x242>
    1aa8:	91 83       	std	Z+1, r25	; 0x01
    1aaa:	33 82       	std	Z+3, r3	; 0x03
    1aac:	22 82       	std	Z+2, r2	; 0x02
    1aae:	ea 0c       	add	r14, r10
    1ab0:	fb 1c       	adc	r15, r11
    1ab2:	0c 1d       	adc	r16, r12
    1ab4:	1d 1d       	adc	r17, r13
    1ab6:	e4 82       	std	Z+4, r14	; 0x04
    1ab8:	f5 82       	std	Z+5, r15	; 0x05
    1aba:	06 83       	std	Z+6, r16	; 0x06
    1abc:	17 83       	std	Z+7, r17	; 0x07
    1abe:	83 e0       	ldi	r24, 0x03	; 3
    1ac0:	80 83       	st	Z, r24
    1ac2:	24 81       	ldd	r18, Z+4	; 0x04
    1ac4:	35 81       	ldd	r19, Z+5	; 0x05
    1ac6:	46 81       	ldd	r20, Z+6	; 0x06
    1ac8:	57 81       	ldd	r21, Z+7	; 0x07
    1aca:	57 ff       	sbrs	r21, 7
    1acc:	1a c0       	rjmp	.+52     	; 0x1b02 <_fpadd_parts+0x286>
    1ace:	c9 01       	movw	r24, r18
    1ad0:	aa 27       	eor	r26, r26
    1ad2:	97 fd       	sbrc	r25, 7
    1ad4:	a0 95       	com	r26
    1ad6:	ba 2f       	mov	r27, r26
    1ad8:	81 70       	andi	r24, 0x01	; 1
    1ada:	90 70       	andi	r25, 0x00	; 0
    1adc:	a0 70       	andi	r26, 0x00	; 0
    1ade:	b0 70       	andi	r27, 0x00	; 0
    1ae0:	56 95       	lsr	r21
    1ae2:	47 95       	ror	r20
    1ae4:	37 95       	ror	r19
    1ae6:	27 95       	ror	r18
    1ae8:	82 2b       	or	r24, r18
    1aea:	93 2b       	or	r25, r19
    1aec:	a4 2b       	or	r26, r20
    1aee:	b5 2b       	or	r27, r21
    1af0:	84 83       	std	Z+4, r24	; 0x04
    1af2:	95 83       	std	Z+5, r25	; 0x05
    1af4:	a6 83       	std	Z+6, r26	; 0x06
    1af6:	b7 83       	std	Z+7, r27	; 0x07
    1af8:	82 81       	ldd	r24, Z+2	; 0x02
    1afa:	93 81       	ldd	r25, Z+3	; 0x03
    1afc:	01 96       	adiw	r24, 0x01	; 1
    1afe:	93 83       	std	Z+3, r25	; 0x03
    1b00:	82 83       	std	Z+2, r24	; 0x02
    1b02:	df 01       	movw	r26, r30
    1b04:	01 c0       	rjmp	.+2      	; 0x1b08 <_fpadd_parts+0x28c>
    1b06:	d2 01       	movw	r26, r4
    1b08:	cd 01       	movw	r24, r26
    1b0a:	cd b7       	in	r28, 0x3d	; 61
    1b0c:	de b7       	in	r29, 0x3e	; 62
    1b0e:	e2 e1       	ldi	r30, 0x12	; 18
    1b10:	0c 94 9e 13 	jmp	0x273c	; 0x273c <__epilogue_restores__>

00001b14 <__subsf3>:
    1b14:	a0 e2       	ldi	r26, 0x20	; 32
    1b16:	b0 e0       	ldi	r27, 0x00	; 0
    1b18:	e0 e9       	ldi	r30, 0x90	; 144
    1b1a:	fd e0       	ldi	r31, 0x0D	; 13
    1b1c:	0c 94 8e 13 	jmp	0x271c	; 0x271c <__prologue_saves__+0x18>
    1b20:	69 83       	std	Y+1, r22	; 0x01
    1b22:	7a 83       	std	Y+2, r23	; 0x02
    1b24:	8b 83       	std	Y+3, r24	; 0x03
    1b26:	9c 83       	std	Y+4, r25	; 0x04
    1b28:	2d 83       	std	Y+5, r18	; 0x05
    1b2a:	3e 83       	std	Y+6, r19	; 0x06
    1b2c:	4f 83       	std	Y+7, r20	; 0x07
    1b2e:	58 87       	std	Y+8, r21	; 0x08
    1b30:	e9 e0       	ldi	r30, 0x09	; 9
    1b32:	ee 2e       	mov	r14, r30
    1b34:	f1 2c       	mov	r15, r1
    1b36:	ec 0e       	add	r14, r28
    1b38:	fd 1e       	adc	r15, r29
    1b3a:	ce 01       	movw	r24, r28
    1b3c:	01 96       	adiw	r24, 0x01	; 1
    1b3e:	b7 01       	movw	r22, r14
    1b40:	0e 94 9d 12 	call	0x253a	; 0x253a <__unpack_f>
    1b44:	8e 01       	movw	r16, r28
    1b46:	0f 5e       	subi	r16, 0xEF	; 239
    1b48:	1f 4f       	sbci	r17, 0xFF	; 255
    1b4a:	ce 01       	movw	r24, r28
    1b4c:	05 96       	adiw	r24, 0x05	; 5
    1b4e:	b8 01       	movw	r22, r16
    1b50:	0e 94 9d 12 	call	0x253a	; 0x253a <__unpack_f>
    1b54:	8a 89       	ldd	r24, Y+18	; 0x12
    1b56:	91 e0       	ldi	r25, 0x01	; 1
    1b58:	89 27       	eor	r24, r25
    1b5a:	8a 8b       	std	Y+18, r24	; 0x12
    1b5c:	c7 01       	movw	r24, r14
    1b5e:	b8 01       	movw	r22, r16
    1b60:	ae 01       	movw	r20, r28
    1b62:	47 5e       	subi	r20, 0xE7	; 231
    1b64:	5f 4f       	sbci	r21, 0xFF	; 255
    1b66:	0e 94 3e 0c 	call	0x187c	; 0x187c <_fpadd_parts>
    1b6a:	0e 94 c8 11 	call	0x2390	; 0x2390 <__pack_f>
    1b6e:	a0 96       	adiw	r28, 0x20	; 32
    1b70:	e6 e0       	ldi	r30, 0x06	; 6
    1b72:	0c 94 aa 13 	jmp	0x2754	; 0x2754 <__epilogue_restores__+0x18>

00001b76 <__addsf3>:
    1b76:	a0 e2       	ldi	r26, 0x20	; 32
    1b78:	b0 e0       	ldi	r27, 0x00	; 0
    1b7a:	e1 ec       	ldi	r30, 0xC1	; 193
    1b7c:	fd e0       	ldi	r31, 0x0D	; 13
    1b7e:	0c 94 8e 13 	jmp	0x271c	; 0x271c <__prologue_saves__+0x18>
    1b82:	69 83       	std	Y+1, r22	; 0x01
    1b84:	7a 83       	std	Y+2, r23	; 0x02
    1b86:	8b 83       	std	Y+3, r24	; 0x03
    1b88:	9c 83       	std	Y+4, r25	; 0x04
    1b8a:	2d 83       	std	Y+5, r18	; 0x05
    1b8c:	3e 83       	std	Y+6, r19	; 0x06
    1b8e:	4f 83       	std	Y+7, r20	; 0x07
    1b90:	58 87       	std	Y+8, r21	; 0x08
    1b92:	f9 e0       	ldi	r31, 0x09	; 9
    1b94:	ef 2e       	mov	r14, r31
    1b96:	f1 2c       	mov	r15, r1
    1b98:	ec 0e       	add	r14, r28
    1b9a:	fd 1e       	adc	r15, r29
    1b9c:	ce 01       	movw	r24, r28
    1b9e:	01 96       	adiw	r24, 0x01	; 1
    1ba0:	b7 01       	movw	r22, r14
    1ba2:	0e 94 9d 12 	call	0x253a	; 0x253a <__unpack_f>
    1ba6:	8e 01       	movw	r16, r28
    1ba8:	0f 5e       	subi	r16, 0xEF	; 239
    1baa:	1f 4f       	sbci	r17, 0xFF	; 255
    1bac:	ce 01       	movw	r24, r28
    1bae:	05 96       	adiw	r24, 0x05	; 5
    1bb0:	b8 01       	movw	r22, r16
    1bb2:	0e 94 9d 12 	call	0x253a	; 0x253a <__unpack_f>
    1bb6:	c7 01       	movw	r24, r14
    1bb8:	b8 01       	movw	r22, r16
    1bba:	ae 01       	movw	r20, r28
    1bbc:	47 5e       	subi	r20, 0xE7	; 231
    1bbe:	5f 4f       	sbci	r21, 0xFF	; 255
    1bc0:	0e 94 3e 0c 	call	0x187c	; 0x187c <_fpadd_parts>
    1bc4:	0e 94 c8 11 	call	0x2390	; 0x2390 <__pack_f>
    1bc8:	a0 96       	adiw	r28, 0x20	; 32
    1bca:	e6 e0       	ldi	r30, 0x06	; 6
    1bcc:	0c 94 aa 13 	jmp	0x2754	; 0x2754 <__epilogue_restores__+0x18>

00001bd0 <__mulsf3>:
    1bd0:	a0 e2       	ldi	r26, 0x20	; 32
    1bd2:	b0 e0       	ldi	r27, 0x00	; 0
    1bd4:	ee ee       	ldi	r30, 0xEE	; 238
    1bd6:	fd e0       	ldi	r31, 0x0D	; 13
    1bd8:	0c 94 82 13 	jmp	0x2704	; 0x2704 <__prologue_saves__>
    1bdc:	69 83       	std	Y+1, r22	; 0x01
    1bde:	7a 83       	std	Y+2, r23	; 0x02
    1be0:	8b 83       	std	Y+3, r24	; 0x03
    1be2:	9c 83       	std	Y+4, r25	; 0x04
    1be4:	2d 83       	std	Y+5, r18	; 0x05
    1be6:	3e 83       	std	Y+6, r19	; 0x06
    1be8:	4f 83       	std	Y+7, r20	; 0x07
    1bea:	58 87       	std	Y+8, r21	; 0x08
    1bec:	ce 01       	movw	r24, r28
    1bee:	01 96       	adiw	r24, 0x01	; 1
    1bf0:	be 01       	movw	r22, r28
    1bf2:	67 5f       	subi	r22, 0xF7	; 247
    1bf4:	7f 4f       	sbci	r23, 0xFF	; 255
    1bf6:	0e 94 9d 12 	call	0x253a	; 0x253a <__unpack_f>
    1bfa:	ce 01       	movw	r24, r28
    1bfc:	05 96       	adiw	r24, 0x05	; 5
    1bfe:	be 01       	movw	r22, r28
    1c00:	6f 5e       	subi	r22, 0xEF	; 239
    1c02:	7f 4f       	sbci	r23, 0xFF	; 255
    1c04:	0e 94 9d 12 	call	0x253a	; 0x253a <__unpack_f>
    1c08:	99 85       	ldd	r25, Y+9	; 0x09
    1c0a:	92 30       	cpi	r25, 0x02	; 2
    1c0c:	88 f0       	brcs	.+34     	; 0x1c30 <__mulsf3+0x60>
    1c0e:	89 89       	ldd	r24, Y+17	; 0x11
    1c10:	82 30       	cpi	r24, 0x02	; 2
    1c12:	c8 f0       	brcs	.+50     	; 0x1c46 <__mulsf3+0x76>
    1c14:	94 30       	cpi	r25, 0x04	; 4
    1c16:	19 f4       	brne	.+6      	; 0x1c1e <__mulsf3+0x4e>
    1c18:	82 30       	cpi	r24, 0x02	; 2
    1c1a:	51 f4       	brne	.+20     	; 0x1c30 <__mulsf3+0x60>
    1c1c:	04 c0       	rjmp	.+8      	; 0x1c26 <__mulsf3+0x56>
    1c1e:	84 30       	cpi	r24, 0x04	; 4
    1c20:	29 f4       	brne	.+10     	; 0x1c2c <__mulsf3+0x5c>
    1c22:	92 30       	cpi	r25, 0x02	; 2
    1c24:	81 f4       	brne	.+32     	; 0x1c46 <__mulsf3+0x76>
    1c26:	82 e9       	ldi	r24, 0x92	; 146
    1c28:	90 e0       	ldi	r25, 0x00	; 0
    1c2a:	c6 c0       	rjmp	.+396    	; 0x1db8 <__mulsf3+0x1e8>
    1c2c:	92 30       	cpi	r25, 0x02	; 2
    1c2e:	49 f4       	brne	.+18     	; 0x1c42 <__mulsf3+0x72>
    1c30:	20 e0       	ldi	r18, 0x00	; 0
    1c32:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c34:	8a 89       	ldd	r24, Y+18	; 0x12
    1c36:	98 13       	cpse	r25, r24
    1c38:	21 e0       	ldi	r18, 0x01	; 1
    1c3a:	2a 87       	std	Y+10, r18	; 0x0a
    1c3c:	ce 01       	movw	r24, r28
    1c3e:	09 96       	adiw	r24, 0x09	; 9
    1c40:	bb c0       	rjmp	.+374    	; 0x1db8 <__mulsf3+0x1e8>
    1c42:	82 30       	cpi	r24, 0x02	; 2
    1c44:	49 f4       	brne	.+18     	; 0x1c58 <__mulsf3+0x88>
    1c46:	20 e0       	ldi	r18, 0x00	; 0
    1c48:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c4a:	8a 89       	ldd	r24, Y+18	; 0x12
    1c4c:	98 13       	cpse	r25, r24
    1c4e:	21 e0       	ldi	r18, 0x01	; 1
    1c50:	2a 8b       	std	Y+18, r18	; 0x12
    1c52:	ce 01       	movw	r24, r28
    1c54:	41 96       	adiw	r24, 0x11	; 17
    1c56:	b0 c0       	rjmp	.+352    	; 0x1db8 <__mulsf3+0x1e8>
    1c58:	2d 84       	ldd	r2, Y+13	; 0x0d
    1c5a:	3e 84       	ldd	r3, Y+14	; 0x0e
    1c5c:	4f 84       	ldd	r4, Y+15	; 0x0f
    1c5e:	58 88       	ldd	r5, Y+16	; 0x10
    1c60:	6d 88       	ldd	r6, Y+21	; 0x15
    1c62:	7e 88       	ldd	r7, Y+22	; 0x16
    1c64:	8f 88       	ldd	r8, Y+23	; 0x17
    1c66:	98 8c       	ldd	r9, Y+24	; 0x18
    1c68:	ee 24       	eor	r14, r14
    1c6a:	ff 24       	eor	r15, r15
    1c6c:	87 01       	movw	r16, r14
    1c6e:	aa 24       	eor	r10, r10
    1c70:	bb 24       	eor	r11, r11
    1c72:	65 01       	movw	r12, r10
    1c74:	40 e0       	ldi	r20, 0x00	; 0
    1c76:	50 e0       	ldi	r21, 0x00	; 0
    1c78:	60 e0       	ldi	r22, 0x00	; 0
    1c7a:	70 e0       	ldi	r23, 0x00	; 0
    1c7c:	e0 e0       	ldi	r30, 0x00	; 0
    1c7e:	f0 e0       	ldi	r31, 0x00	; 0
    1c80:	c1 01       	movw	r24, r2
    1c82:	81 70       	andi	r24, 0x01	; 1
    1c84:	90 70       	andi	r25, 0x00	; 0
    1c86:	89 2b       	or	r24, r25
    1c88:	e9 f0       	breq	.+58     	; 0x1cc4 <__mulsf3+0xf4>
    1c8a:	e6 0c       	add	r14, r6
    1c8c:	f7 1c       	adc	r15, r7
    1c8e:	08 1d       	adc	r16, r8
    1c90:	19 1d       	adc	r17, r9
    1c92:	9a 01       	movw	r18, r20
    1c94:	ab 01       	movw	r20, r22
    1c96:	2a 0d       	add	r18, r10
    1c98:	3b 1d       	adc	r19, r11
    1c9a:	4c 1d       	adc	r20, r12
    1c9c:	5d 1d       	adc	r21, r13
    1c9e:	80 e0       	ldi	r24, 0x00	; 0
    1ca0:	90 e0       	ldi	r25, 0x00	; 0
    1ca2:	a0 e0       	ldi	r26, 0x00	; 0
    1ca4:	b0 e0       	ldi	r27, 0x00	; 0
    1ca6:	e6 14       	cp	r14, r6
    1ca8:	f7 04       	cpc	r15, r7
    1caa:	08 05       	cpc	r16, r8
    1cac:	19 05       	cpc	r17, r9
    1cae:	20 f4       	brcc	.+8      	; 0x1cb8 <__mulsf3+0xe8>
    1cb0:	81 e0       	ldi	r24, 0x01	; 1
    1cb2:	90 e0       	ldi	r25, 0x00	; 0
    1cb4:	a0 e0       	ldi	r26, 0x00	; 0
    1cb6:	b0 e0       	ldi	r27, 0x00	; 0
    1cb8:	ba 01       	movw	r22, r20
    1cba:	a9 01       	movw	r20, r18
    1cbc:	48 0f       	add	r20, r24
    1cbe:	59 1f       	adc	r21, r25
    1cc0:	6a 1f       	adc	r22, r26
    1cc2:	7b 1f       	adc	r23, r27
    1cc4:	aa 0c       	add	r10, r10
    1cc6:	bb 1c       	adc	r11, r11
    1cc8:	cc 1c       	adc	r12, r12
    1cca:	dd 1c       	adc	r13, r13
    1ccc:	97 fe       	sbrs	r9, 7
    1cce:	08 c0       	rjmp	.+16     	; 0x1ce0 <__mulsf3+0x110>
    1cd0:	81 e0       	ldi	r24, 0x01	; 1
    1cd2:	90 e0       	ldi	r25, 0x00	; 0
    1cd4:	a0 e0       	ldi	r26, 0x00	; 0
    1cd6:	b0 e0       	ldi	r27, 0x00	; 0
    1cd8:	a8 2a       	or	r10, r24
    1cda:	b9 2a       	or	r11, r25
    1cdc:	ca 2a       	or	r12, r26
    1cde:	db 2a       	or	r13, r27
    1ce0:	31 96       	adiw	r30, 0x01	; 1
    1ce2:	e0 32       	cpi	r30, 0x20	; 32
    1ce4:	f1 05       	cpc	r31, r1
    1ce6:	49 f0       	breq	.+18     	; 0x1cfa <__mulsf3+0x12a>
    1ce8:	66 0c       	add	r6, r6
    1cea:	77 1c       	adc	r7, r7
    1cec:	88 1c       	adc	r8, r8
    1cee:	99 1c       	adc	r9, r9
    1cf0:	56 94       	lsr	r5
    1cf2:	47 94       	ror	r4
    1cf4:	37 94       	ror	r3
    1cf6:	27 94       	ror	r2
    1cf8:	c3 cf       	rjmp	.-122    	; 0x1c80 <__mulsf3+0xb0>
    1cfa:	fa 85       	ldd	r31, Y+10	; 0x0a
    1cfc:	ea 89       	ldd	r30, Y+18	; 0x12
    1cfe:	2b 89       	ldd	r18, Y+19	; 0x13
    1d00:	3c 89       	ldd	r19, Y+20	; 0x14
    1d02:	8b 85       	ldd	r24, Y+11	; 0x0b
    1d04:	9c 85       	ldd	r25, Y+12	; 0x0c
    1d06:	28 0f       	add	r18, r24
    1d08:	39 1f       	adc	r19, r25
    1d0a:	2e 5f       	subi	r18, 0xFE	; 254
    1d0c:	3f 4f       	sbci	r19, 0xFF	; 255
    1d0e:	17 c0       	rjmp	.+46     	; 0x1d3e <__mulsf3+0x16e>
    1d10:	ca 01       	movw	r24, r20
    1d12:	81 70       	andi	r24, 0x01	; 1
    1d14:	90 70       	andi	r25, 0x00	; 0
    1d16:	89 2b       	or	r24, r25
    1d18:	61 f0       	breq	.+24     	; 0x1d32 <__mulsf3+0x162>
    1d1a:	16 95       	lsr	r17
    1d1c:	07 95       	ror	r16
    1d1e:	f7 94       	ror	r15
    1d20:	e7 94       	ror	r14
    1d22:	80 e0       	ldi	r24, 0x00	; 0
    1d24:	90 e0       	ldi	r25, 0x00	; 0
    1d26:	a0 e0       	ldi	r26, 0x00	; 0
    1d28:	b0 e8       	ldi	r27, 0x80	; 128
    1d2a:	e8 2a       	or	r14, r24
    1d2c:	f9 2a       	or	r15, r25
    1d2e:	0a 2b       	or	r16, r26
    1d30:	1b 2b       	or	r17, r27
    1d32:	76 95       	lsr	r23
    1d34:	67 95       	ror	r22
    1d36:	57 95       	ror	r21
    1d38:	47 95       	ror	r20
    1d3a:	2f 5f       	subi	r18, 0xFF	; 255
    1d3c:	3f 4f       	sbci	r19, 0xFF	; 255
    1d3e:	77 fd       	sbrc	r23, 7
    1d40:	e7 cf       	rjmp	.-50     	; 0x1d10 <__mulsf3+0x140>
    1d42:	0c c0       	rjmp	.+24     	; 0x1d5c <__mulsf3+0x18c>
    1d44:	44 0f       	add	r20, r20
    1d46:	55 1f       	adc	r21, r21
    1d48:	66 1f       	adc	r22, r22
    1d4a:	77 1f       	adc	r23, r23
    1d4c:	17 fd       	sbrc	r17, 7
    1d4e:	41 60       	ori	r20, 0x01	; 1
    1d50:	ee 0c       	add	r14, r14
    1d52:	ff 1c       	adc	r15, r15
    1d54:	00 1f       	adc	r16, r16
    1d56:	11 1f       	adc	r17, r17
    1d58:	21 50       	subi	r18, 0x01	; 1
    1d5a:	30 40       	sbci	r19, 0x00	; 0
    1d5c:	40 30       	cpi	r20, 0x00	; 0
    1d5e:	90 e0       	ldi	r25, 0x00	; 0
    1d60:	59 07       	cpc	r21, r25
    1d62:	90 e0       	ldi	r25, 0x00	; 0
    1d64:	69 07       	cpc	r22, r25
    1d66:	90 e4       	ldi	r25, 0x40	; 64
    1d68:	79 07       	cpc	r23, r25
    1d6a:	60 f3       	brcs	.-40     	; 0x1d44 <__mulsf3+0x174>
    1d6c:	2b 8f       	std	Y+27, r18	; 0x1b
    1d6e:	3c 8f       	std	Y+28, r19	; 0x1c
    1d70:	db 01       	movw	r26, r22
    1d72:	ca 01       	movw	r24, r20
    1d74:	8f 77       	andi	r24, 0x7F	; 127
    1d76:	90 70       	andi	r25, 0x00	; 0
    1d78:	a0 70       	andi	r26, 0x00	; 0
    1d7a:	b0 70       	andi	r27, 0x00	; 0
    1d7c:	80 34       	cpi	r24, 0x40	; 64
    1d7e:	91 05       	cpc	r25, r1
    1d80:	a1 05       	cpc	r26, r1
    1d82:	b1 05       	cpc	r27, r1
    1d84:	61 f4       	brne	.+24     	; 0x1d9e <__mulsf3+0x1ce>
    1d86:	47 fd       	sbrc	r20, 7
    1d88:	0a c0       	rjmp	.+20     	; 0x1d9e <__mulsf3+0x1ce>
    1d8a:	e1 14       	cp	r14, r1
    1d8c:	f1 04       	cpc	r15, r1
    1d8e:	01 05       	cpc	r16, r1
    1d90:	11 05       	cpc	r17, r1
    1d92:	29 f0       	breq	.+10     	; 0x1d9e <__mulsf3+0x1ce>
    1d94:	40 5c       	subi	r20, 0xC0	; 192
    1d96:	5f 4f       	sbci	r21, 0xFF	; 255
    1d98:	6f 4f       	sbci	r22, 0xFF	; 255
    1d9a:	7f 4f       	sbci	r23, 0xFF	; 255
    1d9c:	40 78       	andi	r20, 0x80	; 128
    1d9e:	1a 8e       	std	Y+26, r1	; 0x1a
    1da0:	fe 17       	cp	r31, r30
    1da2:	11 f0       	breq	.+4      	; 0x1da8 <__mulsf3+0x1d8>
    1da4:	81 e0       	ldi	r24, 0x01	; 1
    1da6:	8a 8f       	std	Y+26, r24	; 0x1a
    1da8:	4d 8f       	std	Y+29, r20	; 0x1d
    1daa:	5e 8f       	std	Y+30, r21	; 0x1e
    1dac:	6f 8f       	std	Y+31, r22	; 0x1f
    1dae:	78 a3       	std	Y+32, r23	; 0x20
    1db0:	83 e0       	ldi	r24, 0x03	; 3
    1db2:	89 8f       	std	Y+25, r24	; 0x19
    1db4:	ce 01       	movw	r24, r28
    1db6:	49 96       	adiw	r24, 0x19	; 25
    1db8:	0e 94 c8 11 	call	0x2390	; 0x2390 <__pack_f>
    1dbc:	a0 96       	adiw	r28, 0x20	; 32
    1dbe:	e2 e1       	ldi	r30, 0x12	; 18
    1dc0:	0c 94 9e 13 	jmp	0x273c	; 0x273c <__epilogue_restores__>

00001dc4 <__divsf3>:
    1dc4:	a8 e1       	ldi	r26, 0x18	; 24
    1dc6:	b0 e0       	ldi	r27, 0x00	; 0
    1dc8:	e8 ee       	ldi	r30, 0xE8	; 232
    1dca:	fe e0       	ldi	r31, 0x0E	; 14
    1dcc:	0c 94 8a 13 	jmp	0x2714	; 0x2714 <__prologue_saves__+0x10>
    1dd0:	69 83       	std	Y+1, r22	; 0x01
    1dd2:	7a 83       	std	Y+2, r23	; 0x02
    1dd4:	8b 83       	std	Y+3, r24	; 0x03
    1dd6:	9c 83       	std	Y+4, r25	; 0x04
    1dd8:	2d 83       	std	Y+5, r18	; 0x05
    1dda:	3e 83       	std	Y+6, r19	; 0x06
    1ddc:	4f 83       	std	Y+7, r20	; 0x07
    1dde:	58 87       	std	Y+8, r21	; 0x08
    1de0:	b9 e0       	ldi	r27, 0x09	; 9
    1de2:	eb 2e       	mov	r14, r27
    1de4:	f1 2c       	mov	r15, r1
    1de6:	ec 0e       	add	r14, r28
    1de8:	fd 1e       	adc	r15, r29
    1dea:	ce 01       	movw	r24, r28
    1dec:	01 96       	adiw	r24, 0x01	; 1
    1dee:	b7 01       	movw	r22, r14
    1df0:	0e 94 9d 12 	call	0x253a	; 0x253a <__unpack_f>
    1df4:	8e 01       	movw	r16, r28
    1df6:	0f 5e       	subi	r16, 0xEF	; 239
    1df8:	1f 4f       	sbci	r17, 0xFF	; 255
    1dfa:	ce 01       	movw	r24, r28
    1dfc:	05 96       	adiw	r24, 0x05	; 5
    1dfe:	b8 01       	movw	r22, r16
    1e00:	0e 94 9d 12 	call	0x253a	; 0x253a <__unpack_f>
    1e04:	29 85       	ldd	r18, Y+9	; 0x09
    1e06:	22 30       	cpi	r18, 0x02	; 2
    1e08:	08 f4       	brcc	.+2      	; 0x1e0c <__divsf3+0x48>
    1e0a:	7e c0       	rjmp	.+252    	; 0x1f08 <__divsf3+0x144>
    1e0c:	39 89       	ldd	r19, Y+17	; 0x11
    1e0e:	32 30       	cpi	r19, 0x02	; 2
    1e10:	10 f4       	brcc	.+4      	; 0x1e16 <__divsf3+0x52>
    1e12:	b8 01       	movw	r22, r16
    1e14:	7c c0       	rjmp	.+248    	; 0x1f0e <__divsf3+0x14a>
    1e16:	8a 85       	ldd	r24, Y+10	; 0x0a
    1e18:	9a 89       	ldd	r25, Y+18	; 0x12
    1e1a:	89 27       	eor	r24, r25
    1e1c:	8a 87       	std	Y+10, r24	; 0x0a
    1e1e:	24 30       	cpi	r18, 0x04	; 4
    1e20:	11 f0       	breq	.+4      	; 0x1e26 <__divsf3+0x62>
    1e22:	22 30       	cpi	r18, 0x02	; 2
    1e24:	31 f4       	brne	.+12     	; 0x1e32 <__divsf3+0x6e>
    1e26:	23 17       	cp	r18, r19
    1e28:	09 f0       	breq	.+2      	; 0x1e2c <__divsf3+0x68>
    1e2a:	6e c0       	rjmp	.+220    	; 0x1f08 <__divsf3+0x144>
    1e2c:	62 e9       	ldi	r22, 0x92	; 146
    1e2e:	70 e0       	ldi	r23, 0x00	; 0
    1e30:	6e c0       	rjmp	.+220    	; 0x1f0e <__divsf3+0x14a>
    1e32:	34 30       	cpi	r19, 0x04	; 4
    1e34:	39 f4       	brne	.+14     	; 0x1e44 <__divsf3+0x80>
    1e36:	1d 86       	std	Y+13, r1	; 0x0d
    1e38:	1e 86       	std	Y+14, r1	; 0x0e
    1e3a:	1f 86       	std	Y+15, r1	; 0x0f
    1e3c:	18 8a       	std	Y+16, r1	; 0x10
    1e3e:	1c 86       	std	Y+12, r1	; 0x0c
    1e40:	1b 86       	std	Y+11, r1	; 0x0b
    1e42:	04 c0       	rjmp	.+8      	; 0x1e4c <__divsf3+0x88>
    1e44:	32 30       	cpi	r19, 0x02	; 2
    1e46:	21 f4       	brne	.+8      	; 0x1e50 <__divsf3+0x8c>
    1e48:	84 e0       	ldi	r24, 0x04	; 4
    1e4a:	89 87       	std	Y+9, r24	; 0x09
    1e4c:	b7 01       	movw	r22, r14
    1e4e:	5f c0       	rjmp	.+190    	; 0x1f0e <__divsf3+0x14a>
    1e50:	2b 85       	ldd	r18, Y+11	; 0x0b
    1e52:	3c 85       	ldd	r19, Y+12	; 0x0c
    1e54:	8b 89       	ldd	r24, Y+19	; 0x13
    1e56:	9c 89       	ldd	r25, Y+20	; 0x14
    1e58:	28 1b       	sub	r18, r24
    1e5a:	39 0b       	sbc	r19, r25
    1e5c:	3c 87       	std	Y+12, r19	; 0x0c
    1e5e:	2b 87       	std	Y+11, r18	; 0x0b
    1e60:	ed 84       	ldd	r14, Y+13	; 0x0d
    1e62:	fe 84       	ldd	r15, Y+14	; 0x0e
    1e64:	0f 85       	ldd	r16, Y+15	; 0x0f
    1e66:	18 89       	ldd	r17, Y+16	; 0x10
    1e68:	ad 88       	ldd	r10, Y+21	; 0x15
    1e6a:	be 88       	ldd	r11, Y+22	; 0x16
    1e6c:	cf 88       	ldd	r12, Y+23	; 0x17
    1e6e:	d8 8c       	ldd	r13, Y+24	; 0x18
    1e70:	ea 14       	cp	r14, r10
    1e72:	fb 04       	cpc	r15, r11
    1e74:	0c 05       	cpc	r16, r12
    1e76:	1d 05       	cpc	r17, r13
    1e78:	40 f4       	brcc	.+16     	; 0x1e8a <__divsf3+0xc6>
    1e7a:	ee 0c       	add	r14, r14
    1e7c:	ff 1c       	adc	r15, r15
    1e7e:	00 1f       	adc	r16, r16
    1e80:	11 1f       	adc	r17, r17
    1e82:	21 50       	subi	r18, 0x01	; 1
    1e84:	30 40       	sbci	r19, 0x00	; 0
    1e86:	3c 87       	std	Y+12, r19	; 0x0c
    1e88:	2b 87       	std	Y+11, r18	; 0x0b
    1e8a:	20 e0       	ldi	r18, 0x00	; 0
    1e8c:	30 e0       	ldi	r19, 0x00	; 0
    1e8e:	40 e0       	ldi	r20, 0x00	; 0
    1e90:	50 e0       	ldi	r21, 0x00	; 0
    1e92:	80 e0       	ldi	r24, 0x00	; 0
    1e94:	90 e0       	ldi	r25, 0x00	; 0
    1e96:	a0 e0       	ldi	r26, 0x00	; 0
    1e98:	b0 e4       	ldi	r27, 0x40	; 64
    1e9a:	60 e0       	ldi	r22, 0x00	; 0
    1e9c:	70 e0       	ldi	r23, 0x00	; 0
    1e9e:	ea 14       	cp	r14, r10
    1ea0:	fb 04       	cpc	r15, r11
    1ea2:	0c 05       	cpc	r16, r12
    1ea4:	1d 05       	cpc	r17, r13
    1ea6:	40 f0       	brcs	.+16     	; 0x1eb8 <__divsf3+0xf4>
    1ea8:	28 2b       	or	r18, r24
    1eaa:	39 2b       	or	r19, r25
    1eac:	4a 2b       	or	r20, r26
    1eae:	5b 2b       	or	r21, r27
    1eb0:	ea 18       	sub	r14, r10
    1eb2:	fb 08       	sbc	r15, r11
    1eb4:	0c 09       	sbc	r16, r12
    1eb6:	1d 09       	sbc	r17, r13
    1eb8:	b6 95       	lsr	r27
    1eba:	a7 95       	ror	r26
    1ebc:	97 95       	ror	r25
    1ebe:	87 95       	ror	r24
    1ec0:	ee 0c       	add	r14, r14
    1ec2:	ff 1c       	adc	r15, r15
    1ec4:	00 1f       	adc	r16, r16
    1ec6:	11 1f       	adc	r17, r17
    1ec8:	6f 5f       	subi	r22, 0xFF	; 255
    1eca:	7f 4f       	sbci	r23, 0xFF	; 255
    1ecc:	6f 31       	cpi	r22, 0x1F	; 31
    1ece:	71 05       	cpc	r23, r1
    1ed0:	31 f7       	brne	.-52     	; 0x1e9e <__divsf3+0xda>
    1ed2:	da 01       	movw	r26, r20
    1ed4:	c9 01       	movw	r24, r18
    1ed6:	8f 77       	andi	r24, 0x7F	; 127
    1ed8:	90 70       	andi	r25, 0x00	; 0
    1eda:	a0 70       	andi	r26, 0x00	; 0
    1edc:	b0 70       	andi	r27, 0x00	; 0
    1ede:	80 34       	cpi	r24, 0x40	; 64
    1ee0:	91 05       	cpc	r25, r1
    1ee2:	a1 05       	cpc	r26, r1
    1ee4:	b1 05       	cpc	r27, r1
    1ee6:	61 f4       	brne	.+24     	; 0x1f00 <__divsf3+0x13c>
    1ee8:	27 fd       	sbrc	r18, 7
    1eea:	0a c0       	rjmp	.+20     	; 0x1f00 <__divsf3+0x13c>
    1eec:	e1 14       	cp	r14, r1
    1eee:	f1 04       	cpc	r15, r1
    1ef0:	01 05       	cpc	r16, r1
    1ef2:	11 05       	cpc	r17, r1
    1ef4:	29 f0       	breq	.+10     	; 0x1f00 <__divsf3+0x13c>
    1ef6:	20 5c       	subi	r18, 0xC0	; 192
    1ef8:	3f 4f       	sbci	r19, 0xFF	; 255
    1efa:	4f 4f       	sbci	r20, 0xFF	; 255
    1efc:	5f 4f       	sbci	r21, 0xFF	; 255
    1efe:	20 78       	andi	r18, 0x80	; 128
    1f00:	2d 87       	std	Y+13, r18	; 0x0d
    1f02:	3e 87       	std	Y+14, r19	; 0x0e
    1f04:	4f 87       	std	Y+15, r20	; 0x0f
    1f06:	58 8b       	std	Y+16, r21	; 0x10
    1f08:	be 01       	movw	r22, r28
    1f0a:	67 5f       	subi	r22, 0xF7	; 247
    1f0c:	7f 4f       	sbci	r23, 0xFF	; 255
    1f0e:	cb 01       	movw	r24, r22
    1f10:	0e 94 c8 11 	call	0x2390	; 0x2390 <__pack_f>
    1f14:	68 96       	adiw	r28, 0x18	; 24
    1f16:	ea e0       	ldi	r30, 0x0A	; 10
    1f18:	0c 94 a6 13 	jmp	0x274c	; 0x274c <__epilogue_restores__+0x10>

00001f1c <__gtsf2>:
    1f1c:	a8 e1       	ldi	r26, 0x18	; 24
    1f1e:	b0 e0       	ldi	r27, 0x00	; 0
    1f20:	e4 e9       	ldi	r30, 0x94	; 148
    1f22:	ff e0       	ldi	r31, 0x0F	; 15
    1f24:	0c 94 8e 13 	jmp	0x271c	; 0x271c <__prologue_saves__+0x18>
    1f28:	69 83       	std	Y+1, r22	; 0x01
    1f2a:	7a 83       	std	Y+2, r23	; 0x02
    1f2c:	8b 83       	std	Y+3, r24	; 0x03
    1f2e:	9c 83       	std	Y+4, r25	; 0x04
    1f30:	2d 83       	std	Y+5, r18	; 0x05
    1f32:	3e 83       	std	Y+6, r19	; 0x06
    1f34:	4f 83       	std	Y+7, r20	; 0x07
    1f36:	58 87       	std	Y+8, r21	; 0x08
    1f38:	89 e0       	ldi	r24, 0x09	; 9
    1f3a:	e8 2e       	mov	r14, r24
    1f3c:	f1 2c       	mov	r15, r1
    1f3e:	ec 0e       	add	r14, r28
    1f40:	fd 1e       	adc	r15, r29
    1f42:	ce 01       	movw	r24, r28
    1f44:	01 96       	adiw	r24, 0x01	; 1
    1f46:	b7 01       	movw	r22, r14
    1f48:	0e 94 9d 12 	call	0x253a	; 0x253a <__unpack_f>
    1f4c:	8e 01       	movw	r16, r28
    1f4e:	0f 5e       	subi	r16, 0xEF	; 239
    1f50:	1f 4f       	sbci	r17, 0xFF	; 255
    1f52:	ce 01       	movw	r24, r28
    1f54:	05 96       	adiw	r24, 0x05	; 5
    1f56:	b8 01       	movw	r22, r16
    1f58:	0e 94 9d 12 	call	0x253a	; 0x253a <__unpack_f>
    1f5c:	89 85       	ldd	r24, Y+9	; 0x09
    1f5e:	82 30       	cpi	r24, 0x02	; 2
    1f60:	40 f0       	brcs	.+16     	; 0x1f72 <__gtsf2+0x56>
    1f62:	89 89       	ldd	r24, Y+17	; 0x11
    1f64:	82 30       	cpi	r24, 0x02	; 2
    1f66:	28 f0       	brcs	.+10     	; 0x1f72 <__gtsf2+0x56>
    1f68:	c7 01       	movw	r24, r14
    1f6a:	b8 01       	movw	r22, r16
    1f6c:	0e 94 15 13 	call	0x262a	; 0x262a <__fpcmp_parts_f>
    1f70:	01 c0       	rjmp	.+2      	; 0x1f74 <__gtsf2+0x58>
    1f72:	8f ef       	ldi	r24, 0xFF	; 255
    1f74:	68 96       	adiw	r28, 0x18	; 24
    1f76:	e6 e0       	ldi	r30, 0x06	; 6
    1f78:	0c 94 aa 13 	jmp	0x2754	; 0x2754 <__epilogue_restores__+0x18>

00001f7c <__gesf2>:
    1f7c:	a8 e1       	ldi	r26, 0x18	; 24
    1f7e:	b0 e0       	ldi	r27, 0x00	; 0
    1f80:	e4 ec       	ldi	r30, 0xC4	; 196
    1f82:	ff e0       	ldi	r31, 0x0F	; 15
    1f84:	0c 94 8e 13 	jmp	0x271c	; 0x271c <__prologue_saves__+0x18>
    1f88:	69 83       	std	Y+1, r22	; 0x01
    1f8a:	7a 83       	std	Y+2, r23	; 0x02
    1f8c:	8b 83       	std	Y+3, r24	; 0x03
    1f8e:	9c 83       	std	Y+4, r25	; 0x04
    1f90:	2d 83       	std	Y+5, r18	; 0x05
    1f92:	3e 83       	std	Y+6, r19	; 0x06
    1f94:	4f 83       	std	Y+7, r20	; 0x07
    1f96:	58 87       	std	Y+8, r21	; 0x08
    1f98:	89 e0       	ldi	r24, 0x09	; 9
    1f9a:	e8 2e       	mov	r14, r24
    1f9c:	f1 2c       	mov	r15, r1
    1f9e:	ec 0e       	add	r14, r28
    1fa0:	fd 1e       	adc	r15, r29
    1fa2:	ce 01       	movw	r24, r28
    1fa4:	01 96       	adiw	r24, 0x01	; 1
    1fa6:	b7 01       	movw	r22, r14
    1fa8:	0e 94 9d 12 	call	0x253a	; 0x253a <__unpack_f>
    1fac:	8e 01       	movw	r16, r28
    1fae:	0f 5e       	subi	r16, 0xEF	; 239
    1fb0:	1f 4f       	sbci	r17, 0xFF	; 255
    1fb2:	ce 01       	movw	r24, r28
    1fb4:	05 96       	adiw	r24, 0x05	; 5
    1fb6:	b8 01       	movw	r22, r16
    1fb8:	0e 94 9d 12 	call	0x253a	; 0x253a <__unpack_f>
    1fbc:	89 85       	ldd	r24, Y+9	; 0x09
    1fbe:	82 30       	cpi	r24, 0x02	; 2
    1fc0:	40 f0       	brcs	.+16     	; 0x1fd2 <__gesf2+0x56>
    1fc2:	89 89       	ldd	r24, Y+17	; 0x11
    1fc4:	82 30       	cpi	r24, 0x02	; 2
    1fc6:	28 f0       	brcs	.+10     	; 0x1fd2 <__gesf2+0x56>
    1fc8:	c7 01       	movw	r24, r14
    1fca:	b8 01       	movw	r22, r16
    1fcc:	0e 94 15 13 	call	0x262a	; 0x262a <__fpcmp_parts_f>
    1fd0:	01 c0       	rjmp	.+2      	; 0x1fd4 <__gesf2+0x58>
    1fd2:	8f ef       	ldi	r24, 0xFF	; 255
    1fd4:	68 96       	adiw	r28, 0x18	; 24
    1fd6:	e6 e0       	ldi	r30, 0x06	; 6
    1fd8:	0c 94 aa 13 	jmp	0x2754	; 0x2754 <__epilogue_restores__+0x18>

00001fdc <__ltsf2>:
    1fdc:	a8 e1       	ldi	r26, 0x18	; 24
    1fde:	b0 e0       	ldi	r27, 0x00	; 0
    1fe0:	e4 ef       	ldi	r30, 0xF4	; 244
    1fe2:	ff e0       	ldi	r31, 0x0F	; 15
    1fe4:	0c 94 8e 13 	jmp	0x271c	; 0x271c <__prologue_saves__+0x18>
    1fe8:	69 83       	std	Y+1, r22	; 0x01
    1fea:	7a 83       	std	Y+2, r23	; 0x02
    1fec:	8b 83       	std	Y+3, r24	; 0x03
    1fee:	9c 83       	std	Y+4, r25	; 0x04
    1ff0:	2d 83       	std	Y+5, r18	; 0x05
    1ff2:	3e 83       	std	Y+6, r19	; 0x06
    1ff4:	4f 83       	std	Y+7, r20	; 0x07
    1ff6:	58 87       	std	Y+8, r21	; 0x08
    1ff8:	89 e0       	ldi	r24, 0x09	; 9
    1ffa:	e8 2e       	mov	r14, r24
    1ffc:	f1 2c       	mov	r15, r1
    1ffe:	ec 0e       	add	r14, r28
    2000:	fd 1e       	adc	r15, r29
    2002:	ce 01       	movw	r24, r28
    2004:	01 96       	adiw	r24, 0x01	; 1
    2006:	b7 01       	movw	r22, r14
    2008:	0e 94 9d 12 	call	0x253a	; 0x253a <__unpack_f>
    200c:	8e 01       	movw	r16, r28
    200e:	0f 5e       	subi	r16, 0xEF	; 239
    2010:	1f 4f       	sbci	r17, 0xFF	; 255
    2012:	ce 01       	movw	r24, r28
    2014:	05 96       	adiw	r24, 0x05	; 5
    2016:	b8 01       	movw	r22, r16
    2018:	0e 94 9d 12 	call	0x253a	; 0x253a <__unpack_f>
    201c:	89 85       	ldd	r24, Y+9	; 0x09
    201e:	82 30       	cpi	r24, 0x02	; 2
    2020:	40 f0       	brcs	.+16     	; 0x2032 <__ltsf2+0x56>
    2022:	89 89       	ldd	r24, Y+17	; 0x11
    2024:	82 30       	cpi	r24, 0x02	; 2
    2026:	28 f0       	brcs	.+10     	; 0x2032 <__ltsf2+0x56>
    2028:	c7 01       	movw	r24, r14
    202a:	b8 01       	movw	r22, r16
    202c:	0e 94 15 13 	call	0x262a	; 0x262a <__fpcmp_parts_f>
    2030:	01 c0       	rjmp	.+2      	; 0x2034 <__ltsf2+0x58>
    2032:	81 e0       	ldi	r24, 0x01	; 1
    2034:	68 96       	adiw	r28, 0x18	; 24
    2036:	e6 e0       	ldi	r30, 0x06	; 6
    2038:	0c 94 aa 13 	jmp	0x2754	; 0x2754 <__epilogue_restores__+0x18>

0000203c <__lesf2>:
    203c:	a8 e1       	ldi	r26, 0x18	; 24
    203e:	b0 e0       	ldi	r27, 0x00	; 0
    2040:	e4 e2       	ldi	r30, 0x24	; 36
    2042:	f0 e1       	ldi	r31, 0x10	; 16
    2044:	0c 94 8e 13 	jmp	0x271c	; 0x271c <__prologue_saves__+0x18>
    2048:	69 83       	std	Y+1, r22	; 0x01
    204a:	7a 83       	std	Y+2, r23	; 0x02
    204c:	8b 83       	std	Y+3, r24	; 0x03
    204e:	9c 83       	std	Y+4, r25	; 0x04
    2050:	2d 83       	std	Y+5, r18	; 0x05
    2052:	3e 83       	std	Y+6, r19	; 0x06
    2054:	4f 83       	std	Y+7, r20	; 0x07
    2056:	58 87       	std	Y+8, r21	; 0x08
    2058:	89 e0       	ldi	r24, 0x09	; 9
    205a:	e8 2e       	mov	r14, r24
    205c:	f1 2c       	mov	r15, r1
    205e:	ec 0e       	add	r14, r28
    2060:	fd 1e       	adc	r15, r29
    2062:	ce 01       	movw	r24, r28
    2064:	01 96       	adiw	r24, 0x01	; 1
    2066:	b7 01       	movw	r22, r14
    2068:	0e 94 9d 12 	call	0x253a	; 0x253a <__unpack_f>
    206c:	8e 01       	movw	r16, r28
    206e:	0f 5e       	subi	r16, 0xEF	; 239
    2070:	1f 4f       	sbci	r17, 0xFF	; 255
    2072:	ce 01       	movw	r24, r28
    2074:	05 96       	adiw	r24, 0x05	; 5
    2076:	b8 01       	movw	r22, r16
    2078:	0e 94 9d 12 	call	0x253a	; 0x253a <__unpack_f>
    207c:	89 85       	ldd	r24, Y+9	; 0x09
    207e:	82 30       	cpi	r24, 0x02	; 2
    2080:	40 f0       	brcs	.+16     	; 0x2092 <__lesf2+0x56>
    2082:	89 89       	ldd	r24, Y+17	; 0x11
    2084:	82 30       	cpi	r24, 0x02	; 2
    2086:	28 f0       	brcs	.+10     	; 0x2092 <__lesf2+0x56>
    2088:	c7 01       	movw	r24, r14
    208a:	b8 01       	movw	r22, r16
    208c:	0e 94 15 13 	call	0x262a	; 0x262a <__fpcmp_parts_f>
    2090:	01 c0       	rjmp	.+2      	; 0x2094 <__lesf2+0x58>
    2092:	81 e0       	ldi	r24, 0x01	; 1
    2094:	68 96       	adiw	r28, 0x18	; 24
    2096:	e6 e0       	ldi	r30, 0x06	; 6
    2098:	0c 94 aa 13 	jmp	0x2754	; 0x2754 <__epilogue_restores__+0x18>

0000209c <__floatsisf>:
    209c:	a8 e0       	ldi	r26, 0x08	; 8
    209e:	b0 e0       	ldi	r27, 0x00	; 0
    20a0:	e4 e5       	ldi	r30, 0x54	; 84
    20a2:	f0 e1       	ldi	r31, 0x10	; 16
    20a4:	0c 94 8b 13 	jmp	0x2716	; 0x2716 <__prologue_saves__+0x12>
    20a8:	9b 01       	movw	r18, r22
    20aa:	ac 01       	movw	r20, r24
    20ac:	83 e0       	ldi	r24, 0x03	; 3
    20ae:	89 83       	std	Y+1, r24	; 0x01
    20b0:	da 01       	movw	r26, r20
    20b2:	c9 01       	movw	r24, r18
    20b4:	88 27       	eor	r24, r24
    20b6:	b7 fd       	sbrc	r27, 7
    20b8:	83 95       	inc	r24
    20ba:	99 27       	eor	r25, r25
    20bc:	aa 27       	eor	r26, r26
    20be:	bb 27       	eor	r27, r27
    20c0:	b8 2e       	mov	r11, r24
    20c2:	21 15       	cp	r18, r1
    20c4:	31 05       	cpc	r19, r1
    20c6:	41 05       	cpc	r20, r1
    20c8:	51 05       	cpc	r21, r1
    20ca:	19 f4       	brne	.+6      	; 0x20d2 <__floatsisf+0x36>
    20cc:	82 e0       	ldi	r24, 0x02	; 2
    20ce:	89 83       	std	Y+1, r24	; 0x01
    20d0:	3a c0       	rjmp	.+116    	; 0x2146 <__floatsisf+0xaa>
    20d2:	88 23       	and	r24, r24
    20d4:	a9 f0       	breq	.+42     	; 0x2100 <__floatsisf+0x64>
    20d6:	20 30       	cpi	r18, 0x00	; 0
    20d8:	80 e0       	ldi	r24, 0x00	; 0
    20da:	38 07       	cpc	r19, r24
    20dc:	80 e0       	ldi	r24, 0x00	; 0
    20de:	48 07       	cpc	r20, r24
    20e0:	80 e8       	ldi	r24, 0x80	; 128
    20e2:	58 07       	cpc	r21, r24
    20e4:	29 f4       	brne	.+10     	; 0x20f0 <__floatsisf+0x54>
    20e6:	60 e0       	ldi	r22, 0x00	; 0
    20e8:	70 e0       	ldi	r23, 0x00	; 0
    20ea:	80 e0       	ldi	r24, 0x00	; 0
    20ec:	9f ec       	ldi	r25, 0xCF	; 207
    20ee:	30 c0       	rjmp	.+96     	; 0x2150 <__floatsisf+0xb4>
    20f0:	ee 24       	eor	r14, r14
    20f2:	ff 24       	eor	r15, r15
    20f4:	87 01       	movw	r16, r14
    20f6:	e2 1a       	sub	r14, r18
    20f8:	f3 0a       	sbc	r15, r19
    20fa:	04 0b       	sbc	r16, r20
    20fc:	15 0b       	sbc	r17, r21
    20fe:	02 c0       	rjmp	.+4      	; 0x2104 <__floatsisf+0x68>
    2100:	79 01       	movw	r14, r18
    2102:	8a 01       	movw	r16, r20
    2104:	8e e1       	ldi	r24, 0x1E	; 30
    2106:	c8 2e       	mov	r12, r24
    2108:	d1 2c       	mov	r13, r1
    210a:	dc 82       	std	Y+4, r13	; 0x04
    210c:	cb 82       	std	Y+3, r12	; 0x03
    210e:	ed 82       	std	Y+5, r14	; 0x05
    2110:	fe 82       	std	Y+6, r15	; 0x06
    2112:	0f 83       	std	Y+7, r16	; 0x07
    2114:	18 87       	std	Y+8, r17	; 0x08
    2116:	c8 01       	movw	r24, r16
    2118:	b7 01       	movw	r22, r14
    211a:	0e 94 79 11 	call	0x22f2	; 0x22f2 <__clzsi2>
    211e:	01 97       	sbiw	r24, 0x01	; 1
    2120:	18 16       	cp	r1, r24
    2122:	19 06       	cpc	r1, r25
    2124:	84 f4       	brge	.+32     	; 0x2146 <__floatsisf+0xaa>
    2126:	08 2e       	mov	r0, r24
    2128:	04 c0       	rjmp	.+8      	; 0x2132 <__floatsisf+0x96>
    212a:	ee 0c       	add	r14, r14
    212c:	ff 1c       	adc	r15, r15
    212e:	00 1f       	adc	r16, r16
    2130:	11 1f       	adc	r17, r17
    2132:	0a 94       	dec	r0
    2134:	d2 f7       	brpl	.-12     	; 0x212a <__floatsisf+0x8e>
    2136:	ed 82       	std	Y+5, r14	; 0x05
    2138:	fe 82       	std	Y+6, r15	; 0x06
    213a:	0f 83       	std	Y+7, r16	; 0x07
    213c:	18 87       	std	Y+8, r17	; 0x08
    213e:	c8 1a       	sub	r12, r24
    2140:	d9 0a       	sbc	r13, r25
    2142:	dc 82       	std	Y+4, r13	; 0x04
    2144:	cb 82       	std	Y+3, r12	; 0x03
    2146:	ba 82       	std	Y+2, r11	; 0x02
    2148:	ce 01       	movw	r24, r28
    214a:	01 96       	adiw	r24, 0x01	; 1
    214c:	0e 94 c8 11 	call	0x2390	; 0x2390 <__pack_f>
    2150:	28 96       	adiw	r28, 0x08	; 8
    2152:	e9 e0       	ldi	r30, 0x09	; 9
    2154:	0c 94 a7 13 	jmp	0x274e	; 0x274e <__epilogue_restores__+0x12>

00002158 <__fixsfsi>:
    2158:	ac e0       	ldi	r26, 0x0C	; 12
    215a:	b0 e0       	ldi	r27, 0x00	; 0
    215c:	e2 eb       	ldi	r30, 0xB2	; 178
    215e:	f0 e1       	ldi	r31, 0x10	; 16
    2160:	0c 94 92 13 	jmp	0x2724	; 0x2724 <__prologue_saves__+0x20>
    2164:	69 83       	std	Y+1, r22	; 0x01
    2166:	7a 83       	std	Y+2, r23	; 0x02
    2168:	8b 83       	std	Y+3, r24	; 0x03
    216a:	9c 83       	std	Y+4, r25	; 0x04
    216c:	ce 01       	movw	r24, r28
    216e:	01 96       	adiw	r24, 0x01	; 1
    2170:	be 01       	movw	r22, r28
    2172:	6b 5f       	subi	r22, 0xFB	; 251
    2174:	7f 4f       	sbci	r23, 0xFF	; 255
    2176:	0e 94 9d 12 	call	0x253a	; 0x253a <__unpack_f>
    217a:	8d 81       	ldd	r24, Y+5	; 0x05
    217c:	82 30       	cpi	r24, 0x02	; 2
    217e:	61 f1       	breq	.+88     	; 0x21d8 <__fixsfsi+0x80>
    2180:	82 30       	cpi	r24, 0x02	; 2
    2182:	50 f1       	brcs	.+84     	; 0x21d8 <__fixsfsi+0x80>
    2184:	84 30       	cpi	r24, 0x04	; 4
    2186:	21 f4       	brne	.+8      	; 0x2190 <__fixsfsi+0x38>
    2188:	8e 81       	ldd	r24, Y+6	; 0x06
    218a:	88 23       	and	r24, r24
    218c:	51 f1       	breq	.+84     	; 0x21e2 <__fixsfsi+0x8a>
    218e:	2e c0       	rjmp	.+92     	; 0x21ec <__fixsfsi+0x94>
    2190:	2f 81       	ldd	r18, Y+7	; 0x07
    2192:	38 85       	ldd	r19, Y+8	; 0x08
    2194:	37 fd       	sbrc	r19, 7
    2196:	20 c0       	rjmp	.+64     	; 0x21d8 <__fixsfsi+0x80>
    2198:	6e 81       	ldd	r22, Y+6	; 0x06
    219a:	2f 31       	cpi	r18, 0x1F	; 31
    219c:	31 05       	cpc	r19, r1
    219e:	1c f0       	brlt	.+6      	; 0x21a6 <__fixsfsi+0x4e>
    21a0:	66 23       	and	r22, r22
    21a2:	f9 f0       	breq	.+62     	; 0x21e2 <__fixsfsi+0x8a>
    21a4:	23 c0       	rjmp	.+70     	; 0x21ec <__fixsfsi+0x94>
    21a6:	8e e1       	ldi	r24, 0x1E	; 30
    21a8:	90 e0       	ldi	r25, 0x00	; 0
    21aa:	82 1b       	sub	r24, r18
    21ac:	93 0b       	sbc	r25, r19
    21ae:	29 85       	ldd	r18, Y+9	; 0x09
    21b0:	3a 85       	ldd	r19, Y+10	; 0x0a
    21b2:	4b 85       	ldd	r20, Y+11	; 0x0b
    21b4:	5c 85       	ldd	r21, Y+12	; 0x0c
    21b6:	04 c0       	rjmp	.+8      	; 0x21c0 <__fixsfsi+0x68>
    21b8:	56 95       	lsr	r21
    21ba:	47 95       	ror	r20
    21bc:	37 95       	ror	r19
    21be:	27 95       	ror	r18
    21c0:	8a 95       	dec	r24
    21c2:	d2 f7       	brpl	.-12     	; 0x21b8 <__fixsfsi+0x60>
    21c4:	66 23       	and	r22, r22
    21c6:	b1 f0       	breq	.+44     	; 0x21f4 <__fixsfsi+0x9c>
    21c8:	50 95       	com	r21
    21ca:	40 95       	com	r20
    21cc:	30 95       	com	r19
    21ce:	21 95       	neg	r18
    21d0:	3f 4f       	sbci	r19, 0xFF	; 255
    21d2:	4f 4f       	sbci	r20, 0xFF	; 255
    21d4:	5f 4f       	sbci	r21, 0xFF	; 255
    21d6:	0e c0       	rjmp	.+28     	; 0x21f4 <__fixsfsi+0x9c>
    21d8:	20 e0       	ldi	r18, 0x00	; 0
    21da:	30 e0       	ldi	r19, 0x00	; 0
    21dc:	40 e0       	ldi	r20, 0x00	; 0
    21de:	50 e0       	ldi	r21, 0x00	; 0
    21e0:	09 c0       	rjmp	.+18     	; 0x21f4 <__fixsfsi+0x9c>
    21e2:	2f ef       	ldi	r18, 0xFF	; 255
    21e4:	3f ef       	ldi	r19, 0xFF	; 255
    21e6:	4f ef       	ldi	r20, 0xFF	; 255
    21e8:	5f e7       	ldi	r21, 0x7F	; 127
    21ea:	04 c0       	rjmp	.+8      	; 0x21f4 <__fixsfsi+0x9c>
    21ec:	20 e0       	ldi	r18, 0x00	; 0
    21ee:	30 e0       	ldi	r19, 0x00	; 0
    21f0:	40 e0       	ldi	r20, 0x00	; 0
    21f2:	50 e8       	ldi	r21, 0x80	; 128
    21f4:	b9 01       	movw	r22, r18
    21f6:	ca 01       	movw	r24, r20
    21f8:	2c 96       	adiw	r28, 0x0c	; 12
    21fa:	e2 e0       	ldi	r30, 0x02	; 2
    21fc:	0c 94 ae 13 	jmp	0x275c	; 0x275c <__epilogue_restores__+0x20>

00002200 <__floatunsisf>:
    2200:	a8 e0       	ldi	r26, 0x08	; 8
    2202:	b0 e0       	ldi	r27, 0x00	; 0
    2204:	e6 e0       	ldi	r30, 0x06	; 6
    2206:	f1 e1       	ldi	r31, 0x11	; 17
    2208:	0c 94 8a 13 	jmp	0x2714	; 0x2714 <__prologue_saves__+0x10>
    220c:	7b 01       	movw	r14, r22
    220e:	8c 01       	movw	r16, r24
    2210:	61 15       	cp	r22, r1
    2212:	71 05       	cpc	r23, r1
    2214:	81 05       	cpc	r24, r1
    2216:	91 05       	cpc	r25, r1
    2218:	19 f4       	brne	.+6      	; 0x2220 <__floatunsisf+0x20>
    221a:	82 e0       	ldi	r24, 0x02	; 2
    221c:	89 83       	std	Y+1, r24	; 0x01
    221e:	60 c0       	rjmp	.+192    	; 0x22e0 <__floatunsisf+0xe0>
    2220:	83 e0       	ldi	r24, 0x03	; 3
    2222:	89 83       	std	Y+1, r24	; 0x01
    2224:	8e e1       	ldi	r24, 0x1E	; 30
    2226:	c8 2e       	mov	r12, r24
    2228:	d1 2c       	mov	r13, r1
    222a:	dc 82       	std	Y+4, r13	; 0x04
    222c:	cb 82       	std	Y+3, r12	; 0x03
    222e:	ed 82       	std	Y+5, r14	; 0x05
    2230:	fe 82       	std	Y+6, r15	; 0x06
    2232:	0f 83       	std	Y+7, r16	; 0x07
    2234:	18 87       	std	Y+8, r17	; 0x08
    2236:	c8 01       	movw	r24, r16
    2238:	b7 01       	movw	r22, r14
    223a:	0e 94 79 11 	call	0x22f2	; 0x22f2 <__clzsi2>
    223e:	fc 01       	movw	r30, r24
    2240:	31 97       	sbiw	r30, 0x01	; 1
    2242:	f7 ff       	sbrs	r31, 7
    2244:	3b c0       	rjmp	.+118    	; 0x22bc <__floatunsisf+0xbc>
    2246:	22 27       	eor	r18, r18
    2248:	33 27       	eor	r19, r19
    224a:	2e 1b       	sub	r18, r30
    224c:	3f 0b       	sbc	r19, r31
    224e:	57 01       	movw	r10, r14
    2250:	68 01       	movw	r12, r16
    2252:	02 2e       	mov	r0, r18
    2254:	04 c0       	rjmp	.+8      	; 0x225e <__floatunsisf+0x5e>
    2256:	d6 94       	lsr	r13
    2258:	c7 94       	ror	r12
    225a:	b7 94       	ror	r11
    225c:	a7 94       	ror	r10
    225e:	0a 94       	dec	r0
    2260:	d2 f7       	brpl	.-12     	; 0x2256 <__floatunsisf+0x56>
    2262:	40 e0       	ldi	r20, 0x00	; 0
    2264:	50 e0       	ldi	r21, 0x00	; 0
    2266:	60 e0       	ldi	r22, 0x00	; 0
    2268:	70 e0       	ldi	r23, 0x00	; 0
    226a:	81 e0       	ldi	r24, 0x01	; 1
    226c:	90 e0       	ldi	r25, 0x00	; 0
    226e:	a0 e0       	ldi	r26, 0x00	; 0
    2270:	b0 e0       	ldi	r27, 0x00	; 0
    2272:	04 c0       	rjmp	.+8      	; 0x227c <__floatunsisf+0x7c>
    2274:	88 0f       	add	r24, r24
    2276:	99 1f       	adc	r25, r25
    2278:	aa 1f       	adc	r26, r26
    227a:	bb 1f       	adc	r27, r27
    227c:	2a 95       	dec	r18
    227e:	d2 f7       	brpl	.-12     	; 0x2274 <__floatunsisf+0x74>
    2280:	01 97       	sbiw	r24, 0x01	; 1
    2282:	a1 09       	sbc	r26, r1
    2284:	b1 09       	sbc	r27, r1
    2286:	8e 21       	and	r24, r14
    2288:	9f 21       	and	r25, r15
    228a:	a0 23       	and	r26, r16
    228c:	b1 23       	and	r27, r17
    228e:	00 97       	sbiw	r24, 0x00	; 0
    2290:	a1 05       	cpc	r26, r1
    2292:	b1 05       	cpc	r27, r1
    2294:	21 f0       	breq	.+8      	; 0x229e <__floatunsisf+0x9e>
    2296:	41 e0       	ldi	r20, 0x01	; 1
    2298:	50 e0       	ldi	r21, 0x00	; 0
    229a:	60 e0       	ldi	r22, 0x00	; 0
    229c:	70 e0       	ldi	r23, 0x00	; 0
    229e:	4a 29       	or	r20, r10
    22a0:	5b 29       	or	r21, r11
    22a2:	6c 29       	or	r22, r12
    22a4:	7d 29       	or	r23, r13
    22a6:	4d 83       	std	Y+5, r20	; 0x05
    22a8:	5e 83       	std	Y+6, r21	; 0x06
    22aa:	6f 83       	std	Y+7, r22	; 0x07
    22ac:	78 87       	std	Y+8, r23	; 0x08
    22ae:	8e e1       	ldi	r24, 0x1E	; 30
    22b0:	90 e0       	ldi	r25, 0x00	; 0
    22b2:	8e 1b       	sub	r24, r30
    22b4:	9f 0b       	sbc	r25, r31
    22b6:	9c 83       	std	Y+4, r25	; 0x04
    22b8:	8b 83       	std	Y+3, r24	; 0x03
    22ba:	12 c0       	rjmp	.+36     	; 0x22e0 <__floatunsisf+0xe0>
    22bc:	30 97       	sbiw	r30, 0x00	; 0
    22be:	81 f0       	breq	.+32     	; 0x22e0 <__floatunsisf+0xe0>
    22c0:	0e 2e       	mov	r0, r30
    22c2:	04 c0       	rjmp	.+8      	; 0x22cc <__floatunsisf+0xcc>
    22c4:	ee 0c       	add	r14, r14
    22c6:	ff 1c       	adc	r15, r15
    22c8:	00 1f       	adc	r16, r16
    22ca:	11 1f       	adc	r17, r17
    22cc:	0a 94       	dec	r0
    22ce:	d2 f7       	brpl	.-12     	; 0x22c4 <__floatunsisf+0xc4>
    22d0:	ed 82       	std	Y+5, r14	; 0x05
    22d2:	fe 82       	std	Y+6, r15	; 0x06
    22d4:	0f 83       	std	Y+7, r16	; 0x07
    22d6:	18 87       	std	Y+8, r17	; 0x08
    22d8:	ce 1a       	sub	r12, r30
    22da:	df 0a       	sbc	r13, r31
    22dc:	dc 82       	std	Y+4, r13	; 0x04
    22de:	cb 82       	std	Y+3, r12	; 0x03
    22e0:	1a 82       	std	Y+2, r1	; 0x02
    22e2:	ce 01       	movw	r24, r28
    22e4:	01 96       	adiw	r24, 0x01	; 1
    22e6:	0e 94 c8 11 	call	0x2390	; 0x2390 <__pack_f>
    22ea:	28 96       	adiw	r28, 0x08	; 8
    22ec:	ea e0       	ldi	r30, 0x0A	; 10
    22ee:	0c 94 a6 13 	jmp	0x274c	; 0x274c <__epilogue_restores__+0x10>

000022f2 <__clzsi2>:
    22f2:	ef 92       	push	r14
    22f4:	ff 92       	push	r15
    22f6:	0f 93       	push	r16
    22f8:	1f 93       	push	r17
    22fa:	7b 01       	movw	r14, r22
    22fc:	8c 01       	movw	r16, r24
    22fe:	80 e0       	ldi	r24, 0x00	; 0
    2300:	e8 16       	cp	r14, r24
    2302:	80 e0       	ldi	r24, 0x00	; 0
    2304:	f8 06       	cpc	r15, r24
    2306:	81 e0       	ldi	r24, 0x01	; 1
    2308:	08 07       	cpc	r16, r24
    230a:	80 e0       	ldi	r24, 0x00	; 0
    230c:	18 07       	cpc	r17, r24
    230e:	88 f4       	brcc	.+34     	; 0x2332 <__clzsi2+0x40>
    2310:	8f ef       	ldi	r24, 0xFF	; 255
    2312:	e8 16       	cp	r14, r24
    2314:	f1 04       	cpc	r15, r1
    2316:	01 05       	cpc	r16, r1
    2318:	11 05       	cpc	r17, r1
    231a:	31 f0       	breq	.+12     	; 0x2328 <__clzsi2+0x36>
    231c:	28 f0       	brcs	.+10     	; 0x2328 <__clzsi2+0x36>
    231e:	88 e0       	ldi	r24, 0x08	; 8
    2320:	90 e0       	ldi	r25, 0x00	; 0
    2322:	a0 e0       	ldi	r26, 0x00	; 0
    2324:	b0 e0       	ldi	r27, 0x00	; 0
    2326:	17 c0       	rjmp	.+46     	; 0x2356 <__clzsi2+0x64>
    2328:	80 e0       	ldi	r24, 0x00	; 0
    232a:	90 e0       	ldi	r25, 0x00	; 0
    232c:	a0 e0       	ldi	r26, 0x00	; 0
    232e:	b0 e0       	ldi	r27, 0x00	; 0
    2330:	12 c0       	rjmp	.+36     	; 0x2356 <__clzsi2+0x64>
    2332:	80 e0       	ldi	r24, 0x00	; 0
    2334:	e8 16       	cp	r14, r24
    2336:	80 e0       	ldi	r24, 0x00	; 0
    2338:	f8 06       	cpc	r15, r24
    233a:	80 e0       	ldi	r24, 0x00	; 0
    233c:	08 07       	cpc	r16, r24
    233e:	81 e0       	ldi	r24, 0x01	; 1
    2340:	18 07       	cpc	r17, r24
    2342:	28 f0       	brcs	.+10     	; 0x234e <__clzsi2+0x5c>
    2344:	88 e1       	ldi	r24, 0x18	; 24
    2346:	90 e0       	ldi	r25, 0x00	; 0
    2348:	a0 e0       	ldi	r26, 0x00	; 0
    234a:	b0 e0       	ldi	r27, 0x00	; 0
    234c:	04 c0       	rjmp	.+8      	; 0x2356 <__clzsi2+0x64>
    234e:	80 e1       	ldi	r24, 0x10	; 16
    2350:	90 e0       	ldi	r25, 0x00	; 0
    2352:	a0 e0       	ldi	r26, 0x00	; 0
    2354:	b0 e0       	ldi	r27, 0x00	; 0
    2356:	20 e2       	ldi	r18, 0x20	; 32
    2358:	30 e0       	ldi	r19, 0x00	; 0
    235a:	40 e0       	ldi	r20, 0x00	; 0
    235c:	50 e0       	ldi	r21, 0x00	; 0
    235e:	28 1b       	sub	r18, r24
    2360:	39 0b       	sbc	r19, r25
    2362:	4a 0b       	sbc	r20, r26
    2364:	5b 0b       	sbc	r21, r27
    2366:	04 c0       	rjmp	.+8      	; 0x2370 <__clzsi2+0x7e>
    2368:	16 95       	lsr	r17
    236a:	07 95       	ror	r16
    236c:	f7 94       	ror	r15
    236e:	e7 94       	ror	r14
    2370:	8a 95       	dec	r24
    2372:	d2 f7       	brpl	.-12     	; 0x2368 <__clzsi2+0x76>
    2374:	f7 01       	movw	r30, r14
    2376:	e6 56       	subi	r30, 0x66	; 102
    2378:	ff 4f       	sbci	r31, 0xFF	; 255
    237a:	80 81       	ld	r24, Z
    237c:	28 1b       	sub	r18, r24
    237e:	31 09       	sbc	r19, r1
    2380:	41 09       	sbc	r20, r1
    2382:	51 09       	sbc	r21, r1
    2384:	c9 01       	movw	r24, r18
    2386:	1f 91       	pop	r17
    2388:	0f 91       	pop	r16
    238a:	ff 90       	pop	r15
    238c:	ef 90       	pop	r14
    238e:	08 95       	ret

00002390 <__pack_f>:
    2390:	df 92       	push	r13
    2392:	ef 92       	push	r14
    2394:	ff 92       	push	r15
    2396:	0f 93       	push	r16
    2398:	1f 93       	push	r17
    239a:	fc 01       	movw	r30, r24
    239c:	e4 80       	ldd	r14, Z+4	; 0x04
    239e:	f5 80       	ldd	r15, Z+5	; 0x05
    23a0:	06 81       	ldd	r16, Z+6	; 0x06
    23a2:	17 81       	ldd	r17, Z+7	; 0x07
    23a4:	d1 80       	ldd	r13, Z+1	; 0x01
    23a6:	80 81       	ld	r24, Z
    23a8:	82 30       	cpi	r24, 0x02	; 2
    23aa:	48 f4       	brcc	.+18     	; 0x23be <__pack_f+0x2e>
    23ac:	80 e0       	ldi	r24, 0x00	; 0
    23ae:	90 e0       	ldi	r25, 0x00	; 0
    23b0:	a0 e1       	ldi	r26, 0x10	; 16
    23b2:	b0 e0       	ldi	r27, 0x00	; 0
    23b4:	e8 2a       	or	r14, r24
    23b6:	f9 2a       	or	r15, r25
    23b8:	0a 2b       	or	r16, r26
    23ba:	1b 2b       	or	r17, r27
    23bc:	a5 c0       	rjmp	.+330    	; 0x2508 <__pack_f+0x178>
    23be:	84 30       	cpi	r24, 0x04	; 4
    23c0:	09 f4       	brne	.+2      	; 0x23c4 <__pack_f+0x34>
    23c2:	9f c0       	rjmp	.+318    	; 0x2502 <__pack_f+0x172>
    23c4:	82 30       	cpi	r24, 0x02	; 2
    23c6:	21 f4       	brne	.+8      	; 0x23d0 <__pack_f+0x40>
    23c8:	ee 24       	eor	r14, r14
    23ca:	ff 24       	eor	r15, r15
    23cc:	87 01       	movw	r16, r14
    23ce:	05 c0       	rjmp	.+10     	; 0x23da <__pack_f+0x4a>
    23d0:	e1 14       	cp	r14, r1
    23d2:	f1 04       	cpc	r15, r1
    23d4:	01 05       	cpc	r16, r1
    23d6:	11 05       	cpc	r17, r1
    23d8:	19 f4       	brne	.+6      	; 0x23e0 <__pack_f+0x50>
    23da:	e0 e0       	ldi	r30, 0x00	; 0
    23dc:	f0 e0       	ldi	r31, 0x00	; 0
    23de:	96 c0       	rjmp	.+300    	; 0x250c <__pack_f+0x17c>
    23e0:	62 81       	ldd	r22, Z+2	; 0x02
    23e2:	73 81       	ldd	r23, Z+3	; 0x03
    23e4:	9f ef       	ldi	r25, 0xFF	; 255
    23e6:	62 38       	cpi	r22, 0x82	; 130
    23e8:	79 07       	cpc	r23, r25
    23ea:	0c f0       	brlt	.+2      	; 0x23ee <__pack_f+0x5e>
    23ec:	5b c0       	rjmp	.+182    	; 0x24a4 <__pack_f+0x114>
    23ee:	22 e8       	ldi	r18, 0x82	; 130
    23f0:	3f ef       	ldi	r19, 0xFF	; 255
    23f2:	26 1b       	sub	r18, r22
    23f4:	37 0b       	sbc	r19, r23
    23f6:	2a 31       	cpi	r18, 0x1A	; 26
    23f8:	31 05       	cpc	r19, r1
    23fa:	2c f0       	brlt	.+10     	; 0x2406 <__pack_f+0x76>
    23fc:	20 e0       	ldi	r18, 0x00	; 0
    23fe:	30 e0       	ldi	r19, 0x00	; 0
    2400:	40 e0       	ldi	r20, 0x00	; 0
    2402:	50 e0       	ldi	r21, 0x00	; 0
    2404:	2a c0       	rjmp	.+84     	; 0x245a <__pack_f+0xca>
    2406:	b8 01       	movw	r22, r16
    2408:	a7 01       	movw	r20, r14
    240a:	02 2e       	mov	r0, r18
    240c:	04 c0       	rjmp	.+8      	; 0x2416 <__pack_f+0x86>
    240e:	76 95       	lsr	r23
    2410:	67 95       	ror	r22
    2412:	57 95       	ror	r21
    2414:	47 95       	ror	r20
    2416:	0a 94       	dec	r0
    2418:	d2 f7       	brpl	.-12     	; 0x240e <__pack_f+0x7e>
    241a:	81 e0       	ldi	r24, 0x01	; 1
    241c:	90 e0       	ldi	r25, 0x00	; 0
    241e:	a0 e0       	ldi	r26, 0x00	; 0
    2420:	b0 e0       	ldi	r27, 0x00	; 0
    2422:	04 c0       	rjmp	.+8      	; 0x242c <__pack_f+0x9c>
    2424:	88 0f       	add	r24, r24
    2426:	99 1f       	adc	r25, r25
    2428:	aa 1f       	adc	r26, r26
    242a:	bb 1f       	adc	r27, r27
    242c:	2a 95       	dec	r18
    242e:	d2 f7       	brpl	.-12     	; 0x2424 <__pack_f+0x94>
    2430:	01 97       	sbiw	r24, 0x01	; 1
    2432:	a1 09       	sbc	r26, r1
    2434:	b1 09       	sbc	r27, r1
    2436:	8e 21       	and	r24, r14
    2438:	9f 21       	and	r25, r15
    243a:	a0 23       	and	r26, r16
    243c:	b1 23       	and	r27, r17
    243e:	00 97       	sbiw	r24, 0x00	; 0
    2440:	a1 05       	cpc	r26, r1
    2442:	b1 05       	cpc	r27, r1
    2444:	21 f0       	breq	.+8      	; 0x244e <__pack_f+0xbe>
    2446:	81 e0       	ldi	r24, 0x01	; 1
    2448:	90 e0       	ldi	r25, 0x00	; 0
    244a:	a0 e0       	ldi	r26, 0x00	; 0
    244c:	b0 e0       	ldi	r27, 0x00	; 0
    244e:	9a 01       	movw	r18, r20
    2450:	ab 01       	movw	r20, r22
    2452:	28 2b       	or	r18, r24
    2454:	39 2b       	or	r19, r25
    2456:	4a 2b       	or	r20, r26
    2458:	5b 2b       	or	r21, r27
    245a:	da 01       	movw	r26, r20
    245c:	c9 01       	movw	r24, r18
    245e:	8f 77       	andi	r24, 0x7F	; 127
    2460:	90 70       	andi	r25, 0x00	; 0
    2462:	a0 70       	andi	r26, 0x00	; 0
    2464:	b0 70       	andi	r27, 0x00	; 0
    2466:	80 34       	cpi	r24, 0x40	; 64
    2468:	91 05       	cpc	r25, r1
    246a:	a1 05       	cpc	r26, r1
    246c:	b1 05       	cpc	r27, r1
    246e:	39 f4       	brne	.+14     	; 0x247e <__pack_f+0xee>
    2470:	27 ff       	sbrs	r18, 7
    2472:	09 c0       	rjmp	.+18     	; 0x2486 <__pack_f+0xf6>
    2474:	20 5c       	subi	r18, 0xC0	; 192
    2476:	3f 4f       	sbci	r19, 0xFF	; 255
    2478:	4f 4f       	sbci	r20, 0xFF	; 255
    247a:	5f 4f       	sbci	r21, 0xFF	; 255
    247c:	04 c0       	rjmp	.+8      	; 0x2486 <__pack_f+0xf6>
    247e:	21 5c       	subi	r18, 0xC1	; 193
    2480:	3f 4f       	sbci	r19, 0xFF	; 255
    2482:	4f 4f       	sbci	r20, 0xFF	; 255
    2484:	5f 4f       	sbci	r21, 0xFF	; 255
    2486:	e0 e0       	ldi	r30, 0x00	; 0
    2488:	f0 e0       	ldi	r31, 0x00	; 0
    248a:	20 30       	cpi	r18, 0x00	; 0
    248c:	a0 e0       	ldi	r26, 0x00	; 0
    248e:	3a 07       	cpc	r19, r26
    2490:	a0 e0       	ldi	r26, 0x00	; 0
    2492:	4a 07       	cpc	r20, r26
    2494:	a0 e4       	ldi	r26, 0x40	; 64
    2496:	5a 07       	cpc	r21, r26
    2498:	10 f0       	brcs	.+4      	; 0x249e <__pack_f+0x10e>
    249a:	e1 e0       	ldi	r30, 0x01	; 1
    249c:	f0 e0       	ldi	r31, 0x00	; 0
    249e:	79 01       	movw	r14, r18
    24a0:	8a 01       	movw	r16, r20
    24a2:	27 c0       	rjmp	.+78     	; 0x24f2 <__pack_f+0x162>
    24a4:	60 38       	cpi	r22, 0x80	; 128
    24a6:	71 05       	cpc	r23, r1
    24a8:	64 f5       	brge	.+88     	; 0x2502 <__pack_f+0x172>
    24aa:	fb 01       	movw	r30, r22
    24ac:	e1 58       	subi	r30, 0x81	; 129
    24ae:	ff 4f       	sbci	r31, 0xFF	; 255
    24b0:	d8 01       	movw	r26, r16
    24b2:	c7 01       	movw	r24, r14
    24b4:	8f 77       	andi	r24, 0x7F	; 127
    24b6:	90 70       	andi	r25, 0x00	; 0
    24b8:	a0 70       	andi	r26, 0x00	; 0
    24ba:	b0 70       	andi	r27, 0x00	; 0
    24bc:	80 34       	cpi	r24, 0x40	; 64
    24be:	91 05       	cpc	r25, r1
    24c0:	a1 05       	cpc	r26, r1
    24c2:	b1 05       	cpc	r27, r1
    24c4:	39 f4       	brne	.+14     	; 0x24d4 <__pack_f+0x144>
    24c6:	e7 fe       	sbrs	r14, 7
    24c8:	0d c0       	rjmp	.+26     	; 0x24e4 <__pack_f+0x154>
    24ca:	80 e4       	ldi	r24, 0x40	; 64
    24cc:	90 e0       	ldi	r25, 0x00	; 0
    24ce:	a0 e0       	ldi	r26, 0x00	; 0
    24d0:	b0 e0       	ldi	r27, 0x00	; 0
    24d2:	04 c0       	rjmp	.+8      	; 0x24dc <__pack_f+0x14c>
    24d4:	8f e3       	ldi	r24, 0x3F	; 63
    24d6:	90 e0       	ldi	r25, 0x00	; 0
    24d8:	a0 e0       	ldi	r26, 0x00	; 0
    24da:	b0 e0       	ldi	r27, 0x00	; 0
    24dc:	e8 0e       	add	r14, r24
    24de:	f9 1e       	adc	r15, r25
    24e0:	0a 1f       	adc	r16, r26
    24e2:	1b 1f       	adc	r17, r27
    24e4:	17 ff       	sbrs	r17, 7
    24e6:	05 c0       	rjmp	.+10     	; 0x24f2 <__pack_f+0x162>
    24e8:	16 95       	lsr	r17
    24ea:	07 95       	ror	r16
    24ec:	f7 94       	ror	r15
    24ee:	e7 94       	ror	r14
    24f0:	31 96       	adiw	r30, 0x01	; 1
    24f2:	87 e0       	ldi	r24, 0x07	; 7
    24f4:	16 95       	lsr	r17
    24f6:	07 95       	ror	r16
    24f8:	f7 94       	ror	r15
    24fa:	e7 94       	ror	r14
    24fc:	8a 95       	dec	r24
    24fe:	d1 f7       	brne	.-12     	; 0x24f4 <__pack_f+0x164>
    2500:	05 c0       	rjmp	.+10     	; 0x250c <__pack_f+0x17c>
    2502:	ee 24       	eor	r14, r14
    2504:	ff 24       	eor	r15, r15
    2506:	87 01       	movw	r16, r14
    2508:	ef ef       	ldi	r30, 0xFF	; 255
    250a:	f0 e0       	ldi	r31, 0x00	; 0
    250c:	6e 2f       	mov	r22, r30
    250e:	67 95       	ror	r22
    2510:	66 27       	eor	r22, r22
    2512:	67 95       	ror	r22
    2514:	90 2f       	mov	r25, r16
    2516:	9f 77       	andi	r25, 0x7F	; 127
    2518:	d7 94       	ror	r13
    251a:	dd 24       	eor	r13, r13
    251c:	d7 94       	ror	r13
    251e:	8e 2f       	mov	r24, r30
    2520:	86 95       	lsr	r24
    2522:	49 2f       	mov	r20, r25
    2524:	46 2b       	or	r20, r22
    2526:	58 2f       	mov	r21, r24
    2528:	5d 29       	or	r21, r13
    252a:	b7 01       	movw	r22, r14
    252c:	ca 01       	movw	r24, r20
    252e:	1f 91       	pop	r17
    2530:	0f 91       	pop	r16
    2532:	ff 90       	pop	r15
    2534:	ef 90       	pop	r14
    2536:	df 90       	pop	r13
    2538:	08 95       	ret

0000253a <__unpack_f>:
    253a:	fc 01       	movw	r30, r24
    253c:	db 01       	movw	r26, r22
    253e:	40 81       	ld	r20, Z
    2540:	51 81       	ldd	r21, Z+1	; 0x01
    2542:	22 81       	ldd	r18, Z+2	; 0x02
    2544:	62 2f       	mov	r22, r18
    2546:	6f 77       	andi	r22, 0x7F	; 127
    2548:	70 e0       	ldi	r23, 0x00	; 0
    254a:	22 1f       	adc	r18, r18
    254c:	22 27       	eor	r18, r18
    254e:	22 1f       	adc	r18, r18
    2550:	93 81       	ldd	r25, Z+3	; 0x03
    2552:	89 2f       	mov	r24, r25
    2554:	88 0f       	add	r24, r24
    2556:	82 2b       	or	r24, r18
    2558:	28 2f       	mov	r18, r24
    255a:	30 e0       	ldi	r19, 0x00	; 0
    255c:	99 1f       	adc	r25, r25
    255e:	99 27       	eor	r25, r25
    2560:	99 1f       	adc	r25, r25
    2562:	11 96       	adiw	r26, 0x01	; 1
    2564:	9c 93       	st	X, r25
    2566:	11 97       	sbiw	r26, 0x01	; 1
    2568:	21 15       	cp	r18, r1
    256a:	31 05       	cpc	r19, r1
    256c:	a9 f5       	brne	.+106    	; 0x25d8 <__unpack_f+0x9e>
    256e:	41 15       	cp	r20, r1
    2570:	51 05       	cpc	r21, r1
    2572:	61 05       	cpc	r22, r1
    2574:	71 05       	cpc	r23, r1
    2576:	11 f4       	brne	.+4      	; 0x257c <__unpack_f+0x42>
    2578:	82 e0       	ldi	r24, 0x02	; 2
    257a:	37 c0       	rjmp	.+110    	; 0x25ea <__unpack_f+0xb0>
    257c:	82 e8       	ldi	r24, 0x82	; 130
    257e:	9f ef       	ldi	r25, 0xFF	; 255
    2580:	13 96       	adiw	r26, 0x03	; 3
    2582:	9c 93       	st	X, r25
    2584:	8e 93       	st	-X, r24
    2586:	12 97       	sbiw	r26, 0x02	; 2
    2588:	9a 01       	movw	r18, r20
    258a:	ab 01       	movw	r20, r22
    258c:	67 e0       	ldi	r22, 0x07	; 7
    258e:	22 0f       	add	r18, r18
    2590:	33 1f       	adc	r19, r19
    2592:	44 1f       	adc	r20, r20
    2594:	55 1f       	adc	r21, r21
    2596:	6a 95       	dec	r22
    2598:	d1 f7       	brne	.-12     	; 0x258e <__unpack_f+0x54>
    259a:	83 e0       	ldi	r24, 0x03	; 3
    259c:	8c 93       	st	X, r24
    259e:	0d c0       	rjmp	.+26     	; 0x25ba <__unpack_f+0x80>
    25a0:	22 0f       	add	r18, r18
    25a2:	33 1f       	adc	r19, r19
    25a4:	44 1f       	adc	r20, r20
    25a6:	55 1f       	adc	r21, r21
    25a8:	12 96       	adiw	r26, 0x02	; 2
    25aa:	8d 91       	ld	r24, X+
    25ac:	9c 91       	ld	r25, X
    25ae:	13 97       	sbiw	r26, 0x03	; 3
    25b0:	01 97       	sbiw	r24, 0x01	; 1
    25b2:	13 96       	adiw	r26, 0x03	; 3
    25b4:	9c 93       	st	X, r25
    25b6:	8e 93       	st	-X, r24
    25b8:	12 97       	sbiw	r26, 0x02	; 2
    25ba:	20 30       	cpi	r18, 0x00	; 0
    25bc:	80 e0       	ldi	r24, 0x00	; 0
    25be:	38 07       	cpc	r19, r24
    25c0:	80 e0       	ldi	r24, 0x00	; 0
    25c2:	48 07       	cpc	r20, r24
    25c4:	80 e4       	ldi	r24, 0x40	; 64
    25c6:	58 07       	cpc	r21, r24
    25c8:	58 f3       	brcs	.-42     	; 0x25a0 <__unpack_f+0x66>
    25ca:	14 96       	adiw	r26, 0x04	; 4
    25cc:	2d 93       	st	X+, r18
    25ce:	3d 93       	st	X+, r19
    25d0:	4d 93       	st	X+, r20
    25d2:	5c 93       	st	X, r21
    25d4:	17 97       	sbiw	r26, 0x07	; 7
    25d6:	08 95       	ret
    25d8:	2f 3f       	cpi	r18, 0xFF	; 255
    25da:	31 05       	cpc	r19, r1
    25dc:	79 f4       	brne	.+30     	; 0x25fc <__unpack_f+0xc2>
    25de:	41 15       	cp	r20, r1
    25e0:	51 05       	cpc	r21, r1
    25e2:	61 05       	cpc	r22, r1
    25e4:	71 05       	cpc	r23, r1
    25e6:	19 f4       	brne	.+6      	; 0x25ee <__unpack_f+0xb4>
    25e8:	84 e0       	ldi	r24, 0x04	; 4
    25ea:	8c 93       	st	X, r24
    25ec:	08 95       	ret
    25ee:	64 ff       	sbrs	r22, 4
    25f0:	03 c0       	rjmp	.+6      	; 0x25f8 <__unpack_f+0xbe>
    25f2:	81 e0       	ldi	r24, 0x01	; 1
    25f4:	8c 93       	st	X, r24
    25f6:	12 c0       	rjmp	.+36     	; 0x261c <__unpack_f+0xe2>
    25f8:	1c 92       	st	X, r1
    25fa:	10 c0       	rjmp	.+32     	; 0x261c <__unpack_f+0xe2>
    25fc:	2f 57       	subi	r18, 0x7F	; 127
    25fe:	30 40       	sbci	r19, 0x00	; 0
    2600:	13 96       	adiw	r26, 0x03	; 3
    2602:	3c 93       	st	X, r19
    2604:	2e 93       	st	-X, r18
    2606:	12 97       	sbiw	r26, 0x02	; 2
    2608:	83 e0       	ldi	r24, 0x03	; 3
    260a:	8c 93       	st	X, r24
    260c:	87 e0       	ldi	r24, 0x07	; 7
    260e:	44 0f       	add	r20, r20
    2610:	55 1f       	adc	r21, r21
    2612:	66 1f       	adc	r22, r22
    2614:	77 1f       	adc	r23, r23
    2616:	8a 95       	dec	r24
    2618:	d1 f7       	brne	.-12     	; 0x260e <__unpack_f+0xd4>
    261a:	70 64       	ori	r23, 0x40	; 64
    261c:	14 96       	adiw	r26, 0x04	; 4
    261e:	4d 93       	st	X+, r20
    2620:	5d 93       	st	X+, r21
    2622:	6d 93       	st	X+, r22
    2624:	7c 93       	st	X, r23
    2626:	17 97       	sbiw	r26, 0x07	; 7
    2628:	08 95       	ret

0000262a <__fpcmp_parts_f>:
    262a:	1f 93       	push	r17
    262c:	dc 01       	movw	r26, r24
    262e:	fb 01       	movw	r30, r22
    2630:	9c 91       	ld	r25, X
    2632:	92 30       	cpi	r25, 0x02	; 2
    2634:	08 f4       	brcc	.+2      	; 0x2638 <__fpcmp_parts_f+0xe>
    2636:	47 c0       	rjmp	.+142    	; 0x26c6 <__fpcmp_parts_f+0x9c>
    2638:	80 81       	ld	r24, Z
    263a:	82 30       	cpi	r24, 0x02	; 2
    263c:	08 f4       	brcc	.+2      	; 0x2640 <__fpcmp_parts_f+0x16>
    263e:	43 c0       	rjmp	.+134    	; 0x26c6 <__fpcmp_parts_f+0x9c>
    2640:	94 30       	cpi	r25, 0x04	; 4
    2642:	51 f4       	brne	.+20     	; 0x2658 <__fpcmp_parts_f+0x2e>
    2644:	11 96       	adiw	r26, 0x01	; 1
    2646:	1c 91       	ld	r17, X
    2648:	84 30       	cpi	r24, 0x04	; 4
    264a:	99 f5       	brne	.+102    	; 0x26b2 <__fpcmp_parts_f+0x88>
    264c:	81 81       	ldd	r24, Z+1	; 0x01
    264e:	68 2f       	mov	r22, r24
    2650:	70 e0       	ldi	r23, 0x00	; 0
    2652:	61 1b       	sub	r22, r17
    2654:	71 09       	sbc	r23, r1
    2656:	3f c0       	rjmp	.+126    	; 0x26d6 <__fpcmp_parts_f+0xac>
    2658:	84 30       	cpi	r24, 0x04	; 4
    265a:	21 f0       	breq	.+8      	; 0x2664 <__fpcmp_parts_f+0x3a>
    265c:	92 30       	cpi	r25, 0x02	; 2
    265e:	31 f4       	brne	.+12     	; 0x266c <__fpcmp_parts_f+0x42>
    2660:	82 30       	cpi	r24, 0x02	; 2
    2662:	b9 f1       	breq	.+110    	; 0x26d2 <__fpcmp_parts_f+0xa8>
    2664:	81 81       	ldd	r24, Z+1	; 0x01
    2666:	88 23       	and	r24, r24
    2668:	89 f1       	breq	.+98     	; 0x26cc <__fpcmp_parts_f+0xa2>
    266a:	2d c0       	rjmp	.+90     	; 0x26c6 <__fpcmp_parts_f+0x9c>
    266c:	11 96       	adiw	r26, 0x01	; 1
    266e:	1c 91       	ld	r17, X
    2670:	11 97       	sbiw	r26, 0x01	; 1
    2672:	82 30       	cpi	r24, 0x02	; 2
    2674:	f1 f0       	breq	.+60     	; 0x26b2 <__fpcmp_parts_f+0x88>
    2676:	81 81       	ldd	r24, Z+1	; 0x01
    2678:	18 17       	cp	r17, r24
    267a:	d9 f4       	brne	.+54     	; 0x26b2 <__fpcmp_parts_f+0x88>
    267c:	12 96       	adiw	r26, 0x02	; 2
    267e:	2d 91       	ld	r18, X+
    2680:	3c 91       	ld	r19, X
    2682:	13 97       	sbiw	r26, 0x03	; 3
    2684:	82 81       	ldd	r24, Z+2	; 0x02
    2686:	93 81       	ldd	r25, Z+3	; 0x03
    2688:	82 17       	cp	r24, r18
    268a:	93 07       	cpc	r25, r19
    268c:	94 f0       	brlt	.+36     	; 0x26b2 <__fpcmp_parts_f+0x88>
    268e:	28 17       	cp	r18, r24
    2690:	39 07       	cpc	r19, r25
    2692:	bc f0       	brlt	.+46     	; 0x26c2 <__fpcmp_parts_f+0x98>
    2694:	14 96       	adiw	r26, 0x04	; 4
    2696:	8d 91       	ld	r24, X+
    2698:	9d 91       	ld	r25, X+
    269a:	0d 90       	ld	r0, X+
    269c:	bc 91       	ld	r27, X
    269e:	a0 2d       	mov	r26, r0
    26a0:	24 81       	ldd	r18, Z+4	; 0x04
    26a2:	35 81       	ldd	r19, Z+5	; 0x05
    26a4:	46 81       	ldd	r20, Z+6	; 0x06
    26a6:	57 81       	ldd	r21, Z+7	; 0x07
    26a8:	28 17       	cp	r18, r24
    26aa:	39 07       	cpc	r19, r25
    26ac:	4a 07       	cpc	r20, r26
    26ae:	5b 07       	cpc	r21, r27
    26b0:	18 f4       	brcc	.+6      	; 0x26b8 <__fpcmp_parts_f+0x8e>
    26b2:	11 23       	and	r17, r17
    26b4:	41 f0       	breq	.+16     	; 0x26c6 <__fpcmp_parts_f+0x9c>
    26b6:	0a c0       	rjmp	.+20     	; 0x26cc <__fpcmp_parts_f+0xa2>
    26b8:	82 17       	cp	r24, r18
    26ba:	93 07       	cpc	r25, r19
    26bc:	a4 07       	cpc	r26, r20
    26be:	b5 07       	cpc	r27, r21
    26c0:	40 f4       	brcc	.+16     	; 0x26d2 <__fpcmp_parts_f+0xa8>
    26c2:	11 23       	and	r17, r17
    26c4:	19 f0       	breq	.+6      	; 0x26cc <__fpcmp_parts_f+0xa2>
    26c6:	61 e0       	ldi	r22, 0x01	; 1
    26c8:	70 e0       	ldi	r23, 0x00	; 0
    26ca:	05 c0       	rjmp	.+10     	; 0x26d6 <__fpcmp_parts_f+0xac>
    26cc:	6f ef       	ldi	r22, 0xFF	; 255
    26ce:	7f ef       	ldi	r23, 0xFF	; 255
    26d0:	02 c0       	rjmp	.+4      	; 0x26d6 <__fpcmp_parts_f+0xac>
    26d2:	60 e0       	ldi	r22, 0x00	; 0
    26d4:	70 e0       	ldi	r23, 0x00	; 0
    26d6:	cb 01       	movw	r24, r22
    26d8:	1f 91       	pop	r17
    26da:	08 95       	ret

000026dc <__udivmodhi4>:
    26dc:	aa 1b       	sub	r26, r26
    26de:	bb 1b       	sub	r27, r27
    26e0:	51 e1       	ldi	r21, 0x11	; 17
    26e2:	07 c0       	rjmp	.+14     	; 0x26f2 <__udivmodhi4_ep>

000026e4 <__udivmodhi4_loop>:
    26e4:	aa 1f       	adc	r26, r26
    26e6:	bb 1f       	adc	r27, r27
    26e8:	a6 17       	cp	r26, r22
    26ea:	b7 07       	cpc	r27, r23
    26ec:	10 f0       	brcs	.+4      	; 0x26f2 <__udivmodhi4_ep>
    26ee:	a6 1b       	sub	r26, r22
    26f0:	b7 0b       	sbc	r27, r23

000026f2 <__udivmodhi4_ep>:
    26f2:	88 1f       	adc	r24, r24
    26f4:	99 1f       	adc	r25, r25
    26f6:	5a 95       	dec	r21
    26f8:	a9 f7       	brne	.-22     	; 0x26e4 <__udivmodhi4_loop>
    26fa:	80 95       	com	r24
    26fc:	90 95       	com	r25
    26fe:	bc 01       	movw	r22, r24
    2700:	cd 01       	movw	r24, r26
    2702:	08 95       	ret

00002704 <__prologue_saves__>:
    2704:	2f 92       	push	r2
    2706:	3f 92       	push	r3
    2708:	4f 92       	push	r4
    270a:	5f 92       	push	r5
    270c:	6f 92       	push	r6
    270e:	7f 92       	push	r7
    2710:	8f 92       	push	r8
    2712:	9f 92       	push	r9
    2714:	af 92       	push	r10
    2716:	bf 92       	push	r11
    2718:	cf 92       	push	r12
    271a:	df 92       	push	r13
    271c:	ef 92       	push	r14
    271e:	ff 92       	push	r15
    2720:	0f 93       	push	r16
    2722:	1f 93       	push	r17
    2724:	cf 93       	push	r28
    2726:	df 93       	push	r29
    2728:	cd b7       	in	r28, 0x3d	; 61
    272a:	de b7       	in	r29, 0x3e	; 62
    272c:	ca 1b       	sub	r28, r26
    272e:	db 0b       	sbc	r29, r27
    2730:	0f b6       	in	r0, 0x3f	; 63
    2732:	f8 94       	cli
    2734:	de bf       	out	0x3e, r29	; 62
    2736:	0f be       	out	0x3f, r0	; 63
    2738:	cd bf       	out	0x3d, r28	; 61
    273a:	09 94       	ijmp

0000273c <__epilogue_restores__>:
    273c:	2a 88       	ldd	r2, Y+18	; 0x12
    273e:	39 88       	ldd	r3, Y+17	; 0x11
    2740:	48 88       	ldd	r4, Y+16	; 0x10
    2742:	5f 84       	ldd	r5, Y+15	; 0x0f
    2744:	6e 84       	ldd	r6, Y+14	; 0x0e
    2746:	7d 84       	ldd	r7, Y+13	; 0x0d
    2748:	8c 84       	ldd	r8, Y+12	; 0x0c
    274a:	9b 84       	ldd	r9, Y+11	; 0x0b
    274c:	aa 84       	ldd	r10, Y+10	; 0x0a
    274e:	b9 84       	ldd	r11, Y+9	; 0x09
    2750:	c8 84       	ldd	r12, Y+8	; 0x08
    2752:	df 80       	ldd	r13, Y+7	; 0x07
    2754:	ee 80       	ldd	r14, Y+6	; 0x06
    2756:	fd 80       	ldd	r15, Y+5	; 0x05
    2758:	0c 81       	ldd	r16, Y+4	; 0x04
    275a:	1b 81       	ldd	r17, Y+3	; 0x03
    275c:	aa 81       	ldd	r26, Y+2	; 0x02
    275e:	b9 81       	ldd	r27, Y+1	; 0x01
    2760:	ce 0f       	add	r28, r30
    2762:	d1 1d       	adc	r29, r1
    2764:	0f b6       	in	r0, 0x3f	; 63
    2766:	f8 94       	cli
    2768:	de bf       	out	0x3e, r29	; 62
    276a:	0f be       	out	0x3f, r0	; 63
    276c:	cd bf       	out	0x3d, r28	; 61
    276e:	ed 01       	movw	r28, r26
    2770:	08 95       	ret

00002772 <_exit>:
    2772:	f8 94       	cli

00002774 <__stop_program>:
    2774:	ff cf       	rjmp	.-2      	; 0x2774 <__stop_program>
