Archive member included because of file (symbol)

c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_exit.o)
                              c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm32.o (exit)
c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

uartTxInPtr         0x1               uart.o
uartRxOutPtr        0x1               uart.o
uartRxBuffer        0x3c              uart.o
uartRxSize          0x1               uart.o
uartTxSize          0x1               uart.o
uartRxInPtr         0x1               uart.o
uartTxOutPtr        0x1               uart.o
cPVitesseValue      0x1               cmdParser.o
cPAngleValue        0x1               cmdParser.o
uartTxBuffer        0x3c              uart.o
cPCmdValue          0x1               cmdParser.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm32.o
LOAD main.o
LOAD uart.o
LOAD dbgCmd.o
LOAD cmdParser.o
LOAD c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a
LOAD c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x4a6
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm32.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092       0x20 main.o
                0x00000092                main
 .text          0x000000b2      0x2ee uart.o
                0x00000108                uartTxRoutine
                0x00000226                uartSendByte
                0x000002d4                uartGetRxSize
                0x000000b2                uartInitBuffers
                0x0000034c                __vector_13
                0x0000015e                uartRxRoutine
                0x000000d8                uartInit
                0x0000027a                uartGetByte
                0x000002f8                __vector_15
                0x000002e6                uartGetTxSize
                0x000001a2                uartSendString
 .text          0x000003a0       0x2c dbgCmd.o
                0x000003a0                dbgSendString
 .text          0x000003cc       0xd6 cmdParser.o
                0x000003cc                cPMainCmdParser
 .text          0x000004a2        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_exit.o)
 .text          0x000004a2        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_copy_data.o)
 .text          0x000004a2        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_clear_bss.o)
                0x000004a2                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000004a2        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000004a2        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x000004a2        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_clear_bss.o)
                0x000004a2                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000004a2        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_exit.o)
                0x000004a2                exit
                0x000004a2                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000004a2        0x4 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000004a6                _etext = .

.data           0x00800060        0x0 load address 0x000004a6
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 main.o
 .data          0x00800060        0x0 uart.o
 .data          0x00800060        0x0 dbgCmd.o
 .data          0x00800060        0x0 cmdParser.o
 .data          0x00800060        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060       0x82
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800060        0x0 main.o
 .bss           0x00800060        0x0 uart.o
 .bss           0x00800060        0x0 dbgCmd.o
 .bss           0x00800060        0x1 cmdParser.o
                0x00800060                cPState
 .bss           0x00800061        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_exit.o)
 .bss           0x00800061        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_copy_data.o)
 .bss           0x00800061        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800061       0x7e uart.o
                0x00800061                uartTxInPtr
                0x00800062                uartRxOutPtr
                0x00800063                uartRxBuffer
                0x0080009f                uartRxSize
                0x008000a0                uartTxSize
                0x008000a1                uartRxInPtr
                0x008000a2                uartTxOutPtr
                0x008000a3                uartTxBuffer
 COMMON         0x008000df        0x3 cmdParser.o
                0x008000df                cPVitesseValue
                0x008000e0                cPAngleValue
                0x008000e1                cPCmdValue
                0x008000e2                PROVIDE (__bss_end, .)
                0x000004a6                __data_load_start = LOADADDR (.data)
                0x000004a6                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008000e2        0x0
                0x008000e2                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008000e2                PROVIDE (__noinit_end, .)
                0x008000e2                _end = .
                0x008000e2                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x80
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 main.o
 .debug_aranges
                0x00000020       0x20 uart.o
 .debug_aranges
                0x00000040       0x20 dbgCmd.o
 .debug_aranges
                0x00000060       0x20 cmdParser.o

.debug_pubnames
                0x00000000      0x1f5
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x1b main.o
 .debug_pubnames
                0x0000001b      0x151 uart.o
 .debug_pubnames
                0x0000016c       0x24 dbgCmd.o
 .debug_pubnames
                0x00000190       0x65 cmdParser.o

.debug_info     0x00000000      0x43c
 *(.debug_info)
 .debug_info    0x00000000       0x83 main.o
 .debug_info    0x00000083      0x236 uart.o
 .debug_info    0x000002b9       0x8b dbgCmd.o
 .debug_info    0x00000344       0xf8 cmdParser.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x20a
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0x50 main.o
 .debug_abbrev  0x00000050       0xe8 uart.o
 .debug_abbrev  0x00000138       0x59 dbgCmd.o
 .debug_abbrev  0x00000191       0x79 cmdParser.o

.debug_line     0x00000000      0x4b1
 *(.debug_line)
 .debug_line    0x00000000       0x76 main.o
 .debug_line    0x00000076      0x2c0 uart.o
 .debug_line    0x00000336       0x78 dbgCmd.o
 .debug_line    0x000003ae      0x103 cmdParser.o

.debug_frame    0x00000000      0x120
 *(.debug_frame)
 .debug_frame   0x00000000       0x20 main.o
 .debug_frame   0x00000020       0xc0 uart.o
 .debug_frame   0x000000e0       0x20 dbgCmd.o
 .debug_frame   0x00000100       0x20 cmdParser.o

.debug_str      0x00000000      0x23f
 *(.debug_str)
 .debug_str     0x00000000       0x62 main.o
                                 0x96 (size before relaxing)
 .debug_str     0x00000062      0x114 uart.o
                                0x19b (size before relaxing)
 .debug_str     0x00000176       0x1a dbgCmd.o
                                 0xa1 (size before relaxing)
 .debug_str     0x00000190       0xaf cmdParser.o
                                0x136 (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(Robot.elf elf32-avr)
LOAD linker stubs
