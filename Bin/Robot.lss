
Robot.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000026a4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000012a  00800060  000026a4  00002738  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000000c6  0080018a  0080018a  00002862  2**0
                  ALLOC
  3 .debug_aranges 000000e0  00000000  00000000  00002862  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000396  00000000  00000000  00002942  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b00  00000000  00000000  00002cd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000047a  00000000  00000000  000037d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000098a  00000000  00000000  00003c52  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001d0  00000000  00000000  000045dc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003dd  00000000  00000000  000047ac  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 f5 02 	jmp	0x5ea	; 0x5ea <__vector_9>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 af 01 	jmp	0x35e	; 0x35e <__vector_13>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 85 01 	jmp	0x30a	; 0x30a <__vector_15>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 ea       	ldi	r30, 0xA4	; 164
      68:	f6 e2       	ldi	r31, 0x26	; 38
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	aa 38       	cpi	r26, 0x8A	; 138
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	12 e0       	ldi	r17, 0x02	; 2
      78:	aa e8       	ldi	r26, 0x8A	; 138
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a0 35       	cpi	r26, 0x50	; 80
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 49 00 	call	0x92	; 0x92 <main>
      8a:	0c 94 50 13 	jmp	0x26a0	; 0x26a0 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
#include "pwm.h"



int main( void )
{
      92:	df 93       	push	r29
      94:	cf 93       	push	r28
      96:	0f 92       	push	r0
      98:	cd b7       	in	r28, 0x3d	; 61
      9a:	de b7       	in	r29, 0x3e	; 62
	tREG08 portBREG;
	hdInit();
      9c:	0e 94 9f 02 	call	0x53e	; 0x53e <hdInit>
	pwmInit();
      a0:	0e 94 b1 02 	call	0x562	; 0x562 <pwmInit>
	dbgSendRobotString("Reset");
      a4:	80 e6       	ldi	r24, 0x60	; 96
      a6:	90 e0       	ldi	r25, 0x00	; 0
      a8:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <dbgSendRobotString>
	portBREG.byte=0xff;
      ac:	8f ef       	ldi	r24, 0xFF	; 255
      ae:	89 83       	std	Y+1, r24	; 0x01
	portBREG.bit.b0=0;
      b0:	89 81       	ldd	r24, Y+1	; 0x01
      b2:	8e 7f       	andi	r24, 0xFE	; 254
      b4:	89 83       	std	Y+1, r24	; 0x01
	PORTB=portBREG.byte;
      b6:	e8 e3       	ldi	r30, 0x38	; 56
      b8:	f0 e0       	ldi	r31, 0x00	; 0
      ba:	89 81       	ldd	r24, Y+1	; 0x01
      bc:	80 83       	st	Z, r24

	while(1)
	{
		cPMainCmdParser();
      be:	0e 94 0d 02 	call	0x41a	; 0x41a <cPMainCmdParser>
      c2:	fd cf       	rjmp	.-6      	; 0xbe <main+0x2c>

000000c4 <uartInitBuffers>:

/*
 Initialisation des variables pour les FIFOS
*/
void uartInitBuffers(void)
{
      c4:	df 93       	push	r29
      c6:	cf 93       	push	r28
      c8:	cd b7       	in	r28, 0x3d	; 61
      ca:	de b7       	in	r29, 0x3e	; 62
	uartRxInPtr		=0;
      cc:	10 92 10 02 	sts	0x0210, r1
	uartRxOutPtr	=0;
      d0:	10 92 d1 01 	sts	0x01D1, r1
	uartTxInPtr		=0;
      d4:	10 92 d0 01 	sts	0x01D0, r1
	uartTxOutPtr	=0;   
      d8:	10 92 11 02 	sts	0x0211, r1
	uartTxSize		=0;
      dc:	10 92 0f 02 	sts	0x020F, r1
    uartRxSize		=0; 
      e0:	10 92 0e 02 	sts	0x020E, r1
}
      e4:	cf 91       	pop	r28
      e6:	df 91       	pop	r29
      e8:	08 95       	ret

000000ea <uartInit>:

/*
 Initialisation du Uart
*/
void uartInit(void)
{
      ea:	df 93       	push	r29
      ec:	cf 93       	push	r28
      ee:	cd b7       	in	r28, 0x3d	; 61
      f0:	de b7       	in	r29, 0x3e	; 62
    /* configure asynchronous operation, no parity, 1 stop bit, 8 data bits, Tx on rising edge */
    UCSRC = (1<<URSEL)|(0<<UMSEL)|(0<<UPM1)|(0<<UPM0)|(0<<USBS)|(1<<UCSZ1)|(1<<UCSZ0)|(0<<UCPOL);       
      f2:	e0 e4       	ldi	r30, 0x40	; 64
      f4:	f0 e0       	ldi	r31, 0x00	; 0
      f6:	86 e8       	ldi	r24, 0x86	; 134
      f8:	80 83       	st	Z, r24
    /* enable RxD/TxD and ints */
    UCSRB = (1<<RXCIE)|(1<<TXCIE)|(1<<RXEN)|(1<<TXEN)|(0<<UCSZ2);       
      fa:	ea e2       	ldi	r30, 0x2A	; 42
      fc:	f0 e0       	ldi	r31, 0x00	; 0
      fe:	88 ed       	ldi	r24, 0xD8	; 216
     100:	80 83       	st	Z, r24
    /* set baud rate */
    UBRRH = (U8)(UART_BAUD_SELECT >> 8);          
     102:	e0 e4       	ldi	r30, 0x40	; 64
     104:	f0 e0       	ldi	r31, 0x00	; 0
     106:	10 82       	st	Z, r1
    UBRRL = (U8)(UART_BAUD_SELECT & 0x00FF); 
     108:	e9 e2       	ldi	r30, 0x29	; 41
     10a:	f0 e0       	ldi	r31, 0x00	; 0
     10c:	87 e6       	ldi	r24, 0x67	; 103
     10e:	80 83       	st	Z, r24
	//init les variables des buffers 
	uartInitBuffers();   
     110:	0e 94 62 00 	call	0xc4	; 0xc4 <uartInitBuffers>
}
     114:	cf 91       	pop	r28
     116:	df 91       	pop	r29
     118:	08 95       	ret

0000011a <uartTxRoutine>:

/*
 routine d'envoi des data au uart
*/
void uartTxRoutine(void)
{
     11a:	df 93       	push	r29
     11c:	cf 93       	push	r28
     11e:	cd b7       	in	r28, 0x3d	; 61
     120:	de b7       	in	r29, 0x3e	; 62
	if(uartTxSize)
     122:	80 91 0f 02 	lds	r24, 0x020F
     126:	88 23       	and	r24, r24
     128:	e1 f0       	breq	.+56     	; 0x162 <uartTxRoutine+0x48>
	{
		UDR = uartTxBuffer[uartTxOutPtr];      
     12a:	ac e2       	ldi	r26, 0x2C	; 44
     12c:	b0 e0       	ldi	r27, 0x00	; 0
     12e:	80 91 11 02 	lds	r24, 0x0211
     132:	88 2f       	mov	r24, r24
     134:	90 e0       	ldi	r25, 0x00	; 0
     136:	fc 01       	movw	r30, r24
     138:	ee 5e       	subi	r30, 0xEE	; 238
     13a:	fd 4f       	sbci	r31, 0xFD	; 253
     13c:	80 81       	ld	r24, Z
     13e:	8c 93       	st	X, r24
		uartTxOutPtr++;
     140:	80 91 11 02 	lds	r24, 0x0211
     144:	8f 5f       	subi	r24, 0xFF	; 255
     146:	80 93 11 02 	sts	0x0211, r24
		uartTxSize--;
     14a:	80 91 0f 02 	lds	r24, 0x020F
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	80 93 0f 02 	sts	0x020F, r24
		//remet à zéro si jamais la taille du buffer est dépassé
		if(uartTxOutPtr>(UART_TX_BUFFER_SIZE-1))
     154:	80 91 11 02 	lds	r24, 0x0211
     158:	8c 33       	cpi	r24, 0x3C	; 60
     15a:	38 f0       	brcs	.+14     	; 0x16a <uartTxRoutine+0x50>
	 		uartTxOutPtr=0;
     15c:	10 92 11 02 	sts	0x0211, r1
     160:	04 c0       	rjmp	.+8      	; 0x16a <uartTxRoutine+0x50>
	}
	else
	{
		uartTxOutPtr=0;
     162:	10 92 11 02 	sts	0x0211, r1
		uartTxInPtr=0;
     166:	10 92 d0 01 	sts	0x01D0, r1
	}
		
}
     16a:	cf 91       	pop	r28
     16c:	df 91       	pop	r29
     16e:	08 95       	ret

00000170 <uartRxRoutine>:

/*
 routine de reception des data du uart
*/
void uartRxRoutine(void)
{
     170:	df 93       	push	r29
     172:	cf 93       	push	r28
     174:	cd b7       	in	r28, 0x3d	; 61
     176:	de b7       	in	r29, 0x3e	; 62
	uartRxBuffer[uartRxInPtr] = UDR;        
     178:	80 91 10 02 	lds	r24, 0x0210
     17c:	88 2f       	mov	r24, r24
     17e:	90 e0       	ldi	r25, 0x00	; 0
     180:	ec e2       	ldi	r30, 0x2C	; 44
     182:	f0 e0       	ldi	r31, 0x00	; 0
     184:	20 81       	ld	r18, Z
     186:	fc 01       	movw	r30, r24
     188:	ee 52       	subi	r30, 0x2E	; 46
     18a:	fe 4f       	sbci	r31, 0xFE	; 254
     18c:	20 83       	st	Z, r18
	uartRxInPtr++;
     18e:	80 91 10 02 	lds	r24, 0x0210
     192:	8f 5f       	subi	r24, 0xFF	; 255
     194:	80 93 10 02 	sts	0x0210, r24
	uartRxSize++;
     198:	80 91 0e 02 	lds	r24, 0x020E
     19c:	8f 5f       	subi	r24, 0xFF	; 255
     19e:	80 93 0e 02 	sts	0x020E, r24
	//remet à zéro si jamais la taille du buffer est dépassé
	if(uartRxInPtr>(UART_RX_BUFFER_SIZE-1))
     1a2:	80 91 10 02 	lds	r24, 0x0210
     1a6:	8c 33       	cpi	r24, 0x3C	; 60
     1a8:	10 f0       	brcs	.+4      	; 0x1ae <uartRxRoutine+0x3e>
			uartRxInPtr=0;
     1aa:	10 92 10 02 	sts	0x0210, r1
}
     1ae:	cf 91       	pop	r28
     1b0:	df 91       	pop	r29
     1b2:	08 95       	ret

000001b4 <uartSendString>:

/*
 envoi une chaine de caractère avec caractere de fin
*/ 
void uartSendString(U8 *buf)
{ 
     1b4:	df 93       	push	r29
     1b6:	cf 93       	push	r28
     1b8:	00 d0       	rcall	.+0      	; 0x1ba <uartSendString+0x6>
     1ba:	0f 92       	push	r0
     1bc:	cd b7       	in	r28, 0x3d	; 61
     1be:	de b7       	in	r29, 0x3e	; 62
     1c0:	9b 83       	std	Y+3, r25	; 0x03
     1c2:	8a 83       	std	Y+2, r24	; 0x02
	U8 stringSize=0;
     1c4:	19 82       	std	Y+1, r1	; 0x01
     1c6:	23 c0       	rjmp	.+70     	; 0x20e <uartSendString+0x5a>

	//loop tant que le caractere de fin n'est pas trouvé
	while((*buf!=UART_END_OF_STRING_CHAR) && (stringSize<UART_MAX_SIZE_STRING))
	{
		uartTxBuffer[uartTxInPtr]=*buf;
     1c8:	80 91 d0 01 	lds	r24, 0x01D0
     1cc:	88 2f       	mov	r24, r24
     1ce:	90 e0       	ldi	r25, 0x00	; 0
     1d0:	ea 81       	ldd	r30, Y+2	; 0x02
     1d2:	fb 81       	ldd	r31, Y+3	; 0x03
     1d4:	20 81       	ld	r18, Z
     1d6:	fc 01       	movw	r30, r24
     1d8:	ee 5e       	subi	r30, 0xEE	; 238
     1da:	fd 4f       	sbci	r31, 0xFD	; 253
     1dc:	20 83       	st	Z, r18

		buf++;
     1de:	8a 81       	ldd	r24, Y+2	; 0x02
     1e0:	9b 81       	ldd	r25, Y+3	; 0x03
     1e2:	01 96       	adiw	r24, 0x01	; 1
     1e4:	9b 83       	std	Y+3, r25	; 0x03
     1e6:	8a 83       	std	Y+2, r24	; 0x02
		uartTxInPtr++;
     1e8:	80 91 d0 01 	lds	r24, 0x01D0
     1ec:	8f 5f       	subi	r24, 0xFF	; 255
     1ee:	80 93 d0 01 	sts	0x01D0, r24
		uartTxSize++;
     1f2:	80 91 0f 02 	lds	r24, 0x020F
     1f6:	8f 5f       	subi	r24, 0xFF	; 255
     1f8:	80 93 0f 02 	sts	0x020F, r24
		stringSize++;
     1fc:	89 81       	ldd	r24, Y+1	; 0x01
     1fe:	8f 5f       	subi	r24, 0xFF	; 255
     200:	89 83       	std	Y+1, r24	; 0x01

		//remet à zéro uartTxInPtr si  dépasse la taille du buffer 
		if(uartTxInPtr>(UART_TX_BUFFER_SIZE-1))
     202:	80 91 d0 01 	lds	r24, 0x01D0
     206:	8c 33       	cpi	r24, 0x3C	; 60
     208:	10 f0       	brcs	.+4      	; 0x20e <uartSendString+0x5a>
			uartTxInPtr=0;		
     20a:	10 92 d0 01 	sts	0x01D0, r1
void uartSendString(U8 *buf)
{ 
	U8 stringSize=0;

	//loop tant que le caractere de fin n'est pas trouvé
	while((*buf!=UART_END_OF_STRING_CHAR) && (stringSize<UART_MAX_SIZE_STRING))
     20e:	ea 81       	ldd	r30, Y+2	; 0x02
     210:	fb 81       	ldd	r31, Y+3	; 0x03
     212:	80 81       	ld	r24, Z
     214:	88 23       	and	r24, r24
     216:	19 f0       	breq	.+6      	; 0x21e <uartSendString+0x6a>
     218:	89 81       	ldd	r24, Y+1	; 0x01
     21a:	8c 33       	cpi	r24, 0x3C	; 60
     21c:	a8 f2       	brcs	.-86     	; 0x1c8 <uartSendString+0x14>
		if(uartTxInPtr>(UART_TX_BUFFER_SIZE-1))
			uartTxInPtr=0;		
	}

	//envoie le premier byte pour démarrer l'interruption si UDRE est à 1
	if(UCSRA&&(1<<UDRE))
     21e:	eb e2       	ldi	r30, 0x2B	; 43
     220:	f0 e0       	ldi	r31, 0x00	; 0
     222:	80 81       	ld	r24, Z
     224:	88 23       	and	r24, r24
     226:	11 f0       	breq	.+4      	; 0x22c <uartSendString+0x78>
   		 uartTxRoutine();
     228:	0e 94 8d 00 	call	0x11a	; 0x11a <uartTxRoutine>

}
     22c:	0f 90       	pop	r0
     22e:	0f 90       	pop	r0
     230:	0f 90       	pop	r0
     232:	cf 91       	pop	r28
     234:	df 91       	pop	r29
     236:	08 95       	ret

00000238 <uartSendByte>:

/*
 envoi un byte à la fois sur TX
*/
void uartSendByte(U8 byte)
{ 
     238:	df 93       	push	r29
     23a:	cf 93       	push	r28
     23c:	0f 92       	push	r0
     23e:	cd b7       	in	r28, 0x3d	; 61
     240:	de b7       	in	r29, 0x3e	; 62
     242:	89 83       	std	Y+1, r24	; 0x01
	
	uartTxBuffer[uartTxInPtr]=byte;
     244:	80 91 d0 01 	lds	r24, 0x01D0
     248:	88 2f       	mov	r24, r24
     24a:	90 e0       	ldi	r25, 0x00	; 0
     24c:	fc 01       	movw	r30, r24
     24e:	ee 5e       	subi	r30, 0xEE	; 238
     250:	fd 4f       	sbci	r31, 0xFD	; 253
     252:	89 81       	ldd	r24, Y+1	; 0x01
     254:	80 83       	st	Z, r24
	uartTxInPtr++;
     256:	80 91 d0 01 	lds	r24, 0x01D0
     25a:	8f 5f       	subi	r24, 0xFF	; 255
     25c:	80 93 d0 01 	sts	0x01D0, r24
	uartTxSize++;
     260:	80 91 0f 02 	lds	r24, 0x020F
     264:	8f 5f       	subi	r24, 0xFF	; 255
     266:	80 93 0f 02 	sts	0x020F, r24
	if(uartTxInPtr>(UART_TX_BUFFER_SIZE-1))
     26a:	80 91 d0 01 	lds	r24, 0x01D0
     26e:	8c 33       	cpi	r24, 0x3C	; 60
     270:	10 f0       	brcs	.+4      	; 0x276 <uartSendByte+0x3e>
		uartTxInPtr=0;
     272:	10 92 d0 01 	sts	0x01D0, r1

	//envoie le premier byte pour démarrer l'interruption si UDRE est à 1
   	if(UCSRA&&(1<<UDRE))
     276:	eb e2       	ldi	r30, 0x2B	; 43
     278:	f0 e0       	ldi	r31, 0x00	; 0
     27a:	80 81       	ld	r24, Z
     27c:	88 23       	and	r24, r24
     27e:	11 f0       	breq	.+4      	; 0x284 <uartSendByte+0x4c>
   		uartTxRoutine();
     280:	0e 94 8d 00 	call	0x11a	; 0x11a <uartTxRoutine>
	
}
     284:	0f 90       	pop	r0
     286:	cf 91       	pop	r28
     288:	df 91       	pop	r29
     28a:	08 95       	ret

0000028c <uartGetByte>:

/*
	extrait un byte du FIFO de reception
*/
U8 uartGetByte(void)
{ 
     28c:	df 93       	push	r29
     28e:	cf 93       	push	r28
     290:	0f 92       	push	r0
     292:	cd b7       	in	r28, 0x3d	; 61
     294:	de b7       	in	r29, 0x3e	; 62
	U8 rxByte=0;
     296:	19 82       	std	Y+1, r1	; 0x01
	if(uartRxSize)
     298:	80 91 0e 02 	lds	r24, 0x020E
     29c:	88 23       	and	r24, r24
     29e:	d1 f0       	breq	.+52     	; 0x2d4 <uartGetByte+0x48>
	{		
		rxByte=uartRxBuffer[uartRxOutPtr];
     2a0:	80 91 d1 01 	lds	r24, 0x01D1
     2a4:	88 2f       	mov	r24, r24
     2a6:	90 e0       	ldi	r25, 0x00	; 0
     2a8:	fc 01       	movw	r30, r24
     2aa:	ee 52       	subi	r30, 0x2E	; 46
     2ac:	fe 4f       	sbci	r31, 0xFE	; 254
     2ae:	80 81       	ld	r24, Z
     2b0:	89 83       	std	Y+1, r24	; 0x01
		uartRxOutPtr++;
     2b2:	80 91 d1 01 	lds	r24, 0x01D1
     2b6:	8f 5f       	subi	r24, 0xFF	; 255
     2b8:	80 93 d1 01 	sts	0x01D1, r24
		//remet à zéro si dépasse la taille du buffer 
		if(uartRxOutPtr>(UART_RX_BUFFER_SIZE-1))
     2bc:	80 91 d1 01 	lds	r24, 0x01D1
     2c0:	8c 33       	cpi	r24, 0x3C	; 60
     2c2:	10 f0       	brcs	.+4      	; 0x2c8 <uartGetByte+0x3c>
			uartRxOutPtr=0;
     2c4:	10 92 d1 01 	sts	0x01D1, r1
		uartRxSize--;
     2c8:	80 91 0e 02 	lds	r24, 0x020E
     2cc:	81 50       	subi	r24, 0x01	; 1
     2ce:	80 93 0e 02 	sts	0x020E, r24
     2d2:	04 c0       	rjmp	.+8      	; 0x2dc <uartGetByte+0x50>
	}
	else
	{
		uartRxOutPtr=0;
     2d4:	10 92 d1 01 	sts	0x01D1, r1
		uartRxInPtr=0;
     2d8:	10 92 10 02 	sts	0x0210, r1
	}
	return rxByte;		
     2dc:	89 81       	ldd	r24, Y+1	; 0x01

}
     2de:	0f 90       	pop	r0
     2e0:	cf 91       	pop	r28
     2e2:	df 91       	pop	r29
     2e4:	08 95       	ret

000002e6 <uartGetRxSize>:

/*
	retourne le nb de byte disponible dans le FIFO de reception
*/
U8 uartGetRxSize(void)
{
     2e6:	df 93       	push	r29
     2e8:	cf 93       	push	r28
     2ea:	cd b7       	in	r28, 0x3d	; 61
     2ec:	de b7       	in	r29, 0x3e	; 62
	return uartRxSize;
     2ee:	80 91 0e 02 	lds	r24, 0x020E
}
     2f2:	cf 91       	pop	r28
     2f4:	df 91       	pop	r29
     2f6:	08 95       	ret

000002f8 <uartGetTxSize>:

/*
	retourne le nb de byte dans le buffer d'envoi
*/
U8 uartGetTxSize(void)
{
     2f8:	df 93       	push	r29
     2fa:	cf 93       	push	r28
     2fc:	cd b7       	in	r28, 0x3d	; 61
     2fe:	de b7       	in	r29, 0x3e	; 62
	return uartTxSize;
     300:	80 91 0f 02 	lds	r24, 0x020F
}
     304:	cf 91       	pop	r28
     306:	df 91       	pop	r29
     308:	08 95       	ret

0000030a <__vector_15>:


//--INTERRUPTS LOOPS--
ISR(USART_TXC_vect)
/* signal handler for uart txd ready interrupt */
{
     30a:	1f 92       	push	r1
     30c:	0f 92       	push	r0
     30e:	0f b6       	in	r0, 0x3f	; 63
     310:	0f 92       	push	r0
     312:	11 24       	eor	r1, r1
     314:	2f 93       	push	r18
     316:	3f 93       	push	r19
     318:	4f 93       	push	r20
     31a:	5f 93       	push	r21
     31c:	6f 93       	push	r22
     31e:	7f 93       	push	r23
     320:	8f 93       	push	r24
     322:	9f 93       	push	r25
     324:	af 93       	push	r26
     326:	bf 93       	push	r27
     328:	ef 93       	push	r30
     32a:	ff 93       	push	r31
     32c:	df 93       	push	r29
     32e:	cf 93       	push	r28
     330:	cd b7       	in	r28, 0x3d	; 61
     332:	de b7       	in	r29, 0x3e	; 62
    uartTxRoutine();
     334:	0e 94 8d 00 	call	0x11a	; 0x11a <uartTxRoutine>
}
     338:	cf 91       	pop	r28
     33a:	df 91       	pop	r29
     33c:	ff 91       	pop	r31
     33e:	ef 91       	pop	r30
     340:	bf 91       	pop	r27
     342:	af 91       	pop	r26
     344:	9f 91       	pop	r25
     346:	8f 91       	pop	r24
     348:	7f 91       	pop	r23
     34a:	6f 91       	pop	r22
     34c:	5f 91       	pop	r21
     34e:	4f 91       	pop	r20
     350:	3f 91       	pop	r19
     352:	2f 91       	pop	r18
     354:	0f 90       	pop	r0
     356:	0f be       	out	0x3f, r0	; 63
     358:	0f 90       	pop	r0
     35a:	1f 90       	pop	r1
     35c:	18 95       	reti

0000035e <__vector_13>:


ISR(USART_RXC_vect)
/* signal handler for receive complete interrupt */
{
     35e:	1f 92       	push	r1
     360:	0f 92       	push	r0
     362:	0f b6       	in	r0, 0x3f	; 63
     364:	0f 92       	push	r0
     366:	11 24       	eor	r1, r1
     368:	2f 93       	push	r18
     36a:	3f 93       	push	r19
     36c:	4f 93       	push	r20
     36e:	5f 93       	push	r21
     370:	6f 93       	push	r22
     372:	7f 93       	push	r23
     374:	8f 93       	push	r24
     376:	9f 93       	push	r25
     378:	af 93       	push	r26
     37a:	bf 93       	push	r27
     37c:	ef 93       	push	r30
     37e:	ff 93       	push	r31
     380:	df 93       	push	r29
     382:	cf 93       	push	r28
     384:	cd b7       	in	r28, 0x3d	; 61
     386:	de b7       	in	r29, 0x3e	; 62
	uartRxRoutine();   
     388:	0e 94 b8 00 	call	0x170	; 0x170 <uartRxRoutine>
}
     38c:	cf 91       	pop	r28
     38e:	df 91       	pop	r29
     390:	ff 91       	pop	r31
     392:	ef 91       	pop	r30
     394:	bf 91       	pop	r27
     396:	af 91       	pop	r26
     398:	9f 91       	pop	r25
     39a:	8f 91       	pop	r24
     39c:	7f 91       	pop	r23
     39e:	6f 91       	pop	r22
     3a0:	5f 91       	pop	r21
     3a2:	4f 91       	pop	r20
     3a4:	3f 91       	pop	r19
     3a6:	2f 91       	pop	r18
     3a8:	0f 90       	pop	r0
     3aa:	0f be       	out	0x3f, r0	; 63
     3ac:	0f 90       	pop	r0
     3ae:	1f 90       	pop	r1
     3b0:	18 95       	reti

000003b2 <dbgSendDbgString>:




void dbgSendDbgString(U8 *buf)
{	
     3b2:	df 93       	push	r29
     3b4:	cf 93       	push	r28
     3b6:	00 d0       	rcall	.+0      	; 0x3b8 <dbgSendDbgString+0x6>
     3b8:	cd b7       	in	r28, 0x3d	; 61
     3ba:	de b7       	in	r29, 0x3e	; 62
     3bc:	9a 83       	std	Y+2, r25	; 0x02
     3be:	89 83       	std	Y+1, r24	; 0x01
		//SEND START BYTE
		uartSendByte(0xFE);
     3c0:	8e ef       	ldi	r24, 0xFE	; 254
     3c2:	0e 94 1c 01 	call	0x238	; 0x238 <uartSendByte>
		//SEND STRINGS
		uartSendString("Debug: ");
     3c6:	86 e6       	ldi	r24, 0x66	; 102
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	0e 94 da 00 	call	0x1b4	; 0x1b4 <uartSendString>
		uartSendString(buf);
     3ce:	89 81       	ldd	r24, Y+1	; 0x01
     3d0:	9a 81       	ldd	r25, Y+2	; 0x02
     3d2:	0e 94 da 00 	call	0x1b4	; 0x1b4 <uartSendString>
		//SEND END BYTE
		uartSendByte(0xFF);
     3d6:	8f ef       	ldi	r24, 0xFF	; 255
     3d8:	0e 94 1c 01 	call	0x238	; 0x238 <uartSendByte>
}
     3dc:	0f 90       	pop	r0
     3de:	0f 90       	pop	r0
     3e0:	cf 91       	pop	r28
     3e2:	df 91       	pop	r29
     3e4:	08 95       	ret

000003e6 <dbgSendRobotString>:

void dbgSendRobotString(U8 *buf)
{	
     3e6:	df 93       	push	r29
     3e8:	cf 93       	push	r28
     3ea:	00 d0       	rcall	.+0      	; 0x3ec <dbgSendRobotString+0x6>
     3ec:	cd b7       	in	r28, 0x3d	; 61
     3ee:	de b7       	in	r29, 0x3e	; 62
     3f0:	9a 83       	std	Y+2, r25	; 0x02
     3f2:	89 83       	std	Y+1, r24	; 0x01
		//SEND START BYTE
		uartSendByte(0xFE);
     3f4:	8e ef       	ldi	r24, 0xFE	; 254
     3f6:	0e 94 1c 01 	call	0x238	; 0x238 <uartSendByte>
		//SEND STRINGS
		uartSendString("Robot: ");
     3fa:	8e e6       	ldi	r24, 0x6E	; 110
     3fc:	90 e0       	ldi	r25, 0x00	; 0
     3fe:	0e 94 da 00 	call	0x1b4	; 0x1b4 <uartSendString>
		uartSendString(buf);
     402:	89 81       	ldd	r24, Y+1	; 0x01
     404:	9a 81       	ldd	r25, Y+2	; 0x02
     406:	0e 94 da 00 	call	0x1b4	; 0x1b4 <uartSendString>
		//SEND END BYTE
		uartSendByte(0xFF);
     40a:	8f ef       	ldi	r24, 0xFF	; 255
     40c:	0e 94 1c 01 	call	0x238	; 0x238 <uartSendByte>
}
     410:	0f 90       	pop	r0
     412:	0f 90       	pop	r0
     414:	cf 91       	pop	r28
     416:	df 91       	pop	r29
     418:	08 95       	ret

0000041a <cPMainCmdParser>:




void cPMainCmdParser(void)
{
     41a:	df 93       	push	r29
     41c:	cf 93       	push	r28
     41e:	00 d0       	rcall	.+0      	; 0x420 <cPMainCmdParser+0x6>
     420:	cd b7       	in	r28, 0x3d	; 61
     422:	de b7       	in	r29, 0x3e	; 62

	if(uartGetRxSize())
     424:	0e 94 73 01 	call	0x2e6	; 0x2e6 <uartGetRxSize>
     428:	88 23       	and	r24, r24
     42a:	09 f4       	brne	.+2      	; 0x42e <cPMainCmdParser+0x14>
     42c:	83 c0       	rjmp	.+262    	; 0x534 <cPMainCmdParser+0x11a>
	{
		data=uartGetByte();
     42e:	0e 94 46 01 	call	0x28c	; 0x28c <uartGetByte>
     432:	80 93 8e 01 	sts	0x018E, r24
 	  	switch(cPState)
     436:	80 91 8a 01 	lds	r24, 0x018A
     43a:	28 2f       	mov	r18, r24
     43c:	30 e0       	ldi	r19, 0x00	; 0
     43e:	3a 83       	std	Y+2, r19	; 0x02
     440:	29 83       	std	Y+1, r18	; 0x01
     442:	89 81       	ldd	r24, Y+1	; 0x01
     444:	9a 81       	ldd	r25, Y+2	; 0x02
     446:	82 30       	cpi	r24, 0x02	; 2
     448:	91 05       	cpc	r25, r1
     44a:	09 f4       	brne	.+2      	; 0x44e <cPMainCmdParser+0x34>
     44c:	4b c0       	rjmp	.+150    	; 0x4e4 <cPMainCmdParser+0xca>
     44e:	29 81       	ldd	r18, Y+1	; 0x01
     450:	3a 81       	ldd	r19, Y+2	; 0x02
     452:	23 30       	cpi	r18, 0x03	; 3
     454:	31 05       	cpc	r19, r1
     456:	54 f4       	brge	.+20     	; 0x46c <cPMainCmdParser+0x52>
     458:	89 81       	ldd	r24, Y+1	; 0x01
     45a:	9a 81       	ldd	r25, Y+2	; 0x02
     45c:	00 97       	sbiw	r24, 0x00	; 0
     45e:	99 f0       	breq	.+38     	; 0x486 <cPMainCmdParser+0x6c>
     460:	29 81       	ldd	r18, Y+1	; 0x01
     462:	3a 81       	ldd	r19, Y+2	; 0x02
     464:	21 30       	cpi	r18, 0x01	; 1
     466:	31 05       	cpc	r19, r1
     468:	19 f1       	breq	.+70     	; 0x4b0 <cPMainCmdParser+0x96>
     46a:	62 c0       	rjmp	.+196    	; 0x530 <cPMainCmdParser+0x116>
     46c:	89 81       	ldd	r24, Y+1	; 0x01
     46e:	9a 81       	ldd	r25, Y+2	; 0x02
     470:	83 30       	cpi	r24, 0x03	; 3
     472:	91 05       	cpc	r25, r1
     474:	09 f4       	brne	.+2      	; 0x478 <cPMainCmdParser+0x5e>
     476:	4a c0       	rjmp	.+148    	; 0x50c <cPMainCmdParser+0xf2>
     478:	29 81       	ldd	r18, Y+1	; 0x01
     47a:	3a 81       	ldd	r19, Y+2	; 0x02
     47c:	24 30       	cpi	r18, 0x04	; 4
     47e:	31 05       	cpc	r19, r1
     480:	09 f4       	brne	.+2      	; 0x484 <cPMainCmdParser+0x6a>
     482:	4d c0       	rjmp	.+154    	; 0x51e <cPMainCmdParser+0x104>
     484:	55 c0       	rjmp	.+170    	; 0x530 <cPMainCmdParser+0x116>
 		{
	 		case CP_SYNC_STATE:

				if(data==CP_CMD_NORMALE||data==CP_CMD_ARRET)
     486:	80 91 8e 01 	lds	r24, 0x018E
     48a:	81 3f       	cpi	r24, 0xF1	; 241
     48c:	29 f0       	breq	.+10     	; 0x498 <cPMainCmdParser+0x7e>
     48e:	80 91 8e 01 	lds	r24, 0x018E
     492:	80 3f       	cpi	r24, 0xF0	; 240
     494:	09 f0       	breq	.+2      	; 0x498 <cPMainCmdParser+0x7e>
     496:	4e c0       	rjmp	.+156    	; 0x534 <cPMainCmdParser+0x11a>
				{			
					uartSendByte(data);
     498:	80 91 8e 01 	lds	r24, 0x018E
     49c:	0e 94 1c 01 	call	0x238	; 0x238 <uartSendByte>
					cPCmdValue=data;
     4a0:	80 91 8e 01 	lds	r24, 0x018E
     4a4:	80 93 8b 01 	sts	0x018B, r24
					cPState=CP_GET_VITESSE_STATE;
     4a8:	81 e0       	ldi	r24, 0x01	; 1
     4aa:	80 93 8a 01 	sts	0x018A, r24
     4ae:	42 c0       	rjmp	.+132    	; 0x534 <cPMainCmdParser+0x11a>

			break;

			case CP_GET_VITESSE_STATE:
			
				if( (cPVitesseValue!=data) && (data==0) )
     4b0:	90 91 8c 01 	lds	r25, 0x018C
     4b4:	80 91 8e 01 	lds	r24, 0x018E
     4b8:	98 17       	cp	r25, r24
     4ba:	41 f0       	breq	.+16     	; 0x4cc <cPMainCmdParser+0xb2>
     4bc:	80 91 8e 01 	lds	r24, 0x018E
     4c0:	88 23       	and	r24, r24
     4c2:	21 f4       	brne	.+8      	; 0x4cc <cPMainCmdParser+0xb2>
					dbgSendDbgString("vitesse=0");
     4c4:	86 e7       	ldi	r24, 0x76	; 118
     4c6:	90 e0       	ldi	r25, 0x00	; 0
     4c8:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <dbgSendDbgString>

				cPVitesseValue=data;
     4cc:	80 91 8e 01 	lds	r24, 0x018E
     4d0:	80 93 8c 01 	sts	0x018C, r24
				uartSendByte(data);
     4d4:	80 91 8e 01 	lds	r24, 0x018E
     4d8:	0e 94 1c 01 	call	0x238	; 0x238 <uartSendByte>
				cPState=CP_GET_ANGLE_STATE;			
     4dc:	82 e0       	ldi	r24, 0x02	; 2
     4de:	80 93 8a 01 	sts	0x018A, r24
     4e2:	28 c0       	rjmp	.+80     	; 0x534 <cPMainCmdParser+0x11a>
			break;


			case CP_GET_ANGLE_STATE:

				cPAngleValue=data;
     4e4:	80 91 8e 01 	lds	r24, 0x018E
     4e8:	80 93 8d 01 	sts	0x018D, r24
				uartSendByte(data);
     4ec:	80 91 8e 01 	lds	r24, 0x018E
     4f0:	0e 94 1c 01 	call	0x238	; 0x238 <uartSendByte>

				if(cPCmdValue==CP_CMD_NORMALE)
     4f4:	80 91 8b 01 	lds	r24, 0x018B
     4f8:	81 3f       	cpi	r24, 0xF1	; 241
     4fa:	21 f4       	brne	.+8      	; 0x504 <cPMainCmdParser+0xea>
					cPState=CP_RUN_STATE;
     4fc:	84 e0       	ldi	r24, 0x04	; 4
     4fe:	80 93 8a 01 	sts	0x018A, r24
     502:	18 c0       	rjmp	.+48     	; 0x534 <cPMainCmdParser+0x11a>
				else
					cPState=CP_ARRET_STATE;
     504:	83 e0       	ldi	r24, 0x03	; 3
     506:	80 93 8a 01 	sts	0x018A, r24
     50a:	14 c0       	rjmp	.+40     	; 0x534 <cPMainCmdParser+0x11a>
			break;

			case CP_ARRET_STATE:

				cPState=CP_SYNC_STATE;
     50c:	10 92 8a 01 	sts	0x018A, r1
				moteurControl(cPVitesseValue,0,M_ARRET);
     510:	80 91 8c 01 	lds	r24, 0x018C
     514:	60 e0       	ldi	r22, 0x00	; 0
     516:	42 e0       	ldi	r20, 0x02	; 2
     518:	0e 94 86 08 	call	0x110c	; 0x110c <moteurControl>
     51c:	0b c0       	rjmp	.+22     	; 0x534 <cPMainCmdParser+0x11a>

			break;

			case CP_RUN_STATE:

				cPState=CP_SYNC_STATE;
     51e:	10 92 8a 01 	sts	0x018A, r1
			//	dbgSendDbgString("run");
			  //	PORTB=~cPAngleValue;
				moteurControl(cPVitesseValue,0,M_MARCHE);
     522:	80 91 8c 01 	lds	r24, 0x018C
     526:	60 e0       	ldi	r22, 0x00	; 0
     528:	40 e0       	ldi	r20, 0x00	; 0
     52a:	0e 94 86 08 	call	0x110c	; 0x110c <moteurControl>
     52e:	02 c0       	rjmp	.+4      	; 0x534 <cPMainCmdParser+0x11a>

			break;

			default:
				cPState=CP_SYNC_STATE;
     530:	10 92 8a 01 	sts	0x018A, r1
 		}

	}


}
     534:	0f 90       	pop	r0
     536:	0f 90       	pop	r0
     538:	cf 91       	pop	r28
     53a:	df 91       	pop	r29
     53c:	08 95       	ret

0000053e <hdInit>:
#include "uart.h"



void hdInit(void)
{
     53e:	df 93       	push	r29
     540:	cf 93       	push	r28
     542:	cd b7       	in	r28, 0x3d	; 61
     544:	de b7       	in	r29, 0x3e	; 62
	//init leds port
	DDRB = 0xff; 
     546:	e7 e3       	ldi	r30, 0x37	; 55
     548:	f0 e0       	ldi	r31, 0x00	; 0
     54a:	8f ef       	ldi	r24, 0xFF	; 255
     54c:	80 83       	st	Z, r24
	DDRD = 0xfe;
     54e:	e1 e3       	ldi	r30, 0x31	; 49
     550:	f0 e0       	ldi	r31, 0x00	; 0
     552:	8e ef       	ldi	r24, 0xFE	; 254
     554:	80 83       	st	Z, r24
	//enable all interrupts
	sei();
     556:	78 94       	sei
	//init Uart
	uartInit();	
     558:	0e 94 75 00 	call	0xea	; 0xea <uartInit>

}
     55c:	cf 91       	pop	r28
     55e:	df 91       	pop	r29
     560:	08 95       	ret

00000562 <pwmInit>:
volatile U16 pwmOCR1B_value=0;
tREG08 pwmPortDREG;
U16 period=10000;

void pwmInit(void)
{
     562:	df 93       	push	r29
     564:	cf 93       	push	r28
     566:	cd b7       	in	r28, 0x3d	; 61
     568:	de b7       	in	r29, 0x3e	; 62
  //com1b1=1
  TCCR1A=(1<<COM1A1)|(0<<COM1A0)|(0<<COM1B1)|(0<<COM1B0)|(0<<FOC1A)|(0<<FOC1B)|(1<<WGM11)|(0<<WGM10);
     56a:	ef e4       	ldi	r30, 0x4F	; 79
     56c:	f0 e0       	ldi	r31, 0x00	; 0
     56e:	82 e8       	ldi	r24, 0x82	; 130
     570:	80 83       	st	Z, r24
  TCCR1B=(0<<ICNC1)|(0<<ICES1)|(1<<WGM13)|(1<<WGM12)|(0<<CS12)|(1<<CS11)|(0<<CS10);
     572:	ee e4       	ldi	r30, 0x4E	; 78
     574:	f0 e0       	ldi	r31, 0x00	; 0
     576:	8a e1       	ldi	r24, 0x1A	; 26
     578:	80 83       	st	Z, r24
  //overflow interruption on
  TIMSK=(0<<TICIE1)|(0<<OCIE1A)|(0<<OCIE1B)|(1<<TOIE1);
     57a:	e9 e5       	ldi	r30, 0x59	; 89
     57c:	f0 e0       	ldi	r31, 0x00	; 0
     57e:	84 e0       	ldi	r24, 0x04	; 4
     580:	80 83       	st	Z, r24

  //ajustement de la periode de 5mS
  ICR1=10000;
     582:	e6 e4       	ldi	r30, 0x46	; 70
     584:	f0 e0       	ldi	r31, 0x00	; 0
     586:	80 e1       	ldi	r24, 0x10	; 16
     588:	97 e2       	ldi	r25, 0x27	; 39
     58a:	91 83       	std	Z+1, r25	; 0x01
     58c:	80 83       	st	Z, r24
 // DDRRD
  OCR1A=0;
     58e:	ea e4       	ldi	r30, 0x4A	; 74
     590:	f0 e0       	ldi	r31, 0x00	; 0
     592:	11 82       	std	Z+1, r1	; 0x01
     594:	10 82       	st	Z, r1
  OCR1B=0;
     596:	e8 e4       	ldi	r30, 0x48	; 72
     598:	f0 e0       	ldi	r31, 0x00	; 0
     59a:	11 82       	std	Z+1, r1	; 0x01
     59c:	10 82       	st	Z, r1

}
     59e:	cf 91       	pop	r28
     5a0:	df 91       	pop	r29
     5a2:	08 95       	ret

000005a4 <pwmSetDutyValue>:

void pwmSetDutyValue(U16 valueD,U16 valueG,U8 portValue)
{
     5a4:	df 93       	push	r29
     5a6:	cf 93       	push	r28
     5a8:	00 d0       	rcall	.+0      	; 0x5aa <pwmSetDutyValue+0x6>
     5aa:	00 d0       	rcall	.+0      	; 0x5ac <pwmSetDutyValue+0x8>
     5ac:	0f 92       	push	r0
     5ae:	cd b7       	in	r28, 0x3d	; 61
     5b0:	de b7       	in	r29, 0x3e	; 62
     5b2:	9a 83       	std	Y+2, r25	; 0x02
     5b4:	89 83       	std	Y+1, r24	; 0x01
     5b6:	7c 83       	std	Y+4, r23	; 0x04
     5b8:	6b 83       	std	Y+3, r22	; 0x03
     5ba:	4d 83       	std	Y+5, r20	; 0x05
	pwmOCR1A_value=valueD;
     5bc:	89 81       	ldd	r24, Y+1	; 0x01
     5be:	9a 81       	ldd	r25, Y+2	; 0x02
     5c0:	90 93 90 01 	sts	0x0190, r25
     5c4:	80 93 8f 01 	sts	0x018F, r24
	pwmOCR1B_value=valueG;
     5c8:	8b 81       	ldd	r24, Y+3	; 0x03
     5ca:	9c 81       	ldd	r25, Y+4	; 0x04
     5cc:	90 93 92 01 	sts	0x0192, r25
     5d0:	80 93 91 01 	sts	0x0191, r24
	pwmPortDREG.byte=portValue;
     5d4:	8d 81       	ldd	r24, Y+5	; 0x05
     5d6:	80 93 4e 02 	sts	0x024E, r24
}
     5da:	0f 90       	pop	r0
     5dc:	0f 90       	pop	r0
     5de:	0f 90       	pop	r0
     5e0:	0f 90       	pop	r0
     5e2:	0f 90       	pop	r0
     5e4:	cf 91       	pop	r28
     5e6:	df 91       	pop	r29
     5e8:	08 95       	ret

000005ea <__vector_9>:


ISR(TIMER1_OVF_vect)
{
     5ea:	1f 92       	push	r1
     5ec:	0f 92       	push	r0
     5ee:	0f b6       	in	r0, 0x3f	; 63
     5f0:	0f 92       	push	r0
     5f2:	11 24       	eor	r1, r1
     5f4:	8f 93       	push	r24
     5f6:	9f 93       	push	r25
     5f8:	ef 93       	push	r30
     5fa:	ff 93       	push	r31
     5fc:	df 93       	push	r29
     5fe:	cf 93       	push	r28
     600:	cd b7       	in	r28, 0x3d	; 61
     602:	de b7       	in	r29, 0x3e	; 62
	OCR1A=pwmOCR1A_value;
     604:	ea e4       	ldi	r30, 0x4A	; 74
     606:	f0 e0       	ldi	r31, 0x00	; 0
     608:	80 91 8f 01 	lds	r24, 0x018F
     60c:	90 91 90 01 	lds	r25, 0x0190
     610:	91 83       	std	Z+1, r25	; 0x01
     612:	80 83       	st	Z, r24
	OCR1B=pwmOCR1B_value;
     614:	e8 e4       	ldi	r30, 0x48	; 72
     616:	f0 e0       	ldi	r31, 0x00	; 0
     618:	80 91 91 01 	lds	r24, 0x0191
     61c:	90 91 92 01 	lds	r25, 0x0192
     620:	91 83       	std	Z+1, r25	; 0x01
     622:	80 83       	st	Z, r24
	pwmPortDREG.bit.b4=1;
     624:	80 91 4e 02 	lds	r24, 0x024E
     628:	80 61       	ori	r24, 0x10	; 16
     62a:	80 93 4e 02 	sts	0x024E, r24
	pwmPortDREG.bit.b4=1;
     62e:	80 91 4e 02 	lds	r24, 0x024E
     632:	80 61       	ori	r24, 0x10	; 16
     634:	80 93 4e 02 	sts	0x024E, r24
	PORTD=pwmPortDREG.byte;
     638:	e2 e3       	ldi	r30, 0x32	; 50
     63a:	f0 e0       	ldi	r31, 0x00	; 0
     63c:	80 91 4e 02 	lds	r24, 0x024E
     640:	80 83       	st	Z, r24
}
     642:	cf 91       	pop	r28
     644:	df 91       	pop	r29
     646:	ff 91       	pop	r31
     648:	ef 91       	pop	r30
     64a:	9f 91       	pop	r25
     64c:	8f 91       	pop	r24
     64e:	0f 90       	pop	r0
     650:	0f be       	out	0x3f, r0	; 63
     652:	0f 90       	pop	r0
     654:	1f 90       	pop	r1
     656:	18 95       	reti

00000658 <CalculPWM>:
#define M_DIR_D1 mPortDREG.bit.b6
#define M_DIR_D2 mPortDREG.bit.b7


void CalculPWM(float Vitesse_D, float Angle_D, float Vg, float Vd, float *Duty_G, float *Duty_D)
{
     658:	8f 92       	push	r8
     65a:	9f 92       	push	r9
     65c:	af 92       	push	r10
     65e:	bf 92       	push	r11
     660:	cf 92       	push	r12
     662:	df 92       	push	r13
     664:	ef 92       	push	r14
     666:	ff 92       	push	r15
     668:	0f 93       	push	r16
     66a:	1f 93       	push	r17
     66c:	df 93       	push	r29
     66e:	cf 93       	push	r28
     670:	cd b7       	in	r28, 0x3d	; 61
     672:	de b7       	in	r29, 0x3e	; 62
     674:	c6 55       	subi	r28, 0x56	; 86
     676:	d0 40       	sbci	r29, 0x00	; 0
     678:	0f b6       	in	r0, 0x3f	; 63
     67a:	f8 94       	cli
     67c:	de bf       	out	0x3e, r29	; 62
     67e:	0f be       	out	0x3f, r0	; 63
     680:	cd bf       	out	0x3d, r28	; 61
     682:	69 83       	std	Y+1, r22	; 0x01
     684:	7a 83       	std	Y+2, r23	; 0x02
     686:	8b 83       	std	Y+3, r24	; 0x03
     688:	9c 83       	std	Y+4, r25	; 0x04
     68a:	2d 83       	std	Y+5, r18	; 0x05
     68c:	3e 83       	std	Y+6, r19	; 0x06
     68e:	4f 83       	std	Y+7, r20	; 0x07
     690:	58 87       	std	Y+8, r21	; 0x08
     692:	e9 86       	std	Y+9, r14	; 0x09
     694:	fa 86       	std	Y+10, r15	; 0x0a
     696:	0b 87       	std	Y+11, r16	; 0x0b
     698:	1c 87       	std	Y+12, r17	; 0x0c
     69a:	ad 86       	std	Y+13, r10	; 0x0d
     69c:	be 86       	std	Y+14, r11	; 0x0e
     69e:	cf 86       	std	Y+15, r12	; 0x0f
     6a0:	d8 8a       	std	Y+16, r13	; 0x10
     6a2:	9a 8a       	std	Y+18, r9	; 0x12
     6a4:	89 8a       	std	Y+17, r8	; 0x11
	static float Ua     = 0.0;
	static int 	 Signe_Ua = 0;
	static int 	 Signe_Ut = 0;


	Vg = (Vg > 1.0) ? 1.0 : ((Vg < -1.0) ? -1.0 : Vg);  /* Regarde les limites (-1.0 à 1.0) */
     6a6:	69 85       	ldd	r22, Y+9	; 0x09
     6a8:	7a 85       	ldd	r23, Y+10	; 0x0a
     6aa:	8b 85       	ldd	r24, Y+11	; 0x0b
     6ac:	9c 85       	ldd	r25, Y+12	; 0x0c
     6ae:	20 e0       	ldi	r18, 0x00	; 0
     6b0:	30 e0       	ldi	r19, 0x00	; 0
     6b2:	40 e8       	ldi	r20, 0x80	; 128
     6b4:	5f e3       	ldi	r21, 0x3F	; 63
     6b6:	0e 94 39 0f 	call	0x1e72	; 0x1e72 <__gtsf2>
     6ba:	18 16       	cp	r1, r24
     6bc:	5c f4       	brge	.+22     	; 0x6d4 <CalculPWM+0x7c>
     6be:	80 e0       	ldi	r24, 0x00	; 0
     6c0:	90 e0       	ldi	r25, 0x00	; 0
     6c2:	a0 e8       	ldi	r26, 0x80	; 128
     6c4:	bf e3       	ldi	r27, 0x3F	; 63
     6c6:	67 96       	adiw	r28, 0x17	; 23
     6c8:	8c af       	std	Y+60, r24	; 0x3c
     6ca:	9d af       	std	Y+61, r25	; 0x3d
     6cc:	ae af       	std	Y+62, r26	; 0x3e
     6ce:	bf af       	std	Y+63, r27	; 0x3f
     6d0:	67 97       	sbiw	r28, 0x17	; 23
     6d2:	2d c0       	rjmp	.+90     	; 0x72e <CalculPWM+0xd6>
     6d4:	69 85       	ldd	r22, Y+9	; 0x09
     6d6:	7a 85       	ldd	r23, Y+10	; 0x0a
     6d8:	8b 85       	ldd	r24, Y+11	; 0x0b
     6da:	9c 85       	ldd	r25, Y+12	; 0x0c
     6dc:	20 e0       	ldi	r18, 0x00	; 0
     6de:	30 e0       	ldi	r19, 0x00	; 0
     6e0:	40 e8       	ldi	r20, 0x80	; 128
     6e2:	5f eb       	ldi	r21, 0xBF	; 191
     6e4:	0e 94 99 0f 	call	0x1f32	; 0x1f32 <__ltsf2>
     6e8:	88 23       	and	r24, r24
     6ea:	5c f4       	brge	.+22     	; 0x702 <CalculPWM+0xaa>
     6ec:	80 e0       	ldi	r24, 0x00	; 0
     6ee:	90 e0       	ldi	r25, 0x00	; 0
     6f0:	a0 e8       	ldi	r26, 0x80	; 128
     6f2:	bf eb       	ldi	r27, 0xBF	; 191
     6f4:	63 96       	adiw	r28, 0x13	; 19
     6f6:	8c af       	std	Y+60, r24	; 0x3c
     6f8:	9d af       	std	Y+61, r25	; 0x3d
     6fa:	ae af       	std	Y+62, r26	; 0x3e
     6fc:	bf af       	std	Y+63, r27	; 0x3f
     6fe:	63 97       	sbiw	r28, 0x13	; 19
     700:	0a c0       	rjmp	.+20     	; 0x716 <CalculPWM+0xbe>
     702:	89 85       	ldd	r24, Y+9	; 0x09
     704:	9a 85       	ldd	r25, Y+10	; 0x0a
     706:	ab 85       	ldd	r26, Y+11	; 0x0b
     708:	bc 85       	ldd	r27, Y+12	; 0x0c
     70a:	63 96       	adiw	r28, 0x13	; 19
     70c:	8c af       	std	Y+60, r24	; 0x3c
     70e:	9d af       	std	Y+61, r25	; 0x3d
     710:	ae af       	std	Y+62, r26	; 0x3e
     712:	bf af       	std	Y+63, r27	; 0x3f
     714:	63 97       	sbiw	r28, 0x13	; 19
     716:	63 96       	adiw	r28, 0x13	; 19
     718:	8c ad       	ldd	r24, Y+60	; 0x3c
     71a:	9d ad       	ldd	r25, Y+61	; 0x3d
     71c:	ae ad       	ldd	r26, Y+62	; 0x3e
     71e:	bf ad       	ldd	r27, Y+63	; 0x3f
     720:	63 97       	sbiw	r28, 0x13	; 19
     722:	67 96       	adiw	r28, 0x17	; 23
     724:	8c af       	std	Y+60, r24	; 0x3c
     726:	9d af       	std	Y+61, r25	; 0x3d
     728:	ae af       	std	Y+62, r26	; 0x3e
     72a:	bf af       	std	Y+63, r27	; 0x3f
     72c:	67 97       	sbiw	r28, 0x17	; 23
     72e:	67 96       	adiw	r28, 0x17	; 23
     730:	8c ad       	ldd	r24, Y+60	; 0x3c
     732:	9d ad       	ldd	r25, Y+61	; 0x3d
     734:	ae ad       	ldd	r26, Y+62	; 0x3e
     736:	bf ad       	ldd	r27, Y+63	; 0x3f
     738:	67 97       	sbiw	r28, 0x17	; 23
     73a:	89 87       	std	Y+9, r24	; 0x09
     73c:	9a 87       	std	Y+10, r25	; 0x0a
     73e:	ab 87       	std	Y+11, r26	; 0x0b
     740:	bc 87       	std	Y+12, r27	; 0x0c
	Vd = (Vd > 1.0) ? 1.0 : ((Vd < -1.0) ? -1.0 : Vd);  /* Regarde les limites (-1.0 à 1.0) */
     742:	6d 85       	ldd	r22, Y+13	; 0x0d
     744:	7e 85       	ldd	r23, Y+14	; 0x0e
     746:	8f 85       	ldd	r24, Y+15	; 0x0f
     748:	98 89       	ldd	r25, Y+16	; 0x10
     74a:	20 e0       	ldi	r18, 0x00	; 0
     74c:	30 e0       	ldi	r19, 0x00	; 0
     74e:	40 e8       	ldi	r20, 0x80	; 128
     750:	5f e3       	ldi	r21, 0x3F	; 63
     752:	0e 94 39 0f 	call	0x1e72	; 0x1e72 <__gtsf2>
     756:	18 16       	cp	r1, r24
     758:	5c f4       	brge	.+22     	; 0x770 <CalculPWM+0x118>
     75a:	80 e0       	ldi	r24, 0x00	; 0
     75c:	90 e0       	ldi	r25, 0x00	; 0
     75e:	a0 e8       	ldi	r26, 0x80	; 128
     760:	bf e3       	ldi	r27, 0x3F	; 63
     762:	2f 96       	adiw	r28, 0x0f	; 15
     764:	8c af       	std	Y+60, r24	; 0x3c
     766:	9d af       	std	Y+61, r25	; 0x3d
     768:	ae af       	std	Y+62, r26	; 0x3e
     76a:	bf af       	std	Y+63, r27	; 0x3f
     76c:	2f 97       	sbiw	r28, 0x0f	; 15
     76e:	2d c0       	rjmp	.+90     	; 0x7ca <CalculPWM+0x172>
     770:	6d 85       	ldd	r22, Y+13	; 0x0d
     772:	7e 85       	ldd	r23, Y+14	; 0x0e
     774:	8f 85       	ldd	r24, Y+15	; 0x0f
     776:	98 89       	ldd	r25, Y+16	; 0x10
     778:	20 e0       	ldi	r18, 0x00	; 0
     77a:	30 e0       	ldi	r19, 0x00	; 0
     77c:	40 e8       	ldi	r20, 0x80	; 128
     77e:	5f eb       	ldi	r21, 0xBF	; 191
     780:	0e 94 99 0f 	call	0x1f32	; 0x1f32 <__ltsf2>
     784:	88 23       	and	r24, r24
     786:	5c f4       	brge	.+22     	; 0x79e <CalculPWM+0x146>
     788:	80 e0       	ldi	r24, 0x00	; 0
     78a:	90 e0       	ldi	r25, 0x00	; 0
     78c:	a0 e8       	ldi	r26, 0x80	; 128
     78e:	bf eb       	ldi	r27, 0xBF	; 191
     790:	2b 96       	adiw	r28, 0x0b	; 11
     792:	8c af       	std	Y+60, r24	; 0x3c
     794:	9d af       	std	Y+61, r25	; 0x3d
     796:	ae af       	std	Y+62, r26	; 0x3e
     798:	bf af       	std	Y+63, r27	; 0x3f
     79a:	2b 97       	sbiw	r28, 0x0b	; 11
     79c:	0a c0       	rjmp	.+20     	; 0x7b2 <CalculPWM+0x15a>
     79e:	8d 85       	ldd	r24, Y+13	; 0x0d
     7a0:	9e 85       	ldd	r25, Y+14	; 0x0e
     7a2:	af 85       	ldd	r26, Y+15	; 0x0f
     7a4:	b8 89       	ldd	r27, Y+16	; 0x10
     7a6:	2b 96       	adiw	r28, 0x0b	; 11
     7a8:	8c af       	std	Y+60, r24	; 0x3c
     7aa:	9d af       	std	Y+61, r25	; 0x3d
     7ac:	ae af       	std	Y+62, r26	; 0x3e
     7ae:	bf af       	std	Y+63, r27	; 0x3f
     7b0:	2b 97       	sbiw	r28, 0x0b	; 11
     7b2:	2b 96       	adiw	r28, 0x0b	; 11
     7b4:	8c ad       	ldd	r24, Y+60	; 0x3c
     7b6:	9d ad       	ldd	r25, Y+61	; 0x3d
     7b8:	ae ad       	ldd	r26, Y+62	; 0x3e
     7ba:	bf ad       	ldd	r27, Y+63	; 0x3f
     7bc:	2b 97       	sbiw	r28, 0x0b	; 11
     7be:	2f 96       	adiw	r28, 0x0f	; 15
     7c0:	8c af       	std	Y+60, r24	; 0x3c
     7c2:	9d af       	std	Y+61, r25	; 0x3d
     7c4:	ae af       	std	Y+62, r26	; 0x3e
     7c6:	bf af       	std	Y+63, r27	; 0x3f
     7c8:	2f 97       	sbiw	r28, 0x0f	; 15
     7ca:	2f 96       	adiw	r28, 0x0f	; 15
     7cc:	8c ad       	ldd	r24, Y+60	; 0x3c
     7ce:	9d ad       	ldd	r25, Y+61	; 0x3d
     7d0:	ae ad       	ldd	r26, Y+62	; 0x3e
     7d2:	bf ad       	ldd	r27, Y+63	; 0x3f
     7d4:	2f 97       	sbiw	r28, 0x0f	; 15
     7d6:	8d 87       	std	Y+13, r24	; 0x0d
     7d8:	9e 87       	std	Y+14, r25	; 0x0e
     7da:	af 87       	std	Y+15, r26	; 0x0f
     7dc:	b8 8b       	std	Y+16, r27	; 0x10
		
	Old_W = W;
     7de:	80 91 c4 01 	lds	r24, 0x01C4
     7e2:	90 91 c5 01 	lds	r25, 0x01C5
     7e6:	a0 91 c6 01 	lds	r26, 0x01C6
     7ea:	b0 91 c7 01 	lds	r27, 0x01C7
     7ee:	80 93 c0 01 	sts	0x01C0, r24
     7f2:	90 93 c1 01 	sts	0x01C1, r25
     7f6:	a0 93 c2 01 	sts	0x01C2, r26
     7fa:	b0 93 c3 01 	sts	0x01C3, r27
	W     = 0.5*(Vmax/RAYON)*(Vd-Vg);
     7fe:	6d 85       	ldd	r22, Y+13	; 0x0d
     800:	7e 85       	ldd	r23, Y+14	; 0x0e
     802:	8f 85       	ldd	r24, Y+15	; 0x0f
     804:	98 89       	ldd	r25, Y+16	; 0x10
     806:	29 85       	ldd	r18, Y+9	; 0x09
     808:	3a 85       	ldd	r19, Y+10	; 0x0a
     80a:	4b 85       	ldd	r20, Y+11	; 0x0b
     80c:	5c 85       	ldd	r21, Y+12	; 0x0c
     80e:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <__subsf3>
     812:	dc 01       	movw	r26, r24
     814:	cb 01       	movw	r24, r22
     816:	bc 01       	movw	r22, r24
     818:	cd 01       	movw	r24, r26
     81a:	2a e1       	ldi	r18, 0x1A	; 26
     81c:	32 e6       	ldi	r19, 0x62	; 98
     81e:	46 e8       	ldi	r20, 0x86	; 134
     820:	50 e4       	ldi	r21, 0x40	; 64
     822:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <__mulsf3>
     826:	dc 01       	movw	r26, r24
     828:	cb 01       	movw	r24, r22
     82a:	80 93 c4 01 	sts	0x01C4, r24
     82e:	90 93 c5 01 	sts	0x01C5, r25
     832:	a0 93 c6 01 	sts	0x01C6, r26
     836:	b0 93 c7 01 	sts	0x01C7, r27
	Vt    = 0.5*(Vd+Vg);
     83a:	6d 85       	ldd	r22, Y+13	; 0x0d
     83c:	7e 85       	ldd	r23, Y+14	; 0x0e
     83e:	8f 85       	ldd	r24, Y+15	; 0x0f
     840:	98 89       	ldd	r25, Y+16	; 0x10
     842:	29 85       	ldd	r18, Y+9	; 0x09
     844:	3a 85       	ldd	r19, Y+10	; 0x0a
     846:	4b 85       	ldd	r20, Y+11	; 0x0b
     848:	5c 85       	ldd	r21, Y+12	; 0x0c
     84a:	0e 94 66 0d 	call	0x1acc	; 0x1acc <__addsf3>
     84e:	dc 01       	movw	r26, r24
     850:	cb 01       	movw	r24, r22
     852:	bc 01       	movw	r22, r24
     854:	cd 01       	movw	r24, r26
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	5f e3       	ldi	r21, 0x3F	; 63
     85e:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <__mulsf3>
     862:	dc 01       	movw	r26, r24
     864:	cb 01       	movw	r24, r22
     866:	80 93 bc 01 	sts	0x01BC, r24
     86a:	90 93 bd 01 	sts	0x01BD, r25
     86e:	a0 93 be 01 	sts	0x01BE, r26
     872:	b0 93 bf 01 	sts	0x01BF, r27

	Angle =  Angle + (0.5)*TS*(W+Old_W);
     876:	80 91 c4 01 	lds	r24, 0x01C4
     87a:	90 91 c5 01 	lds	r25, 0x01C5
     87e:	a0 91 c6 01 	lds	r26, 0x01C6
     882:	b0 91 c7 01 	lds	r27, 0x01C7
     886:	20 91 c0 01 	lds	r18, 0x01C0
     88a:	30 91 c1 01 	lds	r19, 0x01C1
     88e:	40 91 c2 01 	lds	r20, 0x01C2
     892:	50 91 c3 01 	lds	r21, 0x01C3
     896:	bc 01       	movw	r22, r24
     898:	cd 01       	movw	r24, r26
     89a:	0e 94 66 0d 	call	0x1acc	; 0x1acc <__addsf3>
     89e:	dc 01       	movw	r26, r24
     8a0:	cb 01       	movw	r24, r22
     8a2:	bc 01       	movw	r22, r24
     8a4:	cd 01       	movw	r24, r26
     8a6:	2a e0       	ldi	r18, 0x0A	; 10
     8a8:	37 ed       	ldi	r19, 0xD7	; 215
     8aa:	43 e2       	ldi	r20, 0x23	; 35
     8ac:	5b e3       	ldi	r21, 0x3B	; 59
     8ae:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <__mulsf3>
     8b2:	dc 01       	movw	r26, r24
     8b4:	cb 01       	movw	r24, r22
     8b6:	20 91 cc 01 	lds	r18, 0x01CC
     8ba:	30 91 cd 01 	lds	r19, 0x01CD
     8be:	40 91 ce 01 	lds	r20, 0x01CE
     8c2:	50 91 cf 01 	lds	r21, 0x01CF
     8c6:	bc 01       	movw	r22, r24
     8c8:	cd 01       	movw	r24, r26
     8ca:	0e 94 66 0d 	call	0x1acc	; 0x1acc <__addsf3>
     8ce:	dc 01       	movw	r26, r24
     8d0:	cb 01       	movw	r24, r22
     8d2:	80 93 cc 01 	sts	0x01CC, r24
     8d6:	90 93 cd 01 	sts	0x01CD, r25
     8da:	a0 93 ce 01 	sts	0x01CE, r26
     8de:	b0 93 cf 01 	sts	0x01CF, r27
	Angle = (Angle > 2.0*Pi) ? Angle - 2*Pi : ((Angle < 0.0) ? Angle + 2*Pi : Angle); /* Angle entre 0 et 2 pi */
     8e2:	80 91 cc 01 	lds	r24, 0x01CC
     8e6:	90 91 cd 01 	lds	r25, 0x01CD
     8ea:	a0 91 ce 01 	lds	r26, 0x01CE
     8ee:	b0 91 cf 01 	lds	r27, 0x01CF
     8f2:	bc 01       	movw	r22, r24
     8f4:	cd 01       	movw	r24, r26
     8f6:	2b ed       	ldi	r18, 0xDB	; 219
     8f8:	3f e0       	ldi	r19, 0x0F	; 15
     8fa:	49 ec       	ldi	r20, 0xC9	; 201
     8fc:	50 e4       	ldi	r21, 0x40	; 64
     8fe:	0e 94 39 0f 	call	0x1e72	; 0x1e72 <__gtsf2>
     902:	18 16       	cp	r1, r24
     904:	cc f4       	brge	.+50     	; 0x938 <__stack+0xd9>
     906:	80 91 cc 01 	lds	r24, 0x01CC
     90a:	90 91 cd 01 	lds	r25, 0x01CD
     90e:	a0 91 ce 01 	lds	r26, 0x01CE
     912:	b0 91 cf 01 	lds	r27, 0x01CF
     916:	bc 01       	movw	r22, r24
     918:	cd 01       	movw	r24, r26
     91a:	2b ed       	ldi	r18, 0xDB	; 219
     91c:	3f e0       	ldi	r19, 0x0F	; 15
     91e:	49 ec       	ldi	r20, 0xC9	; 201
     920:	50 e4       	ldi	r21, 0x40	; 64
     922:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <__subsf3>
     926:	dc 01       	movw	r26, r24
     928:	cb 01       	movw	r24, r22
     92a:	27 96       	adiw	r28, 0x07	; 7
     92c:	8c af       	std	Y+60, r24	; 0x3c
     92e:	9d af       	std	Y+61, r25	; 0x3d
     930:	ae af       	std	Y+62, r26	; 0x3e
     932:	bf af       	std	Y+63, r27	; 0x3f
     934:	27 97       	sbiw	r28, 0x07	; 7
     936:	45 c0       	rjmp	.+138    	; 0x9c2 <__stack+0x163>
     938:	80 91 cc 01 	lds	r24, 0x01CC
     93c:	90 91 cd 01 	lds	r25, 0x01CD
     940:	a0 91 ce 01 	lds	r26, 0x01CE
     944:	b0 91 cf 01 	lds	r27, 0x01CF
     948:	bc 01       	movw	r22, r24
     94a:	cd 01       	movw	r24, r26
     94c:	20 e0       	ldi	r18, 0x00	; 0
     94e:	30 e0       	ldi	r19, 0x00	; 0
     950:	40 e0       	ldi	r20, 0x00	; 0
     952:	50 e0       	ldi	r21, 0x00	; 0
     954:	0e 94 99 0f 	call	0x1f32	; 0x1f32 <__ltsf2>
     958:	88 23       	and	r24, r24
     95a:	cc f4       	brge	.+50     	; 0x98e <__stack+0x12f>
     95c:	80 91 cc 01 	lds	r24, 0x01CC
     960:	90 91 cd 01 	lds	r25, 0x01CD
     964:	a0 91 ce 01 	lds	r26, 0x01CE
     968:	b0 91 cf 01 	lds	r27, 0x01CF
     96c:	bc 01       	movw	r22, r24
     96e:	cd 01       	movw	r24, r26
     970:	2b ed       	ldi	r18, 0xDB	; 219
     972:	3f e0       	ldi	r19, 0x0F	; 15
     974:	49 ec       	ldi	r20, 0xC9	; 201
     976:	50 e4       	ldi	r21, 0x40	; 64
     978:	0e 94 66 0d 	call	0x1acc	; 0x1acc <__addsf3>
     97c:	dc 01       	movw	r26, r24
     97e:	cb 01       	movw	r24, r22
     980:	23 96       	adiw	r28, 0x03	; 3
     982:	8c af       	std	Y+60, r24	; 0x3c
     984:	9d af       	std	Y+61, r25	; 0x3d
     986:	ae af       	std	Y+62, r26	; 0x3e
     988:	bf af       	std	Y+63, r27	; 0x3f
     98a:	23 97       	sbiw	r28, 0x03	; 3
     98c:	0e c0       	rjmp	.+28     	; 0x9aa <__stack+0x14b>
     98e:	80 91 cc 01 	lds	r24, 0x01CC
     992:	90 91 cd 01 	lds	r25, 0x01CD
     996:	a0 91 ce 01 	lds	r26, 0x01CE
     99a:	b0 91 cf 01 	lds	r27, 0x01CF
     99e:	23 96       	adiw	r28, 0x03	; 3
     9a0:	8c af       	std	Y+60, r24	; 0x3c
     9a2:	9d af       	std	Y+61, r25	; 0x3d
     9a4:	ae af       	std	Y+62, r26	; 0x3e
     9a6:	bf af       	std	Y+63, r27	; 0x3f
     9a8:	23 97       	sbiw	r28, 0x03	; 3
     9aa:	23 96       	adiw	r28, 0x03	; 3
     9ac:	8c ad       	ldd	r24, Y+60	; 0x3c
     9ae:	9d ad       	ldd	r25, Y+61	; 0x3d
     9b0:	ae ad       	ldd	r26, Y+62	; 0x3e
     9b2:	bf ad       	ldd	r27, Y+63	; 0x3f
     9b4:	23 97       	sbiw	r28, 0x03	; 3
     9b6:	27 96       	adiw	r28, 0x07	; 7
     9b8:	8c af       	std	Y+60, r24	; 0x3c
     9ba:	9d af       	std	Y+61, r25	; 0x3d
     9bc:	ae af       	std	Y+62, r26	; 0x3e
     9be:	bf af       	std	Y+63, r27	; 0x3f
     9c0:	27 97       	sbiw	r28, 0x07	; 7
     9c2:	27 96       	adiw	r28, 0x07	; 7
     9c4:	8c ad       	ldd	r24, Y+60	; 0x3c
     9c6:	9d ad       	ldd	r25, Y+61	; 0x3d
     9c8:	ae ad       	ldd	r26, Y+62	; 0x3e
     9ca:	bf ad       	ldd	r27, Y+63	; 0x3f
     9cc:	27 97       	sbiw	r28, 0x07	; 7
     9ce:	80 93 cc 01 	sts	0x01CC, r24
     9d2:	90 93 cd 01 	sts	0x01CD, r25
     9d6:	a0 93 ce 01 	sts	0x01CE, r26
     9da:	b0 93 cf 01 	sts	0x01CF, r27
	ErreurAngle = ((Angle_D >= Pi + Angle) ? Angle_D - 2*Pi : ((Angle_D <= -Pi + Angle) ? Angle_D + 2*Pi : Angle_D))-Angle;
     9de:	80 91 cc 01 	lds	r24, 0x01CC
     9e2:	90 91 cd 01 	lds	r25, 0x01CD
     9e6:	a0 91 ce 01 	lds	r26, 0x01CE
     9ea:	b0 91 cf 01 	lds	r27, 0x01CF
     9ee:	bc 01       	movw	r22, r24
     9f0:	cd 01       	movw	r24, r26
     9f2:	2b ed       	ldi	r18, 0xDB	; 219
     9f4:	3f e0       	ldi	r19, 0x0F	; 15
     9f6:	49 e4       	ldi	r20, 0x49	; 73
     9f8:	50 e4       	ldi	r21, 0x40	; 64
     9fa:	0e 94 66 0d 	call	0x1acc	; 0x1acc <__addsf3>
     9fe:	dc 01       	movw	r26, r24
     a00:	cb 01       	movw	r24, r22
     a02:	bc 01       	movw	r22, r24
     a04:	cd 01       	movw	r24, r26
     a06:	2d 81       	ldd	r18, Y+5	; 0x05
     a08:	3e 81       	ldd	r19, Y+6	; 0x06
     a0a:	4f 81       	ldd	r20, Y+7	; 0x07
     a0c:	58 85       	ldd	r21, Y+8	; 0x08
     a0e:	0e 94 c9 0f 	call	0x1f92	; 0x1f92 <__lesf2>
     a12:	18 16       	cp	r1, r24
     a14:	8c f0       	brlt	.+34     	; 0xa38 <__stack+0x1d9>
     a16:	6d 81       	ldd	r22, Y+5	; 0x05
     a18:	7e 81       	ldd	r23, Y+6	; 0x06
     a1a:	8f 81       	ldd	r24, Y+7	; 0x07
     a1c:	98 85       	ldd	r25, Y+8	; 0x08
     a1e:	2b ed       	ldi	r18, 0xDB	; 219
     a20:	3f e0       	ldi	r19, 0x0F	; 15
     a22:	49 ec       	ldi	r20, 0xC9	; 201
     a24:	50 e4       	ldi	r21, 0x40	; 64
     a26:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <__subsf3>
     a2a:	dc 01       	movw	r26, r24
     a2c:	cb 01       	movw	r24, r22
     a2e:	8b af       	std	Y+59, r24	; 0x3b
     a30:	9c af       	std	Y+60, r25	; 0x3c
     a32:	ad af       	std	Y+61, r26	; 0x3d
     a34:	be af       	std	Y+62, r27	; 0x3e
     a36:	3d c0       	rjmp	.+122    	; 0xab2 <__stack+0x253>
     a38:	80 91 cc 01 	lds	r24, 0x01CC
     a3c:	90 91 cd 01 	lds	r25, 0x01CD
     a40:	a0 91 ce 01 	lds	r26, 0x01CE
     a44:	b0 91 cf 01 	lds	r27, 0x01CF
     a48:	bc 01       	movw	r22, r24
     a4a:	cd 01       	movw	r24, r26
     a4c:	2b ed       	ldi	r18, 0xDB	; 219
     a4e:	3f e0       	ldi	r19, 0x0F	; 15
     a50:	49 e4       	ldi	r20, 0x49	; 73
     a52:	50 e4       	ldi	r21, 0x40	; 64
     a54:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <__subsf3>
     a58:	dc 01       	movw	r26, r24
     a5a:	cb 01       	movw	r24, r22
     a5c:	bc 01       	movw	r22, r24
     a5e:	cd 01       	movw	r24, r26
     a60:	2d 81       	ldd	r18, Y+5	; 0x05
     a62:	3e 81       	ldd	r19, Y+6	; 0x06
     a64:	4f 81       	ldd	r20, Y+7	; 0x07
     a66:	58 85       	ldd	r21, Y+8	; 0x08
     a68:	0e 94 69 0f 	call	0x1ed2	; 0x1ed2 <__gesf2>
     a6c:	88 23       	and	r24, r24
     a6e:	8c f0       	brlt	.+34     	; 0xa92 <__stack+0x233>
     a70:	6d 81       	ldd	r22, Y+5	; 0x05
     a72:	7e 81       	ldd	r23, Y+6	; 0x06
     a74:	8f 81       	ldd	r24, Y+7	; 0x07
     a76:	98 85       	ldd	r25, Y+8	; 0x08
     a78:	2b ed       	ldi	r18, 0xDB	; 219
     a7a:	3f e0       	ldi	r19, 0x0F	; 15
     a7c:	49 ec       	ldi	r20, 0xC9	; 201
     a7e:	50 e4       	ldi	r21, 0x40	; 64
     a80:	0e 94 66 0d 	call	0x1acc	; 0x1acc <__addsf3>
     a84:	dc 01       	movw	r26, r24
     a86:	cb 01       	movw	r24, r22
     a88:	8f ab       	std	Y+55, r24	; 0x37
     a8a:	98 af       	std	Y+56, r25	; 0x38
     a8c:	a9 af       	std	Y+57, r26	; 0x39
     a8e:	ba af       	std	Y+58, r27	; 0x3a
     a90:	08 c0       	rjmp	.+16     	; 0xaa2 <__stack+0x243>
     a92:	8d 81       	ldd	r24, Y+5	; 0x05
     a94:	9e 81       	ldd	r25, Y+6	; 0x06
     a96:	af 81       	ldd	r26, Y+7	; 0x07
     a98:	b8 85       	ldd	r27, Y+8	; 0x08
     a9a:	8f ab       	std	Y+55, r24	; 0x37
     a9c:	98 af       	std	Y+56, r25	; 0x38
     a9e:	a9 af       	std	Y+57, r26	; 0x39
     aa0:	ba af       	std	Y+58, r27	; 0x3a
     aa2:	8f a9       	ldd	r24, Y+55	; 0x37
     aa4:	98 ad       	ldd	r25, Y+56	; 0x38
     aa6:	a9 ad       	ldd	r26, Y+57	; 0x39
     aa8:	ba ad       	ldd	r27, Y+58	; 0x3a
     aaa:	8b af       	std	Y+59, r24	; 0x3b
     aac:	9c af       	std	Y+60, r25	; 0x3c
     aae:	ad af       	std	Y+61, r26	; 0x3d
     ab0:	be af       	std	Y+62, r27	; 0x3e
     ab2:	20 91 cc 01 	lds	r18, 0x01CC
     ab6:	30 91 cd 01 	lds	r19, 0x01CD
     aba:	40 91 ce 01 	lds	r20, 0x01CE
     abe:	50 91 cf 01 	lds	r21, 0x01CF
     ac2:	6b ad       	ldd	r22, Y+59	; 0x3b
     ac4:	7c ad       	ldd	r23, Y+60	; 0x3c
     ac6:	8d ad       	ldd	r24, Y+61	; 0x3d
     ac8:	9e ad       	ldd	r25, Y+62	; 0x3e
     aca:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <__subsf3>
     ace:	dc 01       	movw	r26, r24
     ad0:	cb 01       	movw	r24, r22
     ad2:	80 93 c8 01 	sts	0x01C8, r24
     ad6:	90 93 c9 01 	sts	0x01C9, r25
     ada:	a0 93 ca 01 	sts	0x01CA, r26
     ade:	b0 93 cb 01 	sts	0x01CB, r27

	Ut = -H11*Vt + H12*Vitesse_D;
     ae2:	80 91 bc 01 	lds	r24, 0x01BC
     ae6:	90 91 bd 01 	lds	r25, 0x01BD
     aea:	a0 91 be 01 	lds	r26, 0x01BE
     aee:	b0 91 bf 01 	lds	r27, 0x01BF
     af2:	bc 01       	movw	r22, r24
     af4:	cd 01       	movw	r24, r26
     af6:	28 ee       	ldi	r18, 0xE8	; 232
     af8:	31 eb       	ldi	r19, 0xB1	; 177
     afa:	49 e7       	ldi	r20, 0x79	; 121
     afc:	50 ec       	ldi	r21, 0xC0	; 192
     afe:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <__mulsf3>
     b02:	dc 01       	movw	r26, r24
     b04:	cb 01       	movw	r24, r22
     b06:	7c 01       	movw	r14, r24
     b08:	8d 01       	movw	r16, r26
     b0a:	69 81       	ldd	r22, Y+1	; 0x01
     b0c:	7a 81       	ldd	r23, Y+2	; 0x02
     b0e:	8b 81       	ldd	r24, Y+3	; 0x03
     b10:	9c 81       	ldd	r25, Y+4	; 0x04
     b12:	24 ef       	ldi	r18, 0xF4	; 244
     b14:	38 ed       	ldi	r19, 0xD8	; 216
     b16:	4c e9       	ldi	r20, 0x9C	; 156
     b18:	50 e4       	ldi	r21, 0x40	; 64
     b1a:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <__mulsf3>
     b1e:	dc 01       	movw	r26, r24
     b20:	cb 01       	movw	r24, r22
     b22:	9c 01       	movw	r18, r24
     b24:	ad 01       	movw	r20, r26
     b26:	c8 01       	movw	r24, r16
     b28:	b7 01       	movw	r22, r14
     b2a:	0e 94 66 0d 	call	0x1acc	; 0x1acc <__addsf3>
     b2e:	dc 01       	movw	r26, r24
     b30:	cb 01       	movw	r24, r22
     b32:	80 93 b8 01 	sts	0x01B8, r24
     b36:	90 93 b9 01 	sts	0x01B9, r25
     b3a:	a0 93 ba 01 	sts	0x01BA, r26
     b3e:	b0 93 bb 01 	sts	0x01BB, r27
	Ua = H21*ErreurAngle - H22*W;
     b42:	80 91 c8 01 	lds	r24, 0x01C8
     b46:	90 91 c9 01 	lds	r25, 0x01C9
     b4a:	a0 91 ca 01 	lds	r26, 0x01CA
     b4e:	b0 91 cb 01 	lds	r27, 0x01CB
     b52:	bc 01       	movw	r22, r24
     b54:	cd 01       	movw	r24, r26
     b56:	21 e2       	ldi	r18, 0x21	; 33
     b58:	37 ea       	ldi	r19, 0xA7	; 167
     b5a:	44 e9       	ldi	r20, 0x94	; 148
     b5c:	5f e3       	ldi	r21, 0x3F	; 63
     b5e:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <__mulsf3>
     b62:	dc 01       	movw	r26, r24
     b64:	cb 01       	movw	r24, r22
     b66:	7c 01       	movw	r14, r24
     b68:	8d 01       	movw	r16, r26
     b6a:	80 91 c4 01 	lds	r24, 0x01C4
     b6e:	90 91 c5 01 	lds	r25, 0x01C5
     b72:	a0 91 c6 01 	lds	r26, 0x01C6
     b76:	b0 91 c7 01 	lds	r27, 0x01C7
     b7a:	bc 01       	movw	r22, r24
     b7c:	cd 01       	movw	r24, r26
     b7e:	28 e1       	ldi	r18, 0x18	; 24
     b80:	37 ea       	ldi	r19, 0xA7	; 167
     b82:	44 e1       	ldi	r20, 0x14	; 20
     b84:	5f eb       	ldi	r21, 0xBF	; 191
     b86:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <__mulsf3>
     b8a:	dc 01       	movw	r26, r24
     b8c:	cb 01       	movw	r24, r22
     b8e:	9c 01       	movw	r18, r24
     b90:	ad 01       	movw	r20, r26
     b92:	c8 01       	movw	r24, r16
     b94:	b7 01       	movw	r22, r14
     b96:	0e 94 66 0d 	call	0x1acc	; 0x1acc <__addsf3>
     b9a:	dc 01       	movw	r26, r24
     b9c:	cb 01       	movw	r24, r22
     b9e:	80 93 b4 01 	sts	0x01B4, r24
     ba2:	90 93 b5 01 	sts	0x01B5, r25
     ba6:	a0 93 b6 01 	sts	0x01B6, r26
     baa:	b0 93 b7 01 	sts	0x01B7, r27
			
	Signe_Ua = (Ua >= 0.0) ? 1 : -1;
     bae:	80 91 b4 01 	lds	r24, 0x01B4
     bb2:	90 91 b5 01 	lds	r25, 0x01B5
     bb6:	a0 91 b6 01 	lds	r26, 0x01B6
     bba:	b0 91 b7 01 	lds	r27, 0x01B7
     bbe:	bc 01       	movw	r22, r24
     bc0:	cd 01       	movw	r24, r26
     bc2:	20 e0       	ldi	r18, 0x00	; 0
     bc4:	30 e0       	ldi	r19, 0x00	; 0
     bc6:	40 e0       	ldi	r20, 0x00	; 0
     bc8:	50 e0       	ldi	r21, 0x00	; 0
     bca:	0e 94 69 0f 	call	0x1ed2	; 0x1ed2 <__gesf2>
     bce:	88 23       	and	r24, r24
     bd0:	2c f0       	brlt	.+10     	; 0xbdc <__stack+0x37d>
     bd2:	a1 e0       	ldi	r26, 0x01	; 1
     bd4:	b0 e0       	ldi	r27, 0x00	; 0
     bd6:	be ab       	std	Y+54, r27	; 0x36
     bd8:	ad ab       	std	Y+53, r26	; 0x35
     bda:	04 c0       	rjmp	.+8      	; 0xbe4 <__stack+0x385>
     bdc:	8f ef       	ldi	r24, 0xFF	; 255
     bde:	9f ef       	ldi	r25, 0xFF	; 255
     be0:	9e ab       	std	Y+54, r25	; 0x36
     be2:	8d ab       	std	Y+53, r24	; 0x35
     be4:	ad a9       	ldd	r26, Y+53	; 0x35
     be6:	be a9       	ldd	r27, Y+54	; 0x36
     be8:	b0 93 b3 01 	sts	0x01B3, r27
     bec:	a0 93 b2 01 	sts	0x01B2, r26
	Signe_Ut = (Ut >= 0.0) ? 1 : -1;
     bf0:	80 91 b8 01 	lds	r24, 0x01B8
     bf4:	90 91 b9 01 	lds	r25, 0x01B9
     bf8:	a0 91 ba 01 	lds	r26, 0x01BA
     bfc:	b0 91 bb 01 	lds	r27, 0x01BB
     c00:	bc 01       	movw	r22, r24
     c02:	cd 01       	movw	r24, r26
     c04:	20 e0       	ldi	r18, 0x00	; 0
     c06:	30 e0       	ldi	r19, 0x00	; 0
     c08:	40 e0       	ldi	r20, 0x00	; 0
     c0a:	50 e0       	ldi	r21, 0x00	; 0
     c0c:	0e 94 69 0f 	call	0x1ed2	; 0x1ed2 <__gesf2>
     c10:	88 23       	and	r24, r24
     c12:	2c f0       	brlt	.+10     	; 0xc1e <__stack+0x3bf>
     c14:	81 e0       	ldi	r24, 0x01	; 1
     c16:	90 e0       	ldi	r25, 0x00	; 0
     c18:	9c ab       	std	Y+52, r25	; 0x34
     c1a:	8b ab       	std	Y+51, r24	; 0x33
     c1c:	04 c0       	rjmp	.+8      	; 0xc26 <__stack+0x3c7>
     c1e:	af ef       	ldi	r26, 0xFF	; 255
     c20:	bf ef       	ldi	r27, 0xFF	; 255
     c22:	bc ab       	std	Y+52, r27	; 0x34
     c24:	ab ab       	std	Y+51, r26	; 0x33
     c26:	8b a9       	ldd	r24, Y+51	; 0x33
     c28:	9c a9       	ldd	r25, Y+52	; 0x34
     c2a:	90 93 b1 01 	sts	0x01B1, r25
     c2e:	80 93 b0 01 	sts	0x01B0, r24
	
	Ua = (Signe_Ua*Ua > 1.0) ? Signe_Ua*1.0 : ((Signe_Ua*Ua <= 0.05) ? 0.0 : Ua);
     c32:	80 91 b2 01 	lds	r24, 0x01B2
     c36:	90 91 b3 01 	lds	r25, 0x01B3
     c3a:	aa 27       	eor	r26, r26
     c3c:	97 fd       	sbrc	r25, 7
     c3e:	a0 95       	com	r26
     c40:	ba 2f       	mov	r27, r26
     c42:	bc 01       	movw	r22, r24
     c44:	cd 01       	movw	r24, r26
     c46:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <__floatsisf>
     c4a:	dc 01       	movw	r26, r24
     c4c:	cb 01       	movw	r24, r22
     c4e:	20 91 b4 01 	lds	r18, 0x01B4
     c52:	30 91 b5 01 	lds	r19, 0x01B5
     c56:	40 91 b6 01 	lds	r20, 0x01B6
     c5a:	50 91 b7 01 	lds	r21, 0x01B7
     c5e:	bc 01       	movw	r22, r24
     c60:	cd 01       	movw	r24, r26
     c62:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <__mulsf3>
     c66:	dc 01       	movw	r26, r24
     c68:	cb 01       	movw	r24, r22
     c6a:	bc 01       	movw	r22, r24
     c6c:	cd 01       	movw	r24, r26
     c6e:	20 e0       	ldi	r18, 0x00	; 0
     c70:	30 e0       	ldi	r19, 0x00	; 0
     c72:	40 e8       	ldi	r20, 0x80	; 128
     c74:	5f e3       	ldi	r21, 0x3F	; 63
     c76:	0e 94 39 0f 	call	0x1e72	; 0x1e72 <__gtsf2>
     c7a:	18 16       	cp	r1, r24
     c7c:	8c f4       	brge	.+34     	; 0xca0 <__stack+0x441>
     c7e:	80 91 b2 01 	lds	r24, 0x01B2
     c82:	90 91 b3 01 	lds	r25, 0x01B3
     c86:	aa 27       	eor	r26, r26
     c88:	97 fd       	sbrc	r25, 7
     c8a:	a0 95       	com	r26
     c8c:	ba 2f       	mov	r27, r26
     c8e:	bc 01       	movw	r22, r24
     c90:	cd 01       	movw	r24, r26
     c92:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <__floatsisf>
     c96:	6f a7       	std	Y+47, r22	; 0x2f
     c98:	78 ab       	std	Y+48, r23	; 0x30
     c9a:	89 ab       	std	Y+49, r24	; 0x31
     c9c:	9a ab       	std	Y+50, r25	; 0x32
     c9e:	43 c0       	rjmp	.+134    	; 0xd26 <__stack+0x4c7>
     ca0:	80 91 b2 01 	lds	r24, 0x01B2
     ca4:	90 91 b3 01 	lds	r25, 0x01B3
     ca8:	aa 27       	eor	r26, r26
     caa:	97 fd       	sbrc	r25, 7
     cac:	a0 95       	com	r26
     cae:	ba 2f       	mov	r27, r26
     cb0:	bc 01       	movw	r22, r24
     cb2:	cd 01       	movw	r24, r26
     cb4:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <__floatsisf>
     cb8:	dc 01       	movw	r26, r24
     cba:	cb 01       	movw	r24, r22
     cbc:	20 91 b4 01 	lds	r18, 0x01B4
     cc0:	30 91 b5 01 	lds	r19, 0x01B5
     cc4:	40 91 b6 01 	lds	r20, 0x01B6
     cc8:	50 91 b7 01 	lds	r21, 0x01B7
     ccc:	bc 01       	movw	r22, r24
     cce:	cd 01       	movw	r24, r26
     cd0:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <__mulsf3>
     cd4:	dc 01       	movw	r26, r24
     cd6:	cb 01       	movw	r24, r22
     cd8:	bc 01       	movw	r22, r24
     cda:	cd 01       	movw	r24, r26
     cdc:	2d ec       	ldi	r18, 0xCD	; 205
     cde:	3c ec       	ldi	r19, 0xCC	; 204
     ce0:	4c e4       	ldi	r20, 0x4C	; 76
     ce2:	5d e3       	ldi	r21, 0x3D	; 61
     ce4:	0e 94 c9 0f 	call	0x1f92	; 0x1f92 <__lesf2>
     ce8:	18 16       	cp	r1, r24
     cea:	4c f0       	brlt	.+18     	; 0xcfe <__stack+0x49f>
     cec:	80 e0       	ldi	r24, 0x00	; 0
     cee:	90 e0       	ldi	r25, 0x00	; 0
     cf0:	a0 e0       	ldi	r26, 0x00	; 0
     cf2:	b0 e0       	ldi	r27, 0x00	; 0
     cf4:	8b a7       	std	Y+43, r24	; 0x2b
     cf6:	9c a7       	std	Y+44, r25	; 0x2c
     cf8:	ad a7       	std	Y+45, r26	; 0x2d
     cfa:	be a7       	std	Y+46, r27	; 0x2e
     cfc:	0c c0       	rjmp	.+24     	; 0xd16 <__stack+0x4b7>
     cfe:	80 91 b4 01 	lds	r24, 0x01B4
     d02:	90 91 b5 01 	lds	r25, 0x01B5
     d06:	a0 91 b6 01 	lds	r26, 0x01B6
     d0a:	b0 91 b7 01 	lds	r27, 0x01B7
     d0e:	8b a7       	std	Y+43, r24	; 0x2b
     d10:	9c a7       	std	Y+44, r25	; 0x2c
     d12:	ad a7       	std	Y+45, r26	; 0x2d
     d14:	be a7       	std	Y+46, r27	; 0x2e
     d16:	8b a5       	ldd	r24, Y+43	; 0x2b
     d18:	9c a5       	ldd	r25, Y+44	; 0x2c
     d1a:	ad a5       	ldd	r26, Y+45	; 0x2d
     d1c:	be a5       	ldd	r27, Y+46	; 0x2e
     d1e:	8f a7       	std	Y+47, r24	; 0x2f
     d20:	98 ab       	std	Y+48, r25	; 0x30
     d22:	a9 ab       	std	Y+49, r26	; 0x31
     d24:	ba ab       	std	Y+50, r27	; 0x32
     d26:	8f a5       	ldd	r24, Y+47	; 0x2f
     d28:	98 a9       	ldd	r25, Y+48	; 0x30
     d2a:	a9 a9       	ldd	r26, Y+49	; 0x31
     d2c:	ba a9       	ldd	r27, Y+50	; 0x32
     d2e:	80 93 b4 01 	sts	0x01B4, r24
     d32:	90 93 b5 01 	sts	0x01B5, r25
     d36:	a0 93 b6 01 	sts	0x01B6, r26
     d3a:	b0 93 b7 01 	sts	0x01B7, r27
	Ut = (Signe_Ut*Ut > 1.0) ? Signe_Ut*1.0 : Ut;
     d3e:	80 91 b0 01 	lds	r24, 0x01B0
     d42:	90 91 b1 01 	lds	r25, 0x01B1
     d46:	aa 27       	eor	r26, r26
     d48:	97 fd       	sbrc	r25, 7
     d4a:	a0 95       	com	r26
     d4c:	ba 2f       	mov	r27, r26
     d4e:	bc 01       	movw	r22, r24
     d50:	cd 01       	movw	r24, r26
     d52:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <__floatsisf>
     d56:	dc 01       	movw	r26, r24
     d58:	cb 01       	movw	r24, r22
     d5a:	20 91 b8 01 	lds	r18, 0x01B8
     d5e:	30 91 b9 01 	lds	r19, 0x01B9
     d62:	40 91 ba 01 	lds	r20, 0x01BA
     d66:	50 91 bb 01 	lds	r21, 0x01BB
     d6a:	bc 01       	movw	r22, r24
     d6c:	cd 01       	movw	r24, r26
     d6e:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <__mulsf3>
     d72:	dc 01       	movw	r26, r24
     d74:	cb 01       	movw	r24, r22
     d76:	bc 01       	movw	r22, r24
     d78:	cd 01       	movw	r24, r26
     d7a:	20 e0       	ldi	r18, 0x00	; 0
     d7c:	30 e0       	ldi	r19, 0x00	; 0
     d7e:	40 e8       	ldi	r20, 0x80	; 128
     d80:	5f e3       	ldi	r21, 0x3F	; 63
     d82:	0e 94 39 0f 	call	0x1e72	; 0x1e72 <__gtsf2>
     d86:	18 16       	cp	r1, r24
     d88:	8c f4       	brge	.+34     	; 0xdac <__stack+0x54d>
     d8a:	80 91 b0 01 	lds	r24, 0x01B0
     d8e:	90 91 b1 01 	lds	r25, 0x01B1
     d92:	aa 27       	eor	r26, r26
     d94:	97 fd       	sbrc	r25, 7
     d96:	a0 95       	com	r26
     d98:	ba 2f       	mov	r27, r26
     d9a:	bc 01       	movw	r22, r24
     d9c:	cd 01       	movw	r24, r26
     d9e:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <__floatsisf>
     da2:	6f a3       	std	Y+39, r22	; 0x27
     da4:	78 a7       	std	Y+40, r23	; 0x28
     da6:	89 a7       	std	Y+41, r24	; 0x29
     da8:	9a a7       	std	Y+42, r25	; 0x2a
     daa:	0c c0       	rjmp	.+24     	; 0xdc4 <__stack+0x565>
     dac:	80 91 b8 01 	lds	r24, 0x01B8
     db0:	90 91 b9 01 	lds	r25, 0x01B9
     db4:	a0 91 ba 01 	lds	r26, 0x01BA
     db8:	b0 91 bb 01 	lds	r27, 0x01BB
     dbc:	8f a3       	std	Y+39, r24	; 0x27
     dbe:	98 a7       	std	Y+40, r25	; 0x28
     dc0:	a9 a7       	std	Y+41, r26	; 0x29
     dc2:	ba a7       	std	Y+42, r27	; 0x2a
     dc4:	8f a1       	ldd	r24, Y+39	; 0x27
     dc6:	98 a5       	ldd	r25, Y+40	; 0x28
     dc8:	a9 a5       	ldd	r26, Y+41	; 0x29
     dca:	ba a5       	ldd	r27, Y+42	; 0x2a
     dcc:	80 93 b8 01 	sts	0x01B8, r24
     dd0:	90 93 b9 01 	sts	0x01B9, r25
     dd4:	a0 93 ba 01 	sts	0x01BA, r26
     dd8:	b0 93 bb 01 	sts	0x01BB, r27
	Ut = ((Signe_Ut*Ut) > (1.0 - Signe_Ua*Ua)) ? Signe_Ut*(1.0 - Signe_Ua*Ua) : Ut;
     ddc:	80 91 b0 01 	lds	r24, 0x01B0
     de0:	90 91 b1 01 	lds	r25, 0x01B1
     de4:	aa 27       	eor	r26, r26
     de6:	97 fd       	sbrc	r25, 7
     de8:	a0 95       	com	r26
     dea:	ba 2f       	mov	r27, r26
     dec:	bc 01       	movw	r22, r24
     dee:	cd 01       	movw	r24, r26
     df0:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <__floatsisf>
     df4:	dc 01       	movw	r26, r24
     df6:	cb 01       	movw	r24, r22
     df8:	20 91 b8 01 	lds	r18, 0x01B8
     dfc:	30 91 b9 01 	lds	r19, 0x01B9
     e00:	40 91 ba 01 	lds	r20, 0x01BA
     e04:	50 91 bb 01 	lds	r21, 0x01BB
     e08:	bc 01       	movw	r22, r24
     e0a:	cd 01       	movw	r24, r26
     e0c:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <__mulsf3>
     e10:	dc 01       	movw	r26, r24
     e12:	cb 01       	movw	r24, r22
     e14:	7c 01       	movw	r14, r24
     e16:	8d 01       	movw	r16, r26
     e18:	80 91 b2 01 	lds	r24, 0x01B2
     e1c:	90 91 b3 01 	lds	r25, 0x01B3
     e20:	aa 27       	eor	r26, r26
     e22:	97 fd       	sbrc	r25, 7
     e24:	a0 95       	com	r26
     e26:	ba 2f       	mov	r27, r26
     e28:	bc 01       	movw	r22, r24
     e2a:	cd 01       	movw	r24, r26
     e2c:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <__floatsisf>
     e30:	dc 01       	movw	r26, r24
     e32:	cb 01       	movw	r24, r22
     e34:	20 91 b4 01 	lds	r18, 0x01B4
     e38:	30 91 b5 01 	lds	r19, 0x01B5
     e3c:	40 91 b6 01 	lds	r20, 0x01B6
     e40:	50 91 b7 01 	lds	r21, 0x01B7
     e44:	bc 01       	movw	r22, r24
     e46:	cd 01       	movw	r24, r26
     e48:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <__mulsf3>
     e4c:	dc 01       	movw	r26, r24
     e4e:	cb 01       	movw	r24, r22
     e50:	9c 01       	movw	r18, r24
     e52:	ad 01       	movw	r20, r26
     e54:	60 e0       	ldi	r22, 0x00	; 0
     e56:	70 e0       	ldi	r23, 0x00	; 0
     e58:	80 e8       	ldi	r24, 0x80	; 128
     e5a:	9f e3       	ldi	r25, 0x3F	; 63
     e5c:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <__subsf3>
     e60:	dc 01       	movw	r26, r24
     e62:	cb 01       	movw	r24, r22
     e64:	9c 01       	movw	r18, r24
     e66:	ad 01       	movw	r20, r26
     e68:	c8 01       	movw	r24, r16
     e6a:	b7 01       	movw	r22, r14
     e6c:	0e 94 39 0f 	call	0x1e72	; 0x1e72 <__gtsf2>
     e70:	18 16       	cp	r1, r24
     e72:	0c f0       	brlt	.+2      	; 0xe76 <__stack+0x617>
     e74:	41 c0       	rjmp	.+130    	; 0xef8 <__stack+0x699>
     e76:	80 91 b0 01 	lds	r24, 0x01B0
     e7a:	90 91 b1 01 	lds	r25, 0x01B1
     e7e:	aa 27       	eor	r26, r26
     e80:	97 fd       	sbrc	r25, 7
     e82:	a0 95       	com	r26
     e84:	ba 2f       	mov	r27, r26
     e86:	bc 01       	movw	r22, r24
     e88:	cd 01       	movw	r24, r26
     e8a:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <__floatsisf>
     e8e:	7b 01       	movw	r14, r22
     e90:	8c 01       	movw	r16, r24
     e92:	80 91 b2 01 	lds	r24, 0x01B2
     e96:	90 91 b3 01 	lds	r25, 0x01B3
     e9a:	aa 27       	eor	r26, r26
     e9c:	97 fd       	sbrc	r25, 7
     e9e:	a0 95       	com	r26
     ea0:	ba 2f       	mov	r27, r26
     ea2:	bc 01       	movw	r22, r24
     ea4:	cd 01       	movw	r24, r26
     ea6:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <__floatsisf>
     eaa:	dc 01       	movw	r26, r24
     eac:	cb 01       	movw	r24, r22
     eae:	20 91 b4 01 	lds	r18, 0x01B4
     eb2:	30 91 b5 01 	lds	r19, 0x01B5
     eb6:	40 91 b6 01 	lds	r20, 0x01B6
     eba:	50 91 b7 01 	lds	r21, 0x01B7
     ebe:	bc 01       	movw	r22, r24
     ec0:	cd 01       	movw	r24, r26
     ec2:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <__mulsf3>
     ec6:	dc 01       	movw	r26, r24
     ec8:	cb 01       	movw	r24, r22
     eca:	9c 01       	movw	r18, r24
     ecc:	ad 01       	movw	r20, r26
     ece:	60 e0       	ldi	r22, 0x00	; 0
     ed0:	70 e0       	ldi	r23, 0x00	; 0
     ed2:	80 e8       	ldi	r24, 0x80	; 128
     ed4:	9f e3       	ldi	r25, 0x3F	; 63
     ed6:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <__subsf3>
     eda:	dc 01       	movw	r26, r24
     edc:	cb 01       	movw	r24, r22
     ede:	9c 01       	movw	r18, r24
     ee0:	ad 01       	movw	r20, r26
     ee2:	c8 01       	movw	r24, r16
     ee4:	b7 01       	movw	r22, r14
     ee6:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <__mulsf3>
     eea:	dc 01       	movw	r26, r24
     eec:	cb 01       	movw	r24, r22
     eee:	8b a3       	std	Y+35, r24	; 0x23
     ef0:	9c a3       	std	Y+36, r25	; 0x24
     ef2:	ad a3       	std	Y+37, r26	; 0x25
     ef4:	be a3       	std	Y+38, r27	; 0x26
     ef6:	0c c0       	rjmp	.+24     	; 0xf10 <__stack+0x6b1>
     ef8:	80 91 b8 01 	lds	r24, 0x01B8
     efc:	90 91 b9 01 	lds	r25, 0x01B9
     f00:	a0 91 ba 01 	lds	r26, 0x01BA
     f04:	b0 91 bb 01 	lds	r27, 0x01BB
     f08:	8b a3       	std	Y+35, r24	; 0x23
     f0a:	9c a3       	std	Y+36, r25	; 0x24
     f0c:	ad a3       	std	Y+37, r26	; 0x25
     f0e:	be a3       	std	Y+38, r27	; 0x26
     f10:	8b a1       	ldd	r24, Y+35	; 0x23
     f12:	9c a1       	ldd	r25, Y+36	; 0x24
     f14:	ad a1       	ldd	r26, Y+37	; 0x25
     f16:	be a1       	ldd	r27, Y+38	; 0x26
     f18:	80 93 b8 01 	sts	0x01B8, r24
     f1c:	90 93 b9 01 	sts	0x01B9, r25
     f20:	a0 93 ba 01 	sts	0x01BA, r26
     f24:	b0 93 bb 01 	sts	0x01BB, r27


	*Duty_D = (Ut+Ua);
     f28:	80 91 b8 01 	lds	r24, 0x01B8
     f2c:	90 91 b9 01 	lds	r25, 0x01B9
     f30:	a0 91 ba 01 	lds	r26, 0x01BA
     f34:	b0 91 bb 01 	lds	r27, 0x01BB
     f38:	20 91 b4 01 	lds	r18, 0x01B4
     f3c:	30 91 b5 01 	lds	r19, 0x01B5
     f40:	40 91 b6 01 	lds	r20, 0x01B6
     f44:	50 91 b7 01 	lds	r21, 0x01B7
     f48:	bc 01       	movw	r22, r24
     f4a:	cd 01       	movw	r24, r26
     f4c:	0e 94 66 0d 	call	0x1acc	; 0x1acc <__addsf3>
     f50:	dc 01       	movw	r26, r24
     f52:	cb 01       	movw	r24, r22
     f54:	a7 96       	adiw	r28, 0x27	; 39
     f56:	ee ad       	ldd	r30, Y+62	; 0x3e
     f58:	ff ad       	ldd	r31, Y+63	; 0x3f
     f5a:	a7 97       	sbiw	r28, 0x27	; 39
     f5c:	80 83       	st	Z, r24
     f5e:	91 83       	std	Z+1, r25	; 0x01
     f60:	a2 83       	std	Z+2, r26	; 0x02
     f62:	b3 83       	std	Z+3, r27	; 0x03
	*Duty_G = (Ut-Ua);
     f64:	80 91 b8 01 	lds	r24, 0x01B8
     f68:	90 91 b9 01 	lds	r25, 0x01B9
     f6c:	a0 91 ba 01 	lds	r26, 0x01BA
     f70:	b0 91 bb 01 	lds	r27, 0x01BB
     f74:	20 91 b4 01 	lds	r18, 0x01B4
     f78:	30 91 b5 01 	lds	r19, 0x01B5
     f7c:	40 91 b6 01 	lds	r20, 0x01B6
     f80:	50 91 b7 01 	lds	r21, 0x01B7
     f84:	bc 01       	movw	r22, r24
     f86:	cd 01       	movw	r24, r26
     f88:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <__subsf3>
     f8c:	dc 01       	movw	r26, r24
     f8e:	cb 01       	movw	r24, r22
     f90:	e9 89       	ldd	r30, Y+17	; 0x11
     f92:	fa 89       	ldd	r31, Y+18	; 0x12
     f94:	80 83       	st	Z, r24
     f96:	91 83       	std	Z+1, r25	; 0x01
     f98:	a2 83       	std	Z+2, r26	; 0x02
     f9a:	b3 83       	std	Z+3, r27	; 0x03

	*Duty_D = (*Duty_D > 0.99) ? 0.99 : ((*Duty_D < -0.99) ? -0.99 : *Duty_D);
     f9c:	a7 96       	adiw	r28, 0x27	; 39
     f9e:	ee ad       	ldd	r30, Y+62	; 0x3e
     fa0:	ff ad       	ldd	r31, Y+63	; 0x3f
     fa2:	a7 97       	sbiw	r28, 0x27	; 39
     fa4:	80 81       	ld	r24, Z
     fa6:	91 81       	ldd	r25, Z+1	; 0x01
     fa8:	a2 81       	ldd	r26, Z+2	; 0x02
     faa:	b3 81       	ldd	r27, Z+3	; 0x03
     fac:	bc 01       	movw	r22, r24
     fae:	cd 01       	movw	r24, r26
     fb0:	24 ea       	ldi	r18, 0xA4	; 164
     fb2:	30 e7       	ldi	r19, 0x70	; 112
     fb4:	4d e7       	ldi	r20, 0x7D	; 125
     fb6:	5f e3       	ldi	r21, 0x3F	; 63
     fb8:	0e 94 39 0f 	call	0x1e72	; 0x1e72 <__gtsf2>
     fbc:	18 16       	cp	r1, r24
     fbe:	4c f4       	brge	.+18     	; 0xfd2 <__stack+0x773>
     fc0:	84 ea       	ldi	r24, 0xA4	; 164
     fc2:	90 e7       	ldi	r25, 0x70	; 112
     fc4:	ad e7       	ldi	r26, 0x7D	; 125
     fc6:	bf e3       	ldi	r27, 0x3F	; 63
     fc8:	8f 8f       	std	Y+31, r24	; 0x1f
     fca:	98 a3       	std	Y+32, r25	; 0x20
     fcc:	a9 a3       	std	Y+33, r26	; 0x21
     fce:	ba a3       	std	Y+34, r27	; 0x22
     fd0:	2f c0       	rjmp	.+94     	; 0x1030 <__stack+0x7d1>
     fd2:	a7 96       	adiw	r28, 0x27	; 39
     fd4:	ee ad       	ldd	r30, Y+62	; 0x3e
     fd6:	ff ad       	ldd	r31, Y+63	; 0x3f
     fd8:	a7 97       	sbiw	r28, 0x27	; 39
     fda:	80 81       	ld	r24, Z
     fdc:	91 81       	ldd	r25, Z+1	; 0x01
     fde:	a2 81       	ldd	r26, Z+2	; 0x02
     fe0:	b3 81       	ldd	r27, Z+3	; 0x03
     fe2:	bc 01       	movw	r22, r24
     fe4:	cd 01       	movw	r24, r26
     fe6:	24 ea       	ldi	r18, 0xA4	; 164
     fe8:	30 e7       	ldi	r19, 0x70	; 112
     fea:	4d e7       	ldi	r20, 0x7D	; 125
     fec:	5f eb       	ldi	r21, 0xBF	; 191
     fee:	0e 94 99 0f 	call	0x1f32	; 0x1f32 <__ltsf2>
     ff2:	88 23       	and	r24, r24
     ff4:	4c f4       	brge	.+18     	; 0x1008 <__stack+0x7a9>
     ff6:	84 ea       	ldi	r24, 0xA4	; 164
     ff8:	90 e7       	ldi	r25, 0x70	; 112
     ffa:	ad e7       	ldi	r26, 0x7D	; 125
     ffc:	bf eb       	ldi	r27, 0xBF	; 191
     ffe:	8b 8f       	std	Y+27, r24	; 0x1b
    1000:	9c 8f       	std	Y+28, r25	; 0x1c
    1002:	ad 8f       	std	Y+29, r26	; 0x1d
    1004:	be 8f       	std	Y+30, r27	; 0x1e
    1006:	0c c0       	rjmp	.+24     	; 0x1020 <__stack+0x7c1>
    1008:	a7 96       	adiw	r28, 0x27	; 39
    100a:	ee ad       	ldd	r30, Y+62	; 0x3e
    100c:	ff ad       	ldd	r31, Y+63	; 0x3f
    100e:	a7 97       	sbiw	r28, 0x27	; 39
    1010:	80 81       	ld	r24, Z
    1012:	91 81       	ldd	r25, Z+1	; 0x01
    1014:	a2 81       	ldd	r26, Z+2	; 0x02
    1016:	b3 81       	ldd	r27, Z+3	; 0x03
    1018:	8b 8f       	std	Y+27, r24	; 0x1b
    101a:	9c 8f       	std	Y+28, r25	; 0x1c
    101c:	ad 8f       	std	Y+29, r26	; 0x1d
    101e:	be 8f       	std	Y+30, r27	; 0x1e
    1020:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1022:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1024:	ad 8d       	ldd	r26, Y+29	; 0x1d
    1026:	be 8d       	ldd	r27, Y+30	; 0x1e
    1028:	8f 8f       	std	Y+31, r24	; 0x1f
    102a:	98 a3       	std	Y+32, r25	; 0x20
    102c:	a9 a3       	std	Y+33, r26	; 0x21
    102e:	ba a3       	std	Y+34, r27	; 0x22
    1030:	a7 96       	adiw	r28, 0x27	; 39
    1032:	ee ad       	ldd	r30, Y+62	; 0x3e
    1034:	ff ad       	ldd	r31, Y+63	; 0x3f
    1036:	a7 97       	sbiw	r28, 0x27	; 39
    1038:	8f 8d       	ldd	r24, Y+31	; 0x1f
    103a:	98 a1       	ldd	r25, Y+32	; 0x20
    103c:	a9 a1       	ldd	r26, Y+33	; 0x21
    103e:	ba a1       	ldd	r27, Y+34	; 0x22
    1040:	80 83       	st	Z, r24
    1042:	91 83       	std	Z+1, r25	; 0x01
    1044:	a2 83       	std	Z+2, r26	; 0x02
    1046:	b3 83       	std	Z+3, r27	; 0x03
	*Duty_G = (*Duty_G > 0.99) ? 0.99 : ((*Duty_G < -0.99) ? -0.99 : *Duty_G);	
    1048:	e9 89       	ldd	r30, Y+17	; 0x11
    104a:	fa 89       	ldd	r31, Y+18	; 0x12
    104c:	80 81       	ld	r24, Z
    104e:	91 81       	ldd	r25, Z+1	; 0x01
    1050:	a2 81       	ldd	r26, Z+2	; 0x02
    1052:	b3 81       	ldd	r27, Z+3	; 0x03
    1054:	bc 01       	movw	r22, r24
    1056:	cd 01       	movw	r24, r26
    1058:	24 ea       	ldi	r18, 0xA4	; 164
    105a:	30 e7       	ldi	r19, 0x70	; 112
    105c:	4d e7       	ldi	r20, 0x7D	; 125
    105e:	5f e3       	ldi	r21, 0x3F	; 63
    1060:	0e 94 39 0f 	call	0x1e72	; 0x1e72 <__gtsf2>
    1064:	18 16       	cp	r1, r24
    1066:	4c f4       	brge	.+18     	; 0x107a <__stack+0x81b>
    1068:	84 ea       	ldi	r24, 0xA4	; 164
    106a:	90 e7       	ldi	r25, 0x70	; 112
    106c:	ad e7       	ldi	r26, 0x7D	; 125
    106e:	bf e3       	ldi	r27, 0x3F	; 63
    1070:	8f 8b       	std	Y+23, r24	; 0x17
    1072:	98 8f       	std	Y+24, r25	; 0x18
    1074:	a9 8f       	std	Y+25, r26	; 0x19
    1076:	ba 8f       	std	Y+26, r27	; 0x1a
    1078:	2b c0       	rjmp	.+86     	; 0x10d0 <__stack+0x871>
    107a:	e9 89       	ldd	r30, Y+17	; 0x11
    107c:	fa 89       	ldd	r31, Y+18	; 0x12
    107e:	80 81       	ld	r24, Z
    1080:	91 81       	ldd	r25, Z+1	; 0x01
    1082:	a2 81       	ldd	r26, Z+2	; 0x02
    1084:	b3 81       	ldd	r27, Z+3	; 0x03
    1086:	bc 01       	movw	r22, r24
    1088:	cd 01       	movw	r24, r26
    108a:	24 ea       	ldi	r18, 0xA4	; 164
    108c:	30 e7       	ldi	r19, 0x70	; 112
    108e:	4d e7       	ldi	r20, 0x7D	; 125
    1090:	5f eb       	ldi	r21, 0xBF	; 191
    1092:	0e 94 99 0f 	call	0x1f32	; 0x1f32 <__ltsf2>
    1096:	88 23       	and	r24, r24
    1098:	4c f4       	brge	.+18     	; 0x10ac <__stack+0x84d>
    109a:	84 ea       	ldi	r24, 0xA4	; 164
    109c:	90 e7       	ldi	r25, 0x70	; 112
    109e:	ad e7       	ldi	r26, 0x7D	; 125
    10a0:	bf eb       	ldi	r27, 0xBF	; 191
    10a2:	8b 8b       	std	Y+19, r24	; 0x13
    10a4:	9c 8b       	std	Y+20, r25	; 0x14
    10a6:	ad 8b       	std	Y+21, r26	; 0x15
    10a8:	be 8b       	std	Y+22, r27	; 0x16
    10aa:	0a c0       	rjmp	.+20     	; 0x10c0 <__stack+0x861>
    10ac:	e9 89       	ldd	r30, Y+17	; 0x11
    10ae:	fa 89       	ldd	r31, Y+18	; 0x12
    10b0:	80 81       	ld	r24, Z
    10b2:	91 81       	ldd	r25, Z+1	; 0x01
    10b4:	a2 81       	ldd	r26, Z+2	; 0x02
    10b6:	b3 81       	ldd	r27, Z+3	; 0x03
    10b8:	8b 8b       	std	Y+19, r24	; 0x13
    10ba:	9c 8b       	std	Y+20, r25	; 0x14
    10bc:	ad 8b       	std	Y+21, r26	; 0x15
    10be:	be 8b       	std	Y+22, r27	; 0x16
    10c0:	8b 89       	ldd	r24, Y+19	; 0x13
    10c2:	9c 89       	ldd	r25, Y+20	; 0x14
    10c4:	ad 89       	ldd	r26, Y+21	; 0x15
    10c6:	be 89       	ldd	r27, Y+22	; 0x16
    10c8:	8f 8b       	std	Y+23, r24	; 0x17
    10ca:	98 8f       	std	Y+24, r25	; 0x18
    10cc:	a9 8f       	std	Y+25, r26	; 0x19
    10ce:	ba 8f       	std	Y+26, r27	; 0x1a
    10d0:	e9 89       	ldd	r30, Y+17	; 0x11
    10d2:	fa 89       	ldd	r31, Y+18	; 0x12
    10d4:	8f 89       	ldd	r24, Y+23	; 0x17
    10d6:	98 8d       	ldd	r25, Y+24	; 0x18
    10d8:	a9 8d       	ldd	r26, Y+25	; 0x19
    10da:	ba 8d       	ldd	r27, Y+26	; 0x1a
    10dc:	80 83       	st	Z, r24
    10de:	91 83       	std	Z+1, r25	; 0x01
    10e0:	a2 83       	std	Z+2, r26	; 0x02
    10e2:	b3 83       	std	Z+3, r27	; 0x03
}
    10e4:	ca 5a       	subi	r28, 0xAA	; 170
    10e6:	df 4f       	sbci	r29, 0xFF	; 255
    10e8:	0f b6       	in	r0, 0x3f	; 63
    10ea:	f8 94       	cli
    10ec:	de bf       	out	0x3e, r29	; 62
    10ee:	0f be       	out	0x3f, r0	; 63
    10f0:	cd bf       	out	0x3d, r28	; 61
    10f2:	cf 91       	pop	r28
    10f4:	df 91       	pop	r29
    10f6:	1f 91       	pop	r17
    10f8:	0f 91       	pop	r16
    10fa:	ff 90       	pop	r15
    10fc:	ef 90       	pop	r14
    10fe:	df 90       	pop	r13
    1100:	cf 90       	pop	r12
    1102:	bf 90       	pop	r11
    1104:	af 90       	pop	r10
    1106:	9f 90       	pop	r9
    1108:	8f 90       	pop	r8
    110a:	08 95       	ret

0000110c <moteurControl>:

void moteurControl(U8 vitesse,U8 angle,U8 mode)
{
    110c:	8f 92       	push	r8
    110e:	9f 92       	push	r9
    1110:	af 92       	push	r10
    1112:	bf 92       	push	r11
    1114:	cf 92       	push	r12
    1116:	df 92       	push	r13
    1118:	ef 92       	push	r14
    111a:	ff 92       	push	r15
    111c:	0f 93       	push	r16
    111e:	1f 93       	push	r17
    1120:	df 93       	push	r29
    1122:	cf 93       	push	r28
    1124:	cd b7       	in	r28, 0x3d	; 61
    1126:	de b7       	in	r29, 0x3e	; 62
    1128:	27 97       	sbiw	r28, 0x07	; 7
    112a:	0f b6       	in	r0, 0x3f	; 63
    112c:	f8 94       	cli
    112e:	de bf       	out	0x3e, r29	; 62
    1130:	0f be       	out	0x3f, r0	; 63
    1132:	cd bf       	out	0x3d, r28	; 61
    1134:	8d 83       	std	Y+5, r24	; 0x05
    1136:	6e 83       	std	Y+6, r22	; 0x06
    1138:	4f 83       	std	Y+7, r20	; 0x07
U16 dutyValD;
U16 dutyValG;
    if(mode!=M_MARCHE)
    113a:	8f 81       	ldd	r24, Y+7	; 0x07
    113c:	88 23       	and	r24, r24
    113e:	c9 f1       	breq	.+114    	; 0x11b2 <moteurControl+0xa6>
	{
		switch(mode)
    1140:	8f 81       	ldd	r24, Y+7	; 0x07
    1142:	88 2f       	mov	r24, r24
    1144:	90 e0       	ldi	r25, 0x00	; 0
    1146:	81 30       	cpi	r24, 0x01	; 1
    1148:	91 05       	cpc	r25, r1
    114a:	a9 f4       	brne	.+42     	; 0x1176 <moteurControl+0x6a>
		{
			case M_NEUTRE:
			M_DIR_G1=0;
    114c:	80 91 4f 02 	lds	r24, 0x024F
    1150:	8b 7f       	andi	r24, 0xFB	; 251
    1152:	80 93 4f 02 	sts	0x024F, r24
			M_DIR_G2=0;
    1156:	80 91 4f 02 	lds	r24, 0x024F
    115a:	87 7f       	andi	r24, 0xF7	; 247
    115c:	80 93 4f 02 	sts	0x024F, r24
			M_DIR_D1=0;
    1160:	80 91 4f 02 	lds	r24, 0x024F
    1164:	8f 7b       	andi	r24, 0xBF	; 191
    1166:	80 93 4f 02 	sts	0x024F, r24
			M_DIR_D2=0;
    116a:	80 91 4f 02 	lds	r24, 0x024F
    116e:	8f 77       	andi	r24, 0x7F	; 127
    1170:	80 93 4f 02 	sts	0x024F, r24
    1174:	14 c0       	rjmp	.+40     	; 0x119e <moteurControl+0x92>

			break;

			//M_ARRET
			default:  
			M_DIR_G1=1;
    1176:	80 91 4f 02 	lds	r24, 0x024F
    117a:	84 60       	ori	r24, 0x04	; 4
    117c:	80 93 4f 02 	sts	0x024F, r24
			M_DIR_G2=1;
    1180:	80 91 4f 02 	lds	r24, 0x024F
    1184:	88 60       	ori	r24, 0x08	; 8
    1186:	80 93 4f 02 	sts	0x024F, r24
			M_DIR_D1=1;
    118a:	80 91 4f 02 	lds	r24, 0x024F
    118e:	80 64       	ori	r24, 0x40	; 64
    1190:	80 93 4f 02 	sts	0x024F, r24
			M_DIR_D2=1;
    1194:	80 91 4f 02 	lds	r24, 0x024F
    1198:	80 68       	ori	r24, 0x80	; 128
    119a:	80 93 4f 02 	sts	0x024F, r24
			break;
			mMode=mode;
		}
		
		pwmSetDutyValue(0,0,mPortDREG.byte);
    119e:	20 91 4f 02 	lds	r18, 0x024F
    11a2:	80 e0       	ldi	r24, 0x00	; 0
    11a4:	90 e0       	ldi	r25, 0x00	; 0
    11a6:	60 e0       	ldi	r22, 0x00	; 0
    11a8:	70 e0       	ldi	r23, 0x00	; 0
    11aa:	42 2f       	mov	r20, r18
    11ac:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <pwmSetDutyValue>
    11b0:	41 c1       	rjmp	.+642    	; 0x1434 <moteurControl+0x328>
	}
	else if(vitesse!=lastVitesse || angle!=lastAngle)
    11b2:	90 91 93 01 	lds	r25, 0x0193
    11b6:	8d 81       	ldd	r24, Y+5	; 0x05
    11b8:	89 17       	cp	r24, r25
    11ba:	31 f4       	brne	.+12     	; 0x11c8 <moteurControl+0xbc>
    11bc:	90 91 94 01 	lds	r25, 0x0194
    11c0:	8e 81       	ldd	r24, Y+6	; 0x06
    11c2:	89 17       	cp	r24, r25
    11c4:	09 f4       	brne	.+2      	; 0x11c8 <moteurControl+0xbc>
    11c6:	36 c1       	rjmp	.+620    	; 0x1434 <moteurControl+0x328>
	{ 
		if(vitesse!=lastVitesse)
    11c8:	90 91 93 01 	lds	r25, 0x0193
    11cc:	8d 81       	ldd	r24, Y+5	; 0x05
    11ce:	89 17       	cp	r24, r25
    11d0:	09 f1       	breq	.+66     	; 0x1214 <moteurControl+0x108>
		{
			mVitesse_D=(float)(vitesse-100)/100;
    11d2:	8d 81       	ldd	r24, Y+5	; 0x05
    11d4:	88 2f       	mov	r24, r24
    11d6:	90 e0       	ldi	r25, 0x00	; 0
    11d8:	84 56       	subi	r24, 0x64	; 100
    11da:	90 40       	sbci	r25, 0x00	; 0
    11dc:	aa 27       	eor	r26, r26
    11de:	97 fd       	sbrc	r25, 7
    11e0:	a0 95       	com	r26
    11e2:	ba 2f       	mov	r27, r26
    11e4:	bc 01       	movw	r22, r24
    11e6:	cd 01       	movw	r24, r26
    11e8:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <__floatsisf>
    11ec:	dc 01       	movw	r26, r24
    11ee:	cb 01       	movw	r24, r22
    11f0:	bc 01       	movw	r22, r24
    11f2:	cd 01       	movw	r24, r26
    11f4:	20 e0       	ldi	r18, 0x00	; 0
    11f6:	30 e0       	ldi	r19, 0x00	; 0
    11f8:	48 ec       	ldi	r20, 0xC8	; 200
    11fa:	52 e4       	ldi	r21, 0x42	; 66
    11fc:	0e 94 8d 0e 	call	0x1d1a	; 0x1d1a <__divsf3>
    1200:	dc 01       	movw	r26, r24
    1202:	cb 01       	movw	r24, r22
    1204:	80 93 98 01 	sts	0x0198, r24
    1208:	90 93 99 01 	sts	0x0199, r25
    120c:	a0 93 9a 01 	sts	0x019A, r26
    1210:	b0 93 9b 01 	sts	0x019B, r27
			
		}

		if(angle!=lastAngle)
    1214:	90 91 94 01 	lds	r25, 0x0194
    1218:	8e 81       	ldd	r24, Y+6	; 0x06
    121a:	89 17       	cp	r24, r25
    121c:	59 f1       	breq	.+86     	; 0x1274 <moteurControl+0x168>
		{
			mAngle_D=(float)((angle<<1)*Pi)/180;
    121e:	8e 81       	ldd	r24, Y+6	; 0x06
    1220:	88 2f       	mov	r24, r24
    1222:	90 e0       	ldi	r25, 0x00	; 0
    1224:	88 0f       	add	r24, r24
    1226:	99 1f       	adc	r25, r25
    1228:	aa 27       	eor	r26, r26
    122a:	97 fd       	sbrc	r25, 7
    122c:	a0 95       	com	r26
    122e:	ba 2f       	mov	r27, r26
    1230:	bc 01       	movw	r22, r24
    1232:	cd 01       	movw	r24, r26
    1234:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <__floatsisf>
    1238:	dc 01       	movw	r26, r24
    123a:	cb 01       	movw	r24, r22
    123c:	bc 01       	movw	r22, r24
    123e:	cd 01       	movw	r24, r26
    1240:	2b ed       	ldi	r18, 0xDB	; 219
    1242:	3f e0       	ldi	r19, 0x0F	; 15
    1244:	49 e4       	ldi	r20, 0x49	; 73
    1246:	50 e4       	ldi	r21, 0x40	; 64
    1248:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <__mulsf3>
    124c:	dc 01       	movw	r26, r24
    124e:	cb 01       	movw	r24, r22
    1250:	bc 01       	movw	r22, r24
    1252:	cd 01       	movw	r24, r26
    1254:	20 e0       	ldi	r18, 0x00	; 0
    1256:	30 e0       	ldi	r19, 0x00	; 0
    1258:	44 e3       	ldi	r20, 0x34	; 52
    125a:	53 e4       	ldi	r21, 0x43	; 67
    125c:	0e 94 8d 0e 	call	0x1d1a	; 0x1d1a <__divsf3>
    1260:	dc 01       	movw	r26, r24
    1262:	cb 01       	movw	r24, r22
    1264:	80 93 9c 01 	sts	0x019C, r24
    1268:	90 93 9d 01 	sts	0x019D, r25
    126c:	a0 93 9e 01 	sts	0x019E, r26
    1270:	b0 93 9f 01 	sts	0x019F, r27
		}
			
		CalculPWM(mVitesse_D, 0,mVitesse_D,mVitesse_D,&mDuty_G,&mDuty_D);
    1274:	20 91 98 01 	lds	r18, 0x0198
    1278:	30 91 99 01 	lds	r19, 0x0199
    127c:	40 91 9a 01 	lds	r20, 0x019A
    1280:	50 91 9b 01 	lds	r21, 0x019B
    1284:	e0 90 98 01 	lds	r14, 0x0198
    1288:	f0 90 99 01 	lds	r15, 0x0199
    128c:	00 91 9a 01 	lds	r16, 0x019A
    1290:	10 91 9b 01 	lds	r17, 0x019B
    1294:	a0 90 98 01 	lds	r10, 0x0198
    1298:	b0 90 99 01 	lds	r11, 0x0199
    129c:	c0 90 9a 01 	lds	r12, 0x019A
    12a0:	d0 90 9b 01 	lds	r13, 0x019B
    12a4:	00 d0       	rcall	.+0      	; 0x12a6 <moteurControl+0x19a>
    12a6:	ed b7       	in	r30, 0x3d	; 61
    12a8:	fe b7       	in	r31, 0x3e	; 62
    12aa:	31 96       	adiw	r30, 0x01	; 1
    12ac:	a8 ea       	ldi	r26, 0xA8	; 168
    12ae:	b1 e0       	ldi	r27, 0x01	; 1
    12b0:	8c ea       	ldi	r24, 0xAC	; 172
    12b2:	91 e0       	ldi	r25, 0x01	; 1
    12b4:	91 83       	std	Z+1, r25	; 0x01
    12b6:	80 83       	st	Z, r24
    12b8:	ca 01       	movw	r24, r20
    12ba:	b9 01       	movw	r22, r18
    12bc:	20 e0       	ldi	r18, 0x00	; 0
    12be:	30 e0       	ldi	r19, 0x00	; 0
    12c0:	40 e0       	ldi	r20, 0x00	; 0
    12c2:	50 e0       	ldi	r21, 0x00	; 0
    12c4:	4d 01       	movw	r8, r26
    12c6:	0e 94 2c 03 	call	0x658	; 0x658 <CalculPWM>
    12ca:	0f 90       	pop	r0
    12cc:	0f 90       	pop	r0

		//MODE AVANT
		if(mDuty_G<0)
    12ce:	80 91 a8 01 	lds	r24, 0x01A8
    12d2:	90 91 a9 01 	lds	r25, 0x01A9
    12d6:	a0 91 aa 01 	lds	r26, 0x01AA
    12da:	b0 91 ab 01 	lds	r27, 0x01AB
    12de:	bc 01       	movw	r22, r24
    12e0:	cd 01       	movw	r24, r26
    12e2:	20 e0       	ldi	r18, 0x00	; 0
    12e4:	30 e0       	ldi	r19, 0x00	; 0
    12e6:	40 e0       	ldi	r20, 0x00	; 0
    12e8:	50 e0       	ldi	r21, 0x00	; 0
    12ea:	0e 94 99 0f 	call	0x1f32	; 0x1f32 <__ltsf2>
    12ee:	88 23       	and	r24, r24
    12f0:	e4 f4       	brge	.+56     	; 0x132a <moteurControl+0x21e>
		{
			M_DIR_G1=0;
    12f2:	80 91 4f 02 	lds	r24, 0x024F
    12f6:	8b 7f       	andi	r24, 0xFB	; 251
    12f8:	80 93 4f 02 	sts	0x024F, r24
			M_DIR_G2=1;
    12fc:	80 91 4f 02 	lds	r24, 0x024F
    1300:	88 60       	ori	r24, 0x08	; 8
    1302:	80 93 4f 02 	sts	0x024F, r24
			mDuty_G=mDuty_G*(-1);
    1306:	80 91 a8 01 	lds	r24, 0x01A8
    130a:	90 91 a9 01 	lds	r25, 0x01A9
    130e:	a0 91 aa 01 	lds	r26, 0x01AA
    1312:	b0 91 ab 01 	lds	r27, 0x01AB
    1316:	b0 58       	subi	r27, 0x80	; 128
    1318:	80 93 a8 01 	sts	0x01A8, r24
    131c:	90 93 a9 01 	sts	0x01A9, r25
    1320:	a0 93 aa 01 	sts	0x01AA, r26
    1324:	b0 93 ab 01 	sts	0x01AB, r27
    1328:	0a c0       	rjmp	.+20     	; 0x133e <moteurControl+0x232>
		}
		//MODE ARRIERE	
		else
		{
			M_DIR_G1=1;
    132a:	80 91 4f 02 	lds	r24, 0x024F
    132e:	84 60       	ori	r24, 0x04	; 4
    1330:	80 93 4f 02 	sts	0x024F, r24
			M_DIR_G2=0;	
    1334:	80 91 4f 02 	lds	r24, 0x024F
    1338:	87 7f       	andi	r24, 0xF7	; 247
    133a:	80 93 4f 02 	sts	0x024F, r24
		}	

		//MODE AVANT
		if(mDuty_D<0)
    133e:	80 91 ac 01 	lds	r24, 0x01AC
    1342:	90 91 ad 01 	lds	r25, 0x01AD
    1346:	a0 91 ae 01 	lds	r26, 0x01AE
    134a:	b0 91 af 01 	lds	r27, 0x01AF
    134e:	bc 01       	movw	r22, r24
    1350:	cd 01       	movw	r24, r26
    1352:	20 e0       	ldi	r18, 0x00	; 0
    1354:	30 e0       	ldi	r19, 0x00	; 0
    1356:	40 e0       	ldi	r20, 0x00	; 0
    1358:	50 e0       	ldi	r21, 0x00	; 0
    135a:	0e 94 99 0f 	call	0x1f32	; 0x1f32 <__ltsf2>
    135e:	88 23       	and	r24, r24
    1360:	e4 f4       	brge	.+56     	; 0x139a <moteurControl+0x28e>
		{
			M_DIR_D1=0;
    1362:	80 91 4f 02 	lds	r24, 0x024F
    1366:	8f 7b       	andi	r24, 0xBF	; 191
    1368:	80 93 4f 02 	sts	0x024F, r24
			M_DIR_D2=1;
    136c:	80 91 4f 02 	lds	r24, 0x024F
    1370:	80 68       	ori	r24, 0x80	; 128
    1372:	80 93 4f 02 	sts	0x024F, r24
			mDuty_D=mDuty_D*(-1);
    1376:	80 91 ac 01 	lds	r24, 0x01AC
    137a:	90 91 ad 01 	lds	r25, 0x01AD
    137e:	a0 91 ae 01 	lds	r26, 0x01AE
    1382:	b0 91 af 01 	lds	r27, 0x01AF
    1386:	b0 58       	subi	r27, 0x80	; 128
    1388:	80 93 ac 01 	sts	0x01AC, r24
    138c:	90 93 ad 01 	sts	0x01AD, r25
    1390:	a0 93 ae 01 	sts	0x01AE, r26
    1394:	b0 93 af 01 	sts	0x01AF, r27
    1398:	0a c0       	rjmp	.+20     	; 0x13ae <moteurControl+0x2a2>
		}
		//MODE ARRIERE	
		else
		{
			M_DIR_D1=1;
    139a:	80 91 4f 02 	lds	r24, 0x024F
    139e:	80 64       	ori	r24, 0x40	; 64
    13a0:	80 93 4f 02 	sts	0x024F, r24
			M_DIR_D2=0;	
    13a4:	80 91 4f 02 	lds	r24, 0x024F
    13a8:	8f 77       	andi	r24, 0x7F	; 127
    13aa:	80 93 4f 02 	sts	0x024F, r24
		}
		dutyValD=(U16)((float)mDuty_D*10000);
    13ae:	80 91 ac 01 	lds	r24, 0x01AC
    13b2:	90 91 ad 01 	lds	r25, 0x01AD
    13b6:	a0 91 ae 01 	lds	r26, 0x01AE
    13ba:	b0 91 af 01 	lds	r27, 0x01AF
    13be:	bc 01       	movw	r22, r24
    13c0:	cd 01       	movw	r24, r26
    13c2:	20 e0       	ldi	r18, 0x00	; 0
    13c4:	30 e4       	ldi	r19, 0x40	; 64
    13c6:	4c e1       	ldi	r20, 0x1C	; 28
    13c8:	56 e4       	ldi	r21, 0x46	; 70
    13ca:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <__mulsf3>
    13ce:	dc 01       	movw	r26, r24
    13d0:	cb 01       	movw	r24, r22
    13d2:	bc 01       	movw	r22, r24
    13d4:	cd 01       	movw	r24, r26
    13d6:	0e 94 bd 0b 	call	0x177a	; 0x177a <__fixunssfsi>
    13da:	dc 01       	movw	r26, r24
    13dc:	cb 01       	movw	r24, r22
    13de:	9c 83       	std	Y+4, r25	; 0x04
    13e0:	8b 83       	std	Y+3, r24	; 0x03
		dutyValG=(U16)((float)mDuty_D*10000);
    13e2:	80 91 ac 01 	lds	r24, 0x01AC
    13e6:	90 91 ad 01 	lds	r25, 0x01AD
    13ea:	a0 91 ae 01 	lds	r26, 0x01AE
    13ee:	b0 91 af 01 	lds	r27, 0x01AF
    13f2:	bc 01       	movw	r22, r24
    13f4:	cd 01       	movw	r24, r26
    13f6:	20 e0       	ldi	r18, 0x00	; 0
    13f8:	30 e4       	ldi	r19, 0x40	; 64
    13fa:	4c e1       	ldi	r20, 0x1C	; 28
    13fc:	56 e4       	ldi	r21, 0x46	; 70
    13fe:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <__mulsf3>
    1402:	dc 01       	movw	r26, r24
    1404:	cb 01       	movw	r24, r22
    1406:	bc 01       	movw	r22, r24
    1408:	cd 01       	movw	r24, r26
    140a:	0e 94 bd 0b 	call	0x177a	; 0x177a <__fixunssfsi>
    140e:	dc 01       	movw	r26, r24
    1410:	cb 01       	movw	r24, r22
    1412:	9a 83       	std	Y+2, r25	; 0x02
    1414:	89 83       	std	Y+1, r24	; 0x01
		pwmSetDutyValue(dutyValD,dutyValG,mPortDREG.byte);
    1416:	40 91 4f 02 	lds	r20, 0x024F
    141a:	8b 81       	ldd	r24, Y+3	; 0x03
    141c:	9c 81       	ldd	r25, Y+4	; 0x04
    141e:	29 81       	ldd	r18, Y+1	; 0x01
    1420:	3a 81       	ldd	r19, Y+2	; 0x02
    1422:	b9 01       	movw	r22, r18
    1424:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <pwmSetDutyValue>
		lastVitesse=vitesse;
    1428:	8d 81       	ldd	r24, Y+5	; 0x05
    142a:	80 93 93 01 	sts	0x0193, r24
		lastAngle=angle;
    142e:	8e 81       	ldd	r24, Y+6	; 0x06
    1430:	80 93 94 01 	sts	0x0194, r24

	}
}
    1434:	27 96       	adiw	r28, 0x07	; 7
    1436:	0f b6       	in	r0, 0x3f	; 63
    1438:	f8 94       	cli
    143a:	de bf       	out	0x3e, r29	; 62
    143c:	0f be       	out	0x3f, r0	; 63
    143e:	cd bf       	out	0x3d, r28	; 61
    1440:	cf 91       	pop	r28
    1442:	df 91       	pop	r29
    1444:	1f 91       	pop	r17
    1446:	0f 91       	pop	r16
    1448:	ff 90       	pop	r15
    144a:	ef 90       	pop	r14
    144c:	df 90       	pop	r13
    144e:	cf 90       	pop	r12
    1450:	bf 90       	pop	r11
    1452:	af 90       	pop	r10
    1454:	9f 90       	pop	r9
    1456:	8f 90       	pop	r8
    1458:	08 95       	ret

0000145a <moteurAsservissement>:

void moteurAsservissement(U16 vitG,U16 vitD)
{
    145a:	6f 92       	push	r6
    145c:	7f 92       	push	r7
    145e:	8f 92       	push	r8
    1460:	9f 92       	push	r9
    1462:	af 92       	push	r10
    1464:	bf 92       	push	r11
    1466:	cf 92       	push	r12
    1468:	df 92       	push	r13
    146a:	ef 92       	push	r14
    146c:	ff 92       	push	r15
    146e:	0f 93       	push	r16
    1470:	1f 93       	push	r17
    1472:	df 93       	push	r29
    1474:	cf 93       	push	r28
    1476:	00 d0       	rcall	.+0      	; 0x1478 <moteurAsservissement+0x1e>
    1478:	00 d0       	rcall	.+0      	; 0x147a <moteurAsservissement+0x20>
    147a:	00 d0       	rcall	.+0      	; 0x147c <moteurAsservissement+0x22>
    147c:	cd b7       	in	r28, 0x3d	; 61
    147e:	de b7       	in	r29, 0x3e	; 62
    1480:	9c 83       	std	Y+4, r25	; 0x04
    1482:	8b 83       	std	Y+3, r24	; 0x03
    1484:	7e 83       	std	Y+6, r23	; 0x06
    1486:	6d 83       	std	Y+5, r22	; 0x05
U8 dutyValD;
U8 dutyValG;
	if((vitG!=lastVitG || vitD!=lastVitD)&&mMode==M_MARCHE)
    1488:	80 91 95 01 	lds	r24, 0x0195
    148c:	28 2f       	mov	r18, r24
    148e:	30 e0       	ldi	r19, 0x00	; 0
    1490:	8b 81       	ldd	r24, Y+3	; 0x03
    1492:	9c 81       	ldd	r25, Y+4	; 0x04
    1494:	28 17       	cp	r18, r24
    1496:	39 07       	cpc	r19, r25
    1498:	51 f4       	brne	.+20     	; 0x14ae <moteurAsservissement+0x54>
    149a:	80 91 96 01 	lds	r24, 0x0196
    149e:	28 2f       	mov	r18, r24
    14a0:	30 e0       	ldi	r19, 0x00	; 0
    14a2:	8d 81       	ldd	r24, Y+5	; 0x05
    14a4:	9e 81       	ldd	r25, Y+6	; 0x06
    14a6:	28 17       	cp	r18, r24
    14a8:	39 07       	cpc	r19, r25
    14aa:	09 f4       	brne	.+2      	; 0x14ae <moteurAsservissement+0x54>
    14ac:	51 c1       	rjmp	.+674    	; 0x1750 <moteurAsservissement+0x2f6>
    14ae:	80 91 97 01 	lds	r24, 0x0197
    14b2:	88 23       	and	r24, r24
    14b4:	09 f0       	breq	.+2      	; 0x14b8 <moteurAsservissement+0x5e>
    14b6:	4c c1       	rjmp	.+664    	; 0x1750 <moteurAsservissement+0x2f6>
	{
		if(vitG!=lastVitG)
    14b8:	80 91 95 01 	lds	r24, 0x0195
    14bc:	28 2f       	mov	r18, r24
    14be:	30 e0       	ldi	r19, 0x00	; 0
    14c0:	8b 81       	ldd	r24, Y+3	; 0x03
    14c2:	9c 81       	ldd	r25, Y+4	; 0x04
    14c4:	28 17       	cp	r18, r24
    14c6:	39 07       	cpc	r19, r25
    14c8:	39 f1       	breq	.+78     	; 0x1518 <moteurAsservissement+0xbe>
		{
			mVg=(float)((float)vitG-511)/511;
    14ca:	8b 81       	ldd	r24, Y+3	; 0x03
    14cc:	9c 81       	ldd	r25, Y+4	; 0x04
    14ce:	cc 01       	movw	r24, r24
    14d0:	a0 e0       	ldi	r26, 0x00	; 0
    14d2:	b0 e0       	ldi	r27, 0x00	; 0
    14d4:	bc 01       	movw	r22, r24
    14d6:	cd 01       	movw	r24, r26
    14d8:	0e 94 ab 10 	call	0x2156	; 0x2156 <__floatunsisf>
    14dc:	dc 01       	movw	r26, r24
    14de:	cb 01       	movw	r24, r22
    14e0:	bc 01       	movw	r22, r24
    14e2:	cd 01       	movw	r24, r26
    14e4:	20 e0       	ldi	r18, 0x00	; 0
    14e6:	30 e8       	ldi	r19, 0x80	; 128
    14e8:	4f ef       	ldi	r20, 0xFF	; 255
    14ea:	53 e4       	ldi	r21, 0x43	; 67
    14ec:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <__subsf3>
    14f0:	dc 01       	movw	r26, r24
    14f2:	cb 01       	movw	r24, r22
    14f4:	bc 01       	movw	r22, r24
    14f6:	cd 01       	movw	r24, r26
    14f8:	20 e0       	ldi	r18, 0x00	; 0
    14fa:	30 e8       	ldi	r19, 0x80	; 128
    14fc:	4f ef       	ldi	r20, 0xFF	; 255
    14fe:	53 e4       	ldi	r21, 0x43	; 67
    1500:	0e 94 8d 0e 	call	0x1d1a	; 0x1d1a <__divsf3>
    1504:	dc 01       	movw	r26, r24
    1506:	cb 01       	movw	r24, r22
    1508:	80 93 a0 01 	sts	0x01A0, r24
    150c:	90 93 a1 01 	sts	0x01A1, r25
    1510:	a0 93 a2 01 	sts	0x01A2, r26
    1514:	b0 93 a3 01 	sts	0x01A3, r27
			
		}

		if(vitD!=lastVitD)
    1518:	80 91 96 01 	lds	r24, 0x0196
    151c:	28 2f       	mov	r18, r24
    151e:	30 e0       	ldi	r19, 0x00	; 0
    1520:	8d 81       	ldd	r24, Y+5	; 0x05
    1522:	9e 81       	ldd	r25, Y+6	; 0x06
    1524:	28 17       	cp	r18, r24
    1526:	39 07       	cpc	r19, r25
    1528:	39 f1       	breq	.+78     	; 0x1578 <moteurAsservissement+0x11e>
		{
			mVd=(float)((float)vitD-511)/511;
    152a:	8d 81       	ldd	r24, Y+5	; 0x05
    152c:	9e 81       	ldd	r25, Y+6	; 0x06
    152e:	cc 01       	movw	r24, r24
    1530:	a0 e0       	ldi	r26, 0x00	; 0
    1532:	b0 e0       	ldi	r27, 0x00	; 0
    1534:	bc 01       	movw	r22, r24
    1536:	cd 01       	movw	r24, r26
    1538:	0e 94 ab 10 	call	0x2156	; 0x2156 <__floatunsisf>
    153c:	dc 01       	movw	r26, r24
    153e:	cb 01       	movw	r24, r22
    1540:	bc 01       	movw	r22, r24
    1542:	cd 01       	movw	r24, r26
    1544:	20 e0       	ldi	r18, 0x00	; 0
    1546:	30 e8       	ldi	r19, 0x80	; 128
    1548:	4f ef       	ldi	r20, 0xFF	; 255
    154a:	53 e4       	ldi	r21, 0x43	; 67
    154c:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <__subsf3>
    1550:	dc 01       	movw	r26, r24
    1552:	cb 01       	movw	r24, r22
    1554:	bc 01       	movw	r22, r24
    1556:	cd 01       	movw	r24, r26
    1558:	20 e0       	ldi	r18, 0x00	; 0
    155a:	30 e8       	ldi	r19, 0x80	; 128
    155c:	4f ef       	ldi	r20, 0xFF	; 255
    155e:	53 e4       	ldi	r21, 0x43	; 67
    1560:	0e 94 8d 0e 	call	0x1d1a	; 0x1d1a <__divsf3>
    1564:	dc 01       	movw	r26, r24
    1566:	cb 01       	movw	r24, r22
    1568:	80 93 a4 01 	sts	0x01A4, r24
    156c:	90 93 a5 01 	sts	0x01A5, r25
    1570:	a0 93 a6 01 	sts	0x01A6, r26
    1574:	b0 93 a7 01 	sts	0x01A7, r27
		}
			
		CalculPWM(mVitesse_D, mAngle_D,mVg,mVd,&mDuty_G,&mDuty_D);
    1578:	20 91 98 01 	lds	r18, 0x0198
    157c:	30 91 99 01 	lds	r19, 0x0199
    1580:	40 91 9a 01 	lds	r20, 0x019A
    1584:	50 91 9b 01 	lds	r21, 0x019B
    1588:	e0 90 9c 01 	lds	r14, 0x019C
    158c:	f0 90 9d 01 	lds	r15, 0x019D
    1590:	00 91 9e 01 	lds	r16, 0x019E
    1594:	10 91 9f 01 	lds	r17, 0x019F
    1598:	a0 90 a0 01 	lds	r10, 0x01A0
    159c:	b0 90 a1 01 	lds	r11, 0x01A1
    15a0:	c0 90 a2 01 	lds	r12, 0x01A2
    15a4:	d0 90 a3 01 	lds	r13, 0x01A3
    15a8:	60 90 a4 01 	lds	r6, 0x01A4
    15ac:	70 90 a5 01 	lds	r7, 0x01A5
    15b0:	80 90 a6 01 	lds	r8, 0x01A6
    15b4:	90 90 a7 01 	lds	r9, 0x01A7
    15b8:	00 d0       	rcall	.+0      	; 0x15ba <moteurAsservissement+0x160>
    15ba:	ed b7       	in	r30, 0x3d	; 61
    15bc:	fe b7       	in	r31, 0x3e	; 62
    15be:	31 96       	adiw	r30, 0x01	; 1
    15c0:	a8 ea       	ldi	r26, 0xA8	; 168
    15c2:	b1 e0       	ldi	r27, 0x01	; 1
    15c4:	8c ea       	ldi	r24, 0xAC	; 172
    15c6:	91 e0       	ldi	r25, 0x01	; 1
    15c8:	91 83       	std	Z+1, r25	; 0x01
    15ca:	80 83       	st	Z, r24
    15cc:	ca 01       	movw	r24, r20
    15ce:	b9 01       	movw	r22, r18
    15d0:	a8 01       	movw	r20, r16
    15d2:	97 01       	movw	r18, r14
    15d4:	86 01       	movw	r16, r12
    15d6:	75 01       	movw	r14, r10
    15d8:	64 01       	movw	r12, r8
    15da:	53 01       	movw	r10, r6
    15dc:	4d 01       	movw	r8, r26
    15de:	0e 94 2c 03 	call	0x658	; 0x658 <CalculPWM>
    15e2:	0f 90       	pop	r0
    15e4:	0f 90       	pop	r0

		//MODE AVANT
		if(mDuty_G<0)
    15e6:	80 91 a8 01 	lds	r24, 0x01A8
    15ea:	90 91 a9 01 	lds	r25, 0x01A9
    15ee:	a0 91 aa 01 	lds	r26, 0x01AA
    15f2:	b0 91 ab 01 	lds	r27, 0x01AB
    15f6:	bc 01       	movw	r22, r24
    15f8:	cd 01       	movw	r24, r26
    15fa:	20 e0       	ldi	r18, 0x00	; 0
    15fc:	30 e0       	ldi	r19, 0x00	; 0
    15fe:	40 e0       	ldi	r20, 0x00	; 0
    1600:	50 e0       	ldi	r21, 0x00	; 0
    1602:	0e 94 99 0f 	call	0x1f32	; 0x1f32 <__ltsf2>
    1606:	88 23       	and	r24, r24
    1608:	e4 f4       	brge	.+56     	; 0x1642 <moteurAsservissement+0x1e8>
		{
			M_DIR_G1=0;
    160a:	80 91 4f 02 	lds	r24, 0x024F
    160e:	8b 7f       	andi	r24, 0xFB	; 251
    1610:	80 93 4f 02 	sts	0x024F, r24
			M_DIR_G2=1;
    1614:	80 91 4f 02 	lds	r24, 0x024F
    1618:	88 60       	ori	r24, 0x08	; 8
    161a:	80 93 4f 02 	sts	0x024F, r24
			mDuty_G=mDuty_G*(-1);
    161e:	80 91 a8 01 	lds	r24, 0x01A8
    1622:	90 91 a9 01 	lds	r25, 0x01A9
    1626:	a0 91 aa 01 	lds	r26, 0x01AA
    162a:	b0 91 ab 01 	lds	r27, 0x01AB
    162e:	b0 58       	subi	r27, 0x80	; 128
    1630:	80 93 a8 01 	sts	0x01A8, r24
    1634:	90 93 a9 01 	sts	0x01A9, r25
    1638:	a0 93 aa 01 	sts	0x01AA, r26
    163c:	b0 93 ab 01 	sts	0x01AB, r27
    1640:	0a c0       	rjmp	.+20     	; 0x1656 <moteurAsservissement+0x1fc>
		}
		//MODE ARRIERE	
		else
		{
			M_DIR_G1=1;
    1642:	80 91 4f 02 	lds	r24, 0x024F
    1646:	84 60       	ori	r24, 0x04	; 4
    1648:	80 93 4f 02 	sts	0x024F, r24
			M_DIR_G2=0;	
    164c:	80 91 4f 02 	lds	r24, 0x024F
    1650:	87 7f       	andi	r24, 0xF7	; 247
    1652:	80 93 4f 02 	sts	0x024F, r24
		}	

		//MODE AVANT
		if(mDuty_D<0)
    1656:	80 91 ac 01 	lds	r24, 0x01AC
    165a:	90 91 ad 01 	lds	r25, 0x01AD
    165e:	a0 91 ae 01 	lds	r26, 0x01AE
    1662:	b0 91 af 01 	lds	r27, 0x01AF
    1666:	bc 01       	movw	r22, r24
    1668:	cd 01       	movw	r24, r26
    166a:	20 e0       	ldi	r18, 0x00	; 0
    166c:	30 e0       	ldi	r19, 0x00	; 0
    166e:	40 e0       	ldi	r20, 0x00	; 0
    1670:	50 e0       	ldi	r21, 0x00	; 0
    1672:	0e 94 99 0f 	call	0x1f32	; 0x1f32 <__ltsf2>
    1676:	88 23       	and	r24, r24
    1678:	e4 f4       	brge	.+56     	; 0x16b2 <moteurAsservissement+0x258>
		{
			M_DIR_D1=0;
    167a:	80 91 4f 02 	lds	r24, 0x024F
    167e:	8f 7b       	andi	r24, 0xBF	; 191
    1680:	80 93 4f 02 	sts	0x024F, r24
			M_DIR_D2=1;
    1684:	80 91 4f 02 	lds	r24, 0x024F
    1688:	80 68       	ori	r24, 0x80	; 128
    168a:	80 93 4f 02 	sts	0x024F, r24
			mDuty_D=mDuty_D*(-1);
    168e:	80 91 ac 01 	lds	r24, 0x01AC
    1692:	90 91 ad 01 	lds	r25, 0x01AD
    1696:	a0 91 ae 01 	lds	r26, 0x01AE
    169a:	b0 91 af 01 	lds	r27, 0x01AF
    169e:	b0 58       	subi	r27, 0x80	; 128
    16a0:	80 93 ac 01 	sts	0x01AC, r24
    16a4:	90 93 ad 01 	sts	0x01AD, r25
    16a8:	a0 93 ae 01 	sts	0x01AE, r26
    16ac:	b0 93 af 01 	sts	0x01AF, r27
    16b0:	0a c0       	rjmp	.+20     	; 0x16c6 <moteurAsservissement+0x26c>
		}
		//MODE ARRIERE	
		else
		{
			M_DIR_D1=1;
    16b2:	80 91 4f 02 	lds	r24, 0x024F
    16b6:	80 64       	ori	r24, 0x40	; 64
    16b8:	80 93 4f 02 	sts	0x024F, r24
			M_DIR_D2=0;	
    16bc:	80 91 4f 02 	lds	r24, 0x024F
    16c0:	8f 77       	andi	r24, 0x7F	; 127
    16c2:	80 93 4f 02 	sts	0x024F, r24
		}
		dutyValD=mDuty_D*255;
    16c6:	80 91 ac 01 	lds	r24, 0x01AC
    16ca:	90 91 ad 01 	lds	r25, 0x01AD
    16ce:	a0 91 ae 01 	lds	r26, 0x01AE
    16d2:	b0 91 af 01 	lds	r27, 0x01AF
    16d6:	bc 01       	movw	r22, r24
    16d8:	cd 01       	movw	r24, r26
    16da:	20 e0       	ldi	r18, 0x00	; 0
    16dc:	30 e0       	ldi	r19, 0x00	; 0
    16de:	4f e7       	ldi	r20, 0x7F	; 127
    16e0:	53 e4       	ldi	r21, 0x43	; 67
    16e2:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <__mulsf3>
    16e6:	dc 01       	movw	r26, r24
    16e8:	cb 01       	movw	r24, r22
    16ea:	bc 01       	movw	r22, r24
    16ec:	cd 01       	movw	r24, r26
    16ee:	0e 94 bd 0b 	call	0x177a	; 0x177a <__fixunssfsi>
    16f2:	dc 01       	movw	r26, r24
    16f4:	cb 01       	movw	r24, r22
    16f6:	8a 83       	std	Y+2, r24	; 0x02
		dutyValG=mDuty_D*255;	
    16f8:	80 91 ac 01 	lds	r24, 0x01AC
    16fc:	90 91 ad 01 	lds	r25, 0x01AD
    1700:	a0 91 ae 01 	lds	r26, 0x01AE
    1704:	b0 91 af 01 	lds	r27, 0x01AF
    1708:	bc 01       	movw	r22, r24
    170a:	cd 01       	movw	r24, r26
    170c:	20 e0       	ldi	r18, 0x00	; 0
    170e:	30 e0       	ldi	r19, 0x00	; 0
    1710:	4f e7       	ldi	r20, 0x7F	; 127
    1712:	53 e4       	ldi	r21, 0x43	; 67
    1714:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <__mulsf3>
    1718:	dc 01       	movw	r26, r24
    171a:	cb 01       	movw	r24, r22
    171c:	bc 01       	movw	r22, r24
    171e:	cd 01       	movw	r24, r26
    1720:	0e 94 bd 0b 	call	0x177a	; 0x177a <__fixunssfsi>
    1724:	dc 01       	movw	r26, r24
    1726:	cb 01       	movw	r24, r22
    1728:	89 83       	std	Y+1, r24	; 0x01
		pwmSetDutyValue(dutyValD,dutyValG,mPortDREG.byte);
    172a:	8a 81       	ldd	r24, Y+2	; 0x02
    172c:	48 2f       	mov	r20, r24
    172e:	50 e0       	ldi	r21, 0x00	; 0
    1730:	89 81       	ldd	r24, Y+1	; 0x01
    1732:	28 2f       	mov	r18, r24
    1734:	30 e0       	ldi	r19, 0x00	; 0
    1736:	e0 91 4f 02 	lds	r30, 0x024F
    173a:	ca 01       	movw	r24, r20
    173c:	b9 01       	movw	r22, r18
    173e:	4e 2f       	mov	r20, r30
    1740:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <pwmSetDutyValue>
		lastVitG=vitG;
    1744:	8b 81       	ldd	r24, Y+3	; 0x03
    1746:	80 93 95 01 	sts	0x0195, r24
		lastVitD=vitD;
    174a:	8d 81       	ldd	r24, Y+5	; 0x05
    174c:	80 93 96 01 	sts	0x0196, r24
	}



}
    1750:	26 96       	adiw	r28, 0x06	; 6
    1752:	0f b6       	in	r0, 0x3f	; 63
    1754:	f8 94       	cli
    1756:	de bf       	out	0x3e, r29	; 62
    1758:	0f be       	out	0x3f, r0	; 63
    175a:	cd bf       	out	0x3d, r28	; 61
    175c:	cf 91       	pop	r28
    175e:	df 91       	pop	r29
    1760:	1f 91       	pop	r17
    1762:	0f 91       	pop	r16
    1764:	ff 90       	pop	r15
    1766:	ef 90       	pop	r14
    1768:	df 90       	pop	r13
    176a:	cf 90       	pop	r12
    176c:	bf 90       	pop	r11
    176e:	af 90       	pop	r10
    1770:	9f 90       	pop	r9
    1772:	8f 90       	pop	r8
    1774:	7f 90       	pop	r7
    1776:	6f 90       	pop	r6
    1778:	08 95       	ret

0000177a <__fixunssfsi>:
    177a:	ef 92       	push	r14
    177c:	ff 92       	push	r15
    177e:	0f 93       	push	r16
    1780:	1f 93       	push	r17
    1782:	7b 01       	movw	r14, r22
    1784:	8c 01       	movw	r16, r24
    1786:	20 e0       	ldi	r18, 0x00	; 0
    1788:	30 e0       	ldi	r19, 0x00	; 0
    178a:	40 e0       	ldi	r20, 0x00	; 0
    178c:	5f e4       	ldi	r21, 0x4F	; 79
    178e:	0e 94 69 0f 	call	0x1ed2	; 0x1ed2 <__gesf2>
    1792:	88 23       	and	r24, r24
    1794:	8c f0       	brlt	.+34     	; 0x17b8 <__fixunssfsi+0x3e>
    1796:	c8 01       	movw	r24, r16
    1798:	b7 01       	movw	r22, r14
    179a:	20 e0       	ldi	r18, 0x00	; 0
    179c:	30 e0       	ldi	r19, 0x00	; 0
    179e:	40 e0       	ldi	r20, 0x00	; 0
    17a0:	5f e4       	ldi	r21, 0x4F	; 79
    17a2:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <__subsf3>
    17a6:	0e 94 57 10 	call	0x20ae	; 0x20ae <__fixsfsi>
    17aa:	9b 01       	movw	r18, r22
    17ac:	ac 01       	movw	r20, r24
    17ae:	20 50       	subi	r18, 0x00	; 0
    17b0:	30 40       	sbci	r19, 0x00	; 0
    17b2:	40 40       	sbci	r20, 0x00	; 0
    17b4:	50 48       	sbci	r21, 0x80	; 128
    17b6:	06 c0       	rjmp	.+12     	; 0x17c4 <__fixunssfsi+0x4a>
    17b8:	c8 01       	movw	r24, r16
    17ba:	b7 01       	movw	r22, r14
    17bc:	0e 94 57 10 	call	0x20ae	; 0x20ae <__fixsfsi>
    17c0:	9b 01       	movw	r18, r22
    17c2:	ac 01       	movw	r20, r24
    17c4:	b9 01       	movw	r22, r18
    17c6:	ca 01       	movw	r24, r20
    17c8:	1f 91       	pop	r17
    17ca:	0f 91       	pop	r16
    17cc:	ff 90       	pop	r15
    17ce:	ef 90       	pop	r14
    17d0:	08 95       	ret

000017d2 <_fpadd_parts>:
    17d2:	a0 e0       	ldi	r26, 0x00	; 0
    17d4:	b0 e0       	ldi	r27, 0x00	; 0
    17d6:	ef ee       	ldi	r30, 0xEF	; 239
    17d8:	fb e0       	ldi	r31, 0x0B	; 11
    17da:	0c 94 19 13 	jmp	0x2632	; 0x2632 <__prologue_saves__>
    17de:	dc 01       	movw	r26, r24
    17e0:	2b 01       	movw	r4, r22
    17e2:	fa 01       	movw	r30, r20
    17e4:	9c 91       	ld	r25, X
    17e6:	92 30       	cpi	r25, 0x02	; 2
    17e8:	08 f4       	brcc	.+2      	; 0x17ec <_fpadd_parts+0x1a>
    17ea:	39 c1       	rjmp	.+626    	; 0x1a5e <_fpadd_parts+0x28c>
    17ec:	eb 01       	movw	r28, r22
    17ee:	88 81       	ld	r24, Y
    17f0:	82 30       	cpi	r24, 0x02	; 2
    17f2:	08 f4       	brcc	.+2      	; 0x17f6 <_fpadd_parts+0x24>
    17f4:	33 c1       	rjmp	.+614    	; 0x1a5c <_fpadd_parts+0x28a>
    17f6:	94 30       	cpi	r25, 0x04	; 4
    17f8:	69 f4       	brne	.+26     	; 0x1814 <_fpadd_parts+0x42>
    17fa:	84 30       	cpi	r24, 0x04	; 4
    17fc:	09 f0       	breq	.+2      	; 0x1800 <_fpadd_parts+0x2e>
    17fe:	2f c1       	rjmp	.+606    	; 0x1a5e <_fpadd_parts+0x28c>
    1800:	11 96       	adiw	r26, 0x01	; 1
    1802:	9c 91       	ld	r25, X
    1804:	11 97       	sbiw	r26, 0x01	; 1
    1806:	89 81       	ldd	r24, Y+1	; 0x01
    1808:	98 17       	cp	r25, r24
    180a:	09 f4       	brne	.+2      	; 0x180e <_fpadd_parts+0x3c>
    180c:	28 c1       	rjmp	.+592    	; 0x1a5e <_fpadd_parts+0x28c>
    180e:	a2 e8       	ldi	r26, 0x82	; 130
    1810:	b0 e0       	ldi	r27, 0x00	; 0
    1812:	25 c1       	rjmp	.+586    	; 0x1a5e <_fpadd_parts+0x28c>
    1814:	84 30       	cpi	r24, 0x04	; 4
    1816:	09 f4       	brne	.+2      	; 0x181a <_fpadd_parts+0x48>
    1818:	21 c1       	rjmp	.+578    	; 0x1a5c <_fpadd_parts+0x28a>
    181a:	82 30       	cpi	r24, 0x02	; 2
    181c:	a9 f4       	brne	.+42     	; 0x1848 <_fpadd_parts+0x76>
    181e:	92 30       	cpi	r25, 0x02	; 2
    1820:	09 f0       	breq	.+2      	; 0x1824 <_fpadd_parts+0x52>
    1822:	1d c1       	rjmp	.+570    	; 0x1a5e <_fpadd_parts+0x28c>
    1824:	9a 01       	movw	r18, r20
    1826:	ad 01       	movw	r20, r26
    1828:	88 e0       	ldi	r24, 0x08	; 8
    182a:	ea 01       	movw	r28, r20
    182c:	09 90       	ld	r0, Y+
    182e:	ae 01       	movw	r20, r28
    1830:	e9 01       	movw	r28, r18
    1832:	09 92       	st	Y+, r0
    1834:	9e 01       	movw	r18, r28
    1836:	81 50       	subi	r24, 0x01	; 1
    1838:	c1 f7       	brne	.-16     	; 0x182a <_fpadd_parts+0x58>
    183a:	e2 01       	movw	r28, r4
    183c:	89 81       	ldd	r24, Y+1	; 0x01
    183e:	11 96       	adiw	r26, 0x01	; 1
    1840:	9c 91       	ld	r25, X
    1842:	89 23       	and	r24, r25
    1844:	81 83       	std	Z+1, r24	; 0x01
    1846:	08 c1       	rjmp	.+528    	; 0x1a58 <_fpadd_parts+0x286>
    1848:	92 30       	cpi	r25, 0x02	; 2
    184a:	09 f4       	brne	.+2      	; 0x184e <_fpadd_parts+0x7c>
    184c:	07 c1       	rjmp	.+526    	; 0x1a5c <_fpadd_parts+0x28a>
    184e:	12 96       	adiw	r26, 0x02	; 2
    1850:	2d 90       	ld	r2, X+
    1852:	3c 90       	ld	r3, X
    1854:	13 97       	sbiw	r26, 0x03	; 3
    1856:	eb 01       	movw	r28, r22
    1858:	8a 81       	ldd	r24, Y+2	; 0x02
    185a:	9b 81       	ldd	r25, Y+3	; 0x03
    185c:	14 96       	adiw	r26, 0x04	; 4
    185e:	ad 90       	ld	r10, X+
    1860:	bd 90       	ld	r11, X+
    1862:	cd 90       	ld	r12, X+
    1864:	dc 90       	ld	r13, X
    1866:	17 97       	sbiw	r26, 0x07	; 7
    1868:	ec 80       	ldd	r14, Y+4	; 0x04
    186a:	fd 80       	ldd	r15, Y+5	; 0x05
    186c:	0e 81       	ldd	r16, Y+6	; 0x06
    186e:	1f 81       	ldd	r17, Y+7	; 0x07
    1870:	91 01       	movw	r18, r2
    1872:	28 1b       	sub	r18, r24
    1874:	39 0b       	sbc	r19, r25
    1876:	b9 01       	movw	r22, r18
    1878:	37 ff       	sbrs	r19, 7
    187a:	04 c0       	rjmp	.+8      	; 0x1884 <_fpadd_parts+0xb2>
    187c:	66 27       	eor	r22, r22
    187e:	77 27       	eor	r23, r23
    1880:	62 1b       	sub	r22, r18
    1882:	73 0b       	sbc	r23, r19
    1884:	60 32       	cpi	r22, 0x20	; 32
    1886:	71 05       	cpc	r23, r1
    1888:	0c f0       	brlt	.+2      	; 0x188c <_fpadd_parts+0xba>
    188a:	61 c0       	rjmp	.+194    	; 0x194e <_fpadd_parts+0x17c>
    188c:	12 16       	cp	r1, r18
    188e:	13 06       	cpc	r1, r19
    1890:	6c f5       	brge	.+90     	; 0x18ec <_fpadd_parts+0x11a>
    1892:	37 01       	movw	r6, r14
    1894:	48 01       	movw	r8, r16
    1896:	06 2e       	mov	r0, r22
    1898:	04 c0       	rjmp	.+8      	; 0x18a2 <_fpadd_parts+0xd0>
    189a:	96 94       	lsr	r9
    189c:	87 94       	ror	r8
    189e:	77 94       	ror	r7
    18a0:	67 94       	ror	r6
    18a2:	0a 94       	dec	r0
    18a4:	d2 f7       	brpl	.-12     	; 0x189a <_fpadd_parts+0xc8>
    18a6:	21 e0       	ldi	r18, 0x01	; 1
    18a8:	30 e0       	ldi	r19, 0x00	; 0
    18aa:	40 e0       	ldi	r20, 0x00	; 0
    18ac:	50 e0       	ldi	r21, 0x00	; 0
    18ae:	04 c0       	rjmp	.+8      	; 0x18b8 <_fpadd_parts+0xe6>
    18b0:	22 0f       	add	r18, r18
    18b2:	33 1f       	adc	r19, r19
    18b4:	44 1f       	adc	r20, r20
    18b6:	55 1f       	adc	r21, r21
    18b8:	6a 95       	dec	r22
    18ba:	d2 f7       	brpl	.-12     	; 0x18b0 <_fpadd_parts+0xde>
    18bc:	21 50       	subi	r18, 0x01	; 1
    18be:	30 40       	sbci	r19, 0x00	; 0
    18c0:	40 40       	sbci	r20, 0x00	; 0
    18c2:	50 40       	sbci	r21, 0x00	; 0
    18c4:	2e 21       	and	r18, r14
    18c6:	3f 21       	and	r19, r15
    18c8:	40 23       	and	r20, r16
    18ca:	51 23       	and	r21, r17
    18cc:	21 15       	cp	r18, r1
    18ce:	31 05       	cpc	r19, r1
    18d0:	41 05       	cpc	r20, r1
    18d2:	51 05       	cpc	r21, r1
    18d4:	21 f0       	breq	.+8      	; 0x18de <_fpadd_parts+0x10c>
    18d6:	21 e0       	ldi	r18, 0x01	; 1
    18d8:	30 e0       	ldi	r19, 0x00	; 0
    18da:	40 e0       	ldi	r20, 0x00	; 0
    18dc:	50 e0       	ldi	r21, 0x00	; 0
    18de:	79 01       	movw	r14, r18
    18e0:	8a 01       	movw	r16, r20
    18e2:	e6 28       	or	r14, r6
    18e4:	f7 28       	or	r15, r7
    18e6:	08 29       	or	r16, r8
    18e8:	19 29       	or	r17, r9
    18ea:	3c c0       	rjmp	.+120    	; 0x1964 <_fpadd_parts+0x192>
    18ec:	23 2b       	or	r18, r19
    18ee:	d1 f1       	breq	.+116    	; 0x1964 <_fpadd_parts+0x192>
    18f0:	26 0e       	add	r2, r22
    18f2:	37 1e       	adc	r3, r23
    18f4:	35 01       	movw	r6, r10
    18f6:	46 01       	movw	r8, r12
    18f8:	06 2e       	mov	r0, r22
    18fa:	04 c0       	rjmp	.+8      	; 0x1904 <_fpadd_parts+0x132>
    18fc:	96 94       	lsr	r9
    18fe:	87 94       	ror	r8
    1900:	77 94       	ror	r7
    1902:	67 94       	ror	r6
    1904:	0a 94       	dec	r0
    1906:	d2 f7       	brpl	.-12     	; 0x18fc <_fpadd_parts+0x12a>
    1908:	21 e0       	ldi	r18, 0x01	; 1
    190a:	30 e0       	ldi	r19, 0x00	; 0
    190c:	40 e0       	ldi	r20, 0x00	; 0
    190e:	50 e0       	ldi	r21, 0x00	; 0
    1910:	04 c0       	rjmp	.+8      	; 0x191a <_fpadd_parts+0x148>
    1912:	22 0f       	add	r18, r18
    1914:	33 1f       	adc	r19, r19
    1916:	44 1f       	adc	r20, r20
    1918:	55 1f       	adc	r21, r21
    191a:	6a 95       	dec	r22
    191c:	d2 f7       	brpl	.-12     	; 0x1912 <_fpadd_parts+0x140>
    191e:	21 50       	subi	r18, 0x01	; 1
    1920:	30 40       	sbci	r19, 0x00	; 0
    1922:	40 40       	sbci	r20, 0x00	; 0
    1924:	50 40       	sbci	r21, 0x00	; 0
    1926:	2a 21       	and	r18, r10
    1928:	3b 21       	and	r19, r11
    192a:	4c 21       	and	r20, r12
    192c:	5d 21       	and	r21, r13
    192e:	21 15       	cp	r18, r1
    1930:	31 05       	cpc	r19, r1
    1932:	41 05       	cpc	r20, r1
    1934:	51 05       	cpc	r21, r1
    1936:	21 f0       	breq	.+8      	; 0x1940 <_fpadd_parts+0x16e>
    1938:	21 e0       	ldi	r18, 0x01	; 1
    193a:	30 e0       	ldi	r19, 0x00	; 0
    193c:	40 e0       	ldi	r20, 0x00	; 0
    193e:	50 e0       	ldi	r21, 0x00	; 0
    1940:	59 01       	movw	r10, r18
    1942:	6a 01       	movw	r12, r20
    1944:	a6 28       	or	r10, r6
    1946:	b7 28       	or	r11, r7
    1948:	c8 28       	or	r12, r8
    194a:	d9 28       	or	r13, r9
    194c:	0b c0       	rjmp	.+22     	; 0x1964 <_fpadd_parts+0x192>
    194e:	82 15       	cp	r24, r2
    1950:	93 05       	cpc	r25, r3
    1952:	2c f0       	brlt	.+10     	; 0x195e <_fpadd_parts+0x18c>
    1954:	1c 01       	movw	r2, r24
    1956:	aa 24       	eor	r10, r10
    1958:	bb 24       	eor	r11, r11
    195a:	65 01       	movw	r12, r10
    195c:	03 c0       	rjmp	.+6      	; 0x1964 <_fpadd_parts+0x192>
    195e:	ee 24       	eor	r14, r14
    1960:	ff 24       	eor	r15, r15
    1962:	87 01       	movw	r16, r14
    1964:	11 96       	adiw	r26, 0x01	; 1
    1966:	9c 91       	ld	r25, X
    1968:	d2 01       	movw	r26, r4
    196a:	11 96       	adiw	r26, 0x01	; 1
    196c:	8c 91       	ld	r24, X
    196e:	98 17       	cp	r25, r24
    1970:	09 f4       	brne	.+2      	; 0x1974 <_fpadd_parts+0x1a2>
    1972:	45 c0       	rjmp	.+138    	; 0x19fe <_fpadd_parts+0x22c>
    1974:	99 23       	and	r25, r25
    1976:	39 f0       	breq	.+14     	; 0x1986 <_fpadd_parts+0x1b4>
    1978:	a8 01       	movw	r20, r16
    197a:	97 01       	movw	r18, r14
    197c:	2a 19       	sub	r18, r10
    197e:	3b 09       	sbc	r19, r11
    1980:	4c 09       	sbc	r20, r12
    1982:	5d 09       	sbc	r21, r13
    1984:	06 c0       	rjmp	.+12     	; 0x1992 <_fpadd_parts+0x1c0>
    1986:	a6 01       	movw	r20, r12
    1988:	95 01       	movw	r18, r10
    198a:	2e 19       	sub	r18, r14
    198c:	3f 09       	sbc	r19, r15
    198e:	40 0b       	sbc	r20, r16
    1990:	51 0b       	sbc	r21, r17
    1992:	57 fd       	sbrc	r21, 7
    1994:	08 c0       	rjmp	.+16     	; 0x19a6 <_fpadd_parts+0x1d4>
    1996:	11 82       	std	Z+1, r1	; 0x01
    1998:	33 82       	std	Z+3, r3	; 0x03
    199a:	22 82       	std	Z+2, r2	; 0x02
    199c:	24 83       	std	Z+4, r18	; 0x04
    199e:	35 83       	std	Z+5, r19	; 0x05
    19a0:	46 83       	std	Z+6, r20	; 0x06
    19a2:	57 83       	std	Z+7, r21	; 0x07
    19a4:	1d c0       	rjmp	.+58     	; 0x19e0 <_fpadd_parts+0x20e>
    19a6:	81 e0       	ldi	r24, 0x01	; 1
    19a8:	81 83       	std	Z+1, r24	; 0x01
    19aa:	33 82       	std	Z+3, r3	; 0x03
    19ac:	22 82       	std	Z+2, r2	; 0x02
    19ae:	88 27       	eor	r24, r24
    19b0:	99 27       	eor	r25, r25
    19b2:	dc 01       	movw	r26, r24
    19b4:	82 1b       	sub	r24, r18
    19b6:	93 0b       	sbc	r25, r19
    19b8:	a4 0b       	sbc	r26, r20
    19ba:	b5 0b       	sbc	r27, r21
    19bc:	84 83       	std	Z+4, r24	; 0x04
    19be:	95 83       	std	Z+5, r25	; 0x05
    19c0:	a6 83       	std	Z+6, r26	; 0x06
    19c2:	b7 83       	std	Z+7, r27	; 0x07
    19c4:	0d c0       	rjmp	.+26     	; 0x19e0 <_fpadd_parts+0x20e>
    19c6:	22 0f       	add	r18, r18
    19c8:	33 1f       	adc	r19, r19
    19ca:	44 1f       	adc	r20, r20
    19cc:	55 1f       	adc	r21, r21
    19ce:	24 83       	std	Z+4, r18	; 0x04
    19d0:	35 83       	std	Z+5, r19	; 0x05
    19d2:	46 83       	std	Z+6, r20	; 0x06
    19d4:	57 83       	std	Z+7, r21	; 0x07
    19d6:	82 81       	ldd	r24, Z+2	; 0x02
    19d8:	93 81       	ldd	r25, Z+3	; 0x03
    19da:	01 97       	sbiw	r24, 0x01	; 1
    19dc:	93 83       	std	Z+3, r25	; 0x03
    19de:	82 83       	std	Z+2, r24	; 0x02
    19e0:	24 81       	ldd	r18, Z+4	; 0x04
    19e2:	35 81       	ldd	r19, Z+5	; 0x05
    19e4:	46 81       	ldd	r20, Z+6	; 0x06
    19e6:	57 81       	ldd	r21, Z+7	; 0x07
    19e8:	da 01       	movw	r26, r20
    19ea:	c9 01       	movw	r24, r18
    19ec:	01 97       	sbiw	r24, 0x01	; 1
    19ee:	a1 09       	sbc	r26, r1
    19f0:	b1 09       	sbc	r27, r1
    19f2:	8f 5f       	subi	r24, 0xFF	; 255
    19f4:	9f 4f       	sbci	r25, 0xFF	; 255
    19f6:	af 4f       	sbci	r26, 0xFF	; 255
    19f8:	bf 43       	sbci	r27, 0x3F	; 63
    19fa:	28 f3       	brcs	.-54     	; 0x19c6 <_fpadd_parts+0x1f4>
    19fc:	0b c0       	rjmp	.+22     	; 0x1a14 <_fpadd_parts+0x242>
    19fe:	91 83       	std	Z+1, r25	; 0x01
    1a00:	33 82       	std	Z+3, r3	; 0x03
    1a02:	22 82       	std	Z+2, r2	; 0x02
    1a04:	ea 0c       	add	r14, r10
    1a06:	fb 1c       	adc	r15, r11
    1a08:	0c 1d       	adc	r16, r12
    1a0a:	1d 1d       	adc	r17, r13
    1a0c:	e4 82       	std	Z+4, r14	; 0x04
    1a0e:	f5 82       	std	Z+5, r15	; 0x05
    1a10:	06 83       	std	Z+6, r16	; 0x06
    1a12:	17 83       	std	Z+7, r17	; 0x07
    1a14:	83 e0       	ldi	r24, 0x03	; 3
    1a16:	80 83       	st	Z, r24
    1a18:	24 81       	ldd	r18, Z+4	; 0x04
    1a1a:	35 81       	ldd	r19, Z+5	; 0x05
    1a1c:	46 81       	ldd	r20, Z+6	; 0x06
    1a1e:	57 81       	ldd	r21, Z+7	; 0x07
    1a20:	57 ff       	sbrs	r21, 7
    1a22:	1a c0       	rjmp	.+52     	; 0x1a58 <_fpadd_parts+0x286>
    1a24:	c9 01       	movw	r24, r18
    1a26:	aa 27       	eor	r26, r26
    1a28:	97 fd       	sbrc	r25, 7
    1a2a:	a0 95       	com	r26
    1a2c:	ba 2f       	mov	r27, r26
    1a2e:	81 70       	andi	r24, 0x01	; 1
    1a30:	90 70       	andi	r25, 0x00	; 0
    1a32:	a0 70       	andi	r26, 0x00	; 0
    1a34:	b0 70       	andi	r27, 0x00	; 0
    1a36:	56 95       	lsr	r21
    1a38:	47 95       	ror	r20
    1a3a:	37 95       	ror	r19
    1a3c:	27 95       	ror	r18
    1a3e:	82 2b       	or	r24, r18
    1a40:	93 2b       	or	r25, r19
    1a42:	a4 2b       	or	r26, r20
    1a44:	b5 2b       	or	r27, r21
    1a46:	84 83       	std	Z+4, r24	; 0x04
    1a48:	95 83       	std	Z+5, r25	; 0x05
    1a4a:	a6 83       	std	Z+6, r26	; 0x06
    1a4c:	b7 83       	std	Z+7, r27	; 0x07
    1a4e:	82 81       	ldd	r24, Z+2	; 0x02
    1a50:	93 81       	ldd	r25, Z+3	; 0x03
    1a52:	01 96       	adiw	r24, 0x01	; 1
    1a54:	93 83       	std	Z+3, r25	; 0x03
    1a56:	82 83       	std	Z+2, r24	; 0x02
    1a58:	df 01       	movw	r26, r30
    1a5a:	01 c0       	rjmp	.+2      	; 0x1a5e <_fpadd_parts+0x28c>
    1a5c:	d2 01       	movw	r26, r4
    1a5e:	cd 01       	movw	r24, r26
    1a60:	cd b7       	in	r28, 0x3d	; 61
    1a62:	de b7       	in	r29, 0x3e	; 62
    1a64:	e2 e1       	ldi	r30, 0x12	; 18
    1a66:	0c 94 35 13 	jmp	0x266a	; 0x266a <__epilogue_restores__>

00001a6a <__subsf3>:
    1a6a:	a0 e2       	ldi	r26, 0x20	; 32
    1a6c:	b0 e0       	ldi	r27, 0x00	; 0
    1a6e:	eb e3       	ldi	r30, 0x3B	; 59
    1a70:	fd e0       	ldi	r31, 0x0D	; 13
    1a72:	0c 94 25 13 	jmp	0x264a	; 0x264a <__prologue_saves__+0x18>
    1a76:	69 83       	std	Y+1, r22	; 0x01
    1a78:	7a 83       	std	Y+2, r23	; 0x02
    1a7a:	8b 83       	std	Y+3, r24	; 0x03
    1a7c:	9c 83       	std	Y+4, r25	; 0x04
    1a7e:	2d 83       	std	Y+5, r18	; 0x05
    1a80:	3e 83       	std	Y+6, r19	; 0x06
    1a82:	4f 83       	std	Y+7, r20	; 0x07
    1a84:	58 87       	std	Y+8, r21	; 0x08
    1a86:	e9 e0       	ldi	r30, 0x09	; 9
    1a88:	ee 2e       	mov	r14, r30
    1a8a:	f1 2c       	mov	r15, r1
    1a8c:	ec 0e       	add	r14, r28
    1a8e:	fd 1e       	adc	r15, r29
    1a90:	ce 01       	movw	r24, r28
    1a92:	01 96       	adiw	r24, 0x01	; 1
    1a94:	b7 01       	movw	r22, r14
    1a96:	0e 94 48 12 	call	0x2490	; 0x2490 <__unpack_f>
    1a9a:	8e 01       	movw	r16, r28
    1a9c:	0f 5e       	subi	r16, 0xEF	; 239
    1a9e:	1f 4f       	sbci	r17, 0xFF	; 255
    1aa0:	ce 01       	movw	r24, r28
    1aa2:	05 96       	adiw	r24, 0x05	; 5
    1aa4:	b8 01       	movw	r22, r16
    1aa6:	0e 94 48 12 	call	0x2490	; 0x2490 <__unpack_f>
    1aaa:	8a 89       	ldd	r24, Y+18	; 0x12
    1aac:	91 e0       	ldi	r25, 0x01	; 1
    1aae:	89 27       	eor	r24, r25
    1ab0:	8a 8b       	std	Y+18, r24	; 0x12
    1ab2:	c7 01       	movw	r24, r14
    1ab4:	b8 01       	movw	r22, r16
    1ab6:	ae 01       	movw	r20, r28
    1ab8:	47 5e       	subi	r20, 0xE7	; 231
    1aba:	5f 4f       	sbci	r21, 0xFF	; 255
    1abc:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <_fpadd_parts>
    1ac0:	0e 94 73 11 	call	0x22e6	; 0x22e6 <__pack_f>
    1ac4:	a0 96       	adiw	r28, 0x20	; 32
    1ac6:	e6 e0       	ldi	r30, 0x06	; 6
    1ac8:	0c 94 41 13 	jmp	0x2682	; 0x2682 <__epilogue_restores__+0x18>

00001acc <__addsf3>:
    1acc:	a0 e2       	ldi	r26, 0x20	; 32
    1ace:	b0 e0       	ldi	r27, 0x00	; 0
    1ad0:	ec e6       	ldi	r30, 0x6C	; 108
    1ad2:	fd e0       	ldi	r31, 0x0D	; 13
    1ad4:	0c 94 25 13 	jmp	0x264a	; 0x264a <__prologue_saves__+0x18>
    1ad8:	69 83       	std	Y+1, r22	; 0x01
    1ada:	7a 83       	std	Y+2, r23	; 0x02
    1adc:	8b 83       	std	Y+3, r24	; 0x03
    1ade:	9c 83       	std	Y+4, r25	; 0x04
    1ae0:	2d 83       	std	Y+5, r18	; 0x05
    1ae2:	3e 83       	std	Y+6, r19	; 0x06
    1ae4:	4f 83       	std	Y+7, r20	; 0x07
    1ae6:	58 87       	std	Y+8, r21	; 0x08
    1ae8:	f9 e0       	ldi	r31, 0x09	; 9
    1aea:	ef 2e       	mov	r14, r31
    1aec:	f1 2c       	mov	r15, r1
    1aee:	ec 0e       	add	r14, r28
    1af0:	fd 1e       	adc	r15, r29
    1af2:	ce 01       	movw	r24, r28
    1af4:	01 96       	adiw	r24, 0x01	; 1
    1af6:	b7 01       	movw	r22, r14
    1af8:	0e 94 48 12 	call	0x2490	; 0x2490 <__unpack_f>
    1afc:	8e 01       	movw	r16, r28
    1afe:	0f 5e       	subi	r16, 0xEF	; 239
    1b00:	1f 4f       	sbci	r17, 0xFF	; 255
    1b02:	ce 01       	movw	r24, r28
    1b04:	05 96       	adiw	r24, 0x05	; 5
    1b06:	b8 01       	movw	r22, r16
    1b08:	0e 94 48 12 	call	0x2490	; 0x2490 <__unpack_f>
    1b0c:	c7 01       	movw	r24, r14
    1b0e:	b8 01       	movw	r22, r16
    1b10:	ae 01       	movw	r20, r28
    1b12:	47 5e       	subi	r20, 0xE7	; 231
    1b14:	5f 4f       	sbci	r21, 0xFF	; 255
    1b16:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <_fpadd_parts>
    1b1a:	0e 94 73 11 	call	0x22e6	; 0x22e6 <__pack_f>
    1b1e:	a0 96       	adiw	r28, 0x20	; 32
    1b20:	e6 e0       	ldi	r30, 0x06	; 6
    1b22:	0c 94 41 13 	jmp	0x2682	; 0x2682 <__epilogue_restores__+0x18>

00001b26 <__mulsf3>:
    1b26:	a0 e2       	ldi	r26, 0x20	; 32
    1b28:	b0 e0       	ldi	r27, 0x00	; 0
    1b2a:	e9 e9       	ldi	r30, 0x99	; 153
    1b2c:	fd e0       	ldi	r31, 0x0D	; 13
    1b2e:	0c 94 19 13 	jmp	0x2632	; 0x2632 <__prologue_saves__>
    1b32:	69 83       	std	Y+1, r22	; 0x01
    1b34:	7a 83       	std	Y+2, r23	; 0x02
    1b36:	8b 83       	std	Y+3, r24	; 0x03
    1b38:	9c 83       	std	Y+4, r25	; 0x04
    1b3a:	2d 83       	std	Y+5, r18	; 0x05
    1b3c:	3e 83       	std	Y+6, r19	; 0x06
    1b3e:	4f 83       	std	Y+7, r20	; 0x07
    1b40:	58 87       	std	Y+8, r21	; 0x08
    1b42:	ce 01       	movw	r24, r28
    1b44:	01 96       	adiw	r24, 0x01	; 1
    1b46:	be 01       	movw	r22, r28
    1b48:	67 5f       	subi	r22, 0xF7	; 247
    1b4a:	7f 4f       	sbci	r23, 0xFF	; 255
    1b4c:	0e 94 48 12 	call	0x2490	; 0x2490 <__unpack_f>
    1b50:	ce 01       	movw	r24, r28
    1b52:	05 96       	adiw	r24, 0x05	; 5
    1b54:	be 01       	movw	r22, r28
    1b56:	6f 5e       	subi	r22, 0xEF	; 239
    1b58:	7f 4f       	sbci	r23, 0xFF	; 255
    1b5a:	0e 94 48 12 	call	0x2490	; 0x2490 <__unpack_f>
    1b5e:	99 85       	ldd	r25, Y+9	; 0x09
    1b60:	92 30       	cpi	r25, 0x02	; 2
    1b62:	88 f0       	brcs	.+34     	; 0x1b86 <__mulsf3+0x60>
    1b64:	89 89       	ldd	r24, Y+17	; 0x11
    1b66:	82 30       	cpi	r24, 0x02	; 2
    1b68:	c8 f0       	brcs	.+50     	; 0x1b9c <__mulsf3+0x76>
    1b6a:	94 30       	cpi	r25, 0x04	; 4
    1b6c:	19 f4       	brne	.+6      	; 0x1b74 <__mulsf3+0x4e>
    1b6e:	82 30       	cpi	r24, 0x02	; 2
    1b70:	51 f4       	brne	.+20     	; 0x1b86 <__mulsf3+0x60>
    1b72:	04 c0       	rjmp	.+8      	; 0x1b7c <__mulsf3+0x56>
    1b74:	84 30       	cpi	r24, 0x04	; 4
    1b76:	29 f4       	brne	.+10     	; 0x1b82 <__mulsf3+0x5c>
    1b78:	92 30       	cpi	r25, 0x02	; 2
    1b7a:	81 f4       	brne	.+32     	; 0x1b9c <__mulsf3+0x76>
    1b7c:	82 e8       	ldi	r24, 0x82	; 130
    1b7e:	90 e0       	ldi	r25, 0x00	; 0
    1b80:	c6 c0       	rjmp	.+396    	; 0x1d0e <__mulsf3+0x1e8>
    1b82:	92 30       	cpi	r25, 0x02	; 2
    1b84:	49 f4       	brne	.+18     	; 0x1b98 <__mulsf3+0x72>
    1b86:	20 e0       	ldi	r18, 0x00	; 0
    1b88:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b8a:	8a 89       	ldd	r24, Y+18	; 0x12
    1b8c:	98 13       	cpse	r25, r24
    1b8e:	21 e0       	ldi	r18, 0x01	; 1
    1b90:	2a 87       	std	Y+10, r18	; 0x0a
    1b92:	ce 01       	movw	r24, r28
    1b94:	09 96       	adiw	r24, 0x09	; 9
    1b96:	bb c0       	rjmp	.+374    	; 0x1d0e <__mulsf3+0x1e8>
    1b98:	82 30       	cpi	r24, 0x02	; 2
    1b9a:	49 f4       	brne	.+18     	; 0x1bae <__mulsf3+0x88>
    1b9c:	20 e0       	ldi	r18, 0x00	; 0
    1b9e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ba0:	8a 89       	ldd	r24, Y+18	; 0x12
    1ba2:	98 13       	cpse	r25, r24
    1ba4:	21 e0       	ldi	r18, 0x01	; 1
    1ba6:	2a 8b       	std	Y+18, r18	; 0x12
    1ba8:	ce 01       	movw	r24, r28
    1baa:	41 96       	adiw	r24, 0x11	; 17
    1bac:	b0 c0       	rjmp	.+352    	; 0x1d0e <__mulsf3+0x1e8>
    1bae:	2d 84       	ldd	r2, Y+13	; 0x0d
    1bb0:	3e 84       	ldd	r3, Y+14	; 0x0e
    1bb2:	4f 84       	ldd	r4, Y+15	; 0x0f
    1bb4:	58 88       	ldd	r5, Y+16	; 0x10
    1bb6:	6d 88       	ldd	r6, Y+21	; 0x15
    1bb8:	7e 88       	ldd	r7, Y+22	; 0x16
    1bba:	8f 88       	ldd	r8, Y+23	; 0x17
    1bbc:	98 8c       	ldd	r9, Y+24	; 0x18
    1bbe:	ee 24       	eor	r14, r14
    1bc0:	ff 24       	eor	r15, r15
    1bc2:	87 01       	movw	r16, r14
    1bc4:	aa 24       	eor	r10, r10
    1bc6:	bb 24       	eor	r11, r11
    1bc8:	65 01       	movw	r12, r10
    1bca:	40 e0       	ldi	r20, 0x00	; 0
    1bcc:	50 e0       	ldi	r21, 0x00	; 0
    1bce:	60 e0       	ldi	r22, 0x00	; 0
    1bd0:	70 e0       	ldi	r23, 0x00	; 0
    1bd2:	e0 e0       	ldi	r30, 0x00	; 0
    1bd4:	f0 e0       	ldi	r31, 0x00	; 0
    1bd6:	c1 01       	movw	r24, r2
    1bd8:	81 70       	andi	r24, 0x01	; 1
    1bda:	90 70       	andi	r25, 0x00	; 0
    1bdc:	89 2b       	or	r24, r25
    1bde:	e9 f0       	breq	.+58     	; 0x1c1a <__mulsf3+0xf4>
    1be0:	e6 0c       	add	r14, r6
    1be2:	f7 1c       	adc	r15, r7
    1be4:	08 1d       	adc	r16, r8
    1be6:	19 1d       	adc	r17, r9
    1be8:	9a 01       	movw	r18, r20
    1bea:	ab 01       	movw	r20, r22
    1bec:	2a 0d       	add	r18, r10
    1bee:	3b 1d       	adc	r19, r11
    1bf0:	4c 1d       	adc	r20, r12
    1bf2:	5d 1d       	adc	r21, r13
    1bf4:	80 e0       	ldi	r24, 0x00	; 0
    1bf6:	90 e0       	ldi	r25, 0x00	; 0
    1bf8:	a0 e0       	ldi	r26, 0x00	; 0
    1bfa:	b0 e0       	ldi	r27, 0x00	; 0
    1bfc:	e6 14       	cp	r14, r6
    1bfe:	f7 04       	cpc	r15, r7
    1c00:	08 05       	cpc	r16, r8
    1c02:	19 05       	cpc	r17, r9
    1c04:	20 f4       	brcc	.+8      	; 0x1c0e <__mulsf3+0xe8>
    1c06:	81 e0       	ldi	r24, 0x01	; 1
    1c08:	90 e0       	ldi	r25, 0x00	; 0
    1c0a:	a0 e0       	ldi	r26, 0x00	; 0
    1c0c:	b0 e0       	ldi	r27, 0x00	; 0
    1c0e:	ba 01       	movw	r22, r20
    1c10:	a9 01       	movw	r20, r18
    1c12:	48 0f       	add	r20, r24
    1c14:	59 1f       	adc	r21, r25
    1c16:	6a 1f       	adc	r22, r26
    1c18:	7b 1f       	adc	r23, r27
    1c1a:	aa 0c       	add	r10, r10
    1c1c:	bb 1c       	adc	r11, r11
    1c1e:	cc 1c       	adc	r12, r12
    1c20:	dd 1c       	adc	r13, r13
    1c22:	97 fe       	sbrs	r9, 7
    1c24:	08 c0       	rjmp	.+16     	; 0x1c36 <__mulsf3+0x110>
    1c26:	81 e0       	ldi	r24, 0x01	; 1
    1c28:	90 e0       	ldi	r25, 0x00	; 0
    1c2a:	a0 e0       	ldi	r26, 0x00	; 0
    1c2c:	b0 e0       	ldi	r27, 0x00	; 0
    1c2e:	a8 2a       	or	r10, r24
    1c30:	b9 2a       	or	r11, r25
    1c32:	ca 2a       	or	r12, r26
    1c34:	db 2a       	or	r13, r27
    1c36:	31 96       	adiw	r30, 0x01	; 1
    1c38:	e0 32       	cpi	r30, 0x20	; 32
    1c3a:	f1 05       	cpc	r31, r1
    1c3c:	49 f0       	breq	.+18     	; 0x1c50 <__mulsf3+0x12a>
    1c3e:	66 0c       	add	r6, r6
    1c40:	77 1c       	adc	r7, r7
    1c42:	88 1c       	adc	r8, r8
    1c44:	99 1c       	adc	r9, r9
    1c46:	56 94       	lsr	r5
    1c48:	47 94       	ror	r4
    1c4a:	37 94       	ror	r3
    1c4c:	27 94       	ror	r2
    1c4e:	c3 cf       	rjmp	.-122    	; 0x1bd6 <__mulsf3+0xb0>
    1c50:	fa 85       	ldd	r31, Y+10	; 0x0a
    1c52:	ea 89       	ldd	r30, Y+18	; 0x12
    1c54:	2b 89       	ldd	r18, Y+19	; 0x13
    1c56:	3c 89       	ldd	r19, Y+20	; 0x14
    1c58:	8b 85       	ldd	r24, Y+11	; 0x0b
    1c5a:	9c 85       	ldd	r25, Y+12	; 0x0c
    1c5c:	28 0f       	add	r18, r24
    1c5e:	39 1f       	adc	r19, r25
    1c60:	2e 5f       	subi	r18, 0xFE	; 254
    1c62:	3f 4f       	sbci	r19, 0xFF	; 255
    1c64:	17 c0       	rjmp	.+46     	; 0x1c94 <__mulsf3+0x16e>
    1c66:	ca 01       	movw	r24, r20
    1c68:	81 70       	andi	r24, 0x01	; 1
    1c6a:	90 70       	andi	r25, 0x00	; 0
    1c6c:	89 2b       	or	r24, r25
    1c6e:	61 f0       	breq	.+24     	; 0x1c88 <__mulsf3+0x162>
    1c70:	16 95       	lsr	r17
    1c72:	07 95       	ror	r16
    1c74:	f7 94       	ror	r15
    1c76:	e7 94       	ror	r14
    1c78:	80 e0       	ldi	r24, 0x00	; 0
    1c7a:	90 e0       	ldi	r25, 0x00	; 0
    1c7c:	a0 e0       	ldi	r26, 0x00	; 0
    1c7e:	b0 e8       	ldi	r27, 0x80	; 128
    1c80:	e8 2a       	or	r14, r24
    1c82:	f9 2a       	or	r15, r25
    1c84:	0a 2b       	or	r16, r26
    1c86:	1b 2b       	or	r17, r27
    1c88:	76 95       	lsr	r23
    1c8a:	67 95       	ror	r22
    1c8c:	57 95       	ror	r21
    1c8e:	47 95       	ror	r20
    1c90:	2f 5f       	subi	r18, 0xFF	; 255
    1c92:	3f 4f       	sbci	r19, 0xFF	; 255
    1c94:	77 fd       	sbrc	r23, 7
    1c96:	e7 cf       	rjmp	.-50     	; 0x1c66 <__mulsf3+0x140>
    1c98:	0c c0       	rjmp	.+24     	; 0x1cb2 <__mulsf3+0x18c>
    1c9a:	44 0f       	add	r20, r20
    1c9c:	55 1f       	adc	r21, r21
    1c9e:	66 1f       	adc	r22, r22
    1ca0:	77 1f       	adc	r23, r23
    1ca2:	17 fd       	sbrc	r17, 7
    1ca4:	41 60       	ori	r20, 0x01	; 1
    1ca6:	ee 0c       	add	r14, r14
    1ca8:	ff 1c       	adc	r15, r15
    1caa:	00 1f       	adc	r16, r16
    1cac:	11 1f       	adc	r17, r17
    1cae:	21 50       	subi	r18, 0x01	; 1
    1cb0:	30 40       	sbci	r19, 0x00	; 0
    1cb2:	40 30       	cpi	r20, 0x00	; 0
    1cb4:	90 e0       	ldi	r25, 0x00	; 0
    1cb6:	59 07       	cpc	r21, r25
    1cb8:	90 e0       	ldi	r25, 0x00	; 0
    1cba:	69 07       	cpc	r22, r25
    1cbc:	90 e4       	ldi	r25, 0x40	; 64
    1cbe:	79 07       	cpc	r23, r25
    1cc0:	60 f3       	brcs	.-40     	; 0x1c9a <__mulsf3+0x174>
    1cc2:	2b 8f       	std	Y+27, r18	; 0x1b
    1cc4:	3c 8f       	std	Y+28, r19	; 0x1c
    1cc6:	db 01       	movw	r26, r22
    1cc8:	ca 01       	movw	r24, r20
    1cca:	8f 77       	andi	r24, 0x7F	; 127
    1ccc:	90 70       	andi	r25, 0x00	; 0
    1cce:	a0 70       	andi	r26, 0x00	; 0
    1cd0:	b0 70       	andi	r27, 0x00	; 0
    1cd2:	80 34       	cpi	r24, 0x40	; 64
    1cd4:	91 05       	cpc	r25, r1
    1cd6:	a1 05       	cpc	r26, r1
    1cd8:	b1 05       	cpc	r27, r1
    1cda:	61 f4       	brne	.+24     	; 0x1cf4 <__mulsf3+0x1ce>
    1cdc:	47 fd       	sbrc	r20, 7
    1cde:	0a c0       	rjmp	.+20     	; 0x1cf4 <__mulsf3+0x1ce>
    1ce0:	e1 14       	cp	r14, r1
    1ce2:	f1 04       	cpc	r15, r1
    1ce4:	01 05       	cpc	r16, r1
    1ce6:	11 05       	cpc	r17, r1
    1ce8:	29 f0       	breq	.+10     	; 0x1cf4 <__mulsf3+0x1ce>
    1cea:	40 5c       	subi	r20, 0xC0	; 192
    1cec:	5f 4f       	sbci	r21, 0xFF	; 255
    1cee:	6f 4f       	sbci	r22, 0xFF	; 255
    1cf0:	7f 4f       	sbci	r23, 0xFF	; 255
    1cf2:	40 78       	andi	r20, 0x80	; 128
    1cf4:	1a 8e       	std	Y+26, r1	; 0x1a
    1cf6:	fe 17       	cp	r31, r30
    1cf8:	11 f0       	breq	.+4      	; 0x1cfe <__mulsf3+0x1d8>
    1cfa:	81 e0       	ldi	r24, 0x01	; 1
    1cfc:	8a 8f       	std	Y+26, r24	; 0x1a
    1cfe:	4d 8f       	std	Y+29, r20	; 0x1d
    1d00:	5e 8f       	std	Y+30, r21	; 0x1e
    1d02:	6f 8f       	std	Y+31, r22	; 0x1f
    1d04:	78 a3       	std	Y+32, r23	; 0x20
    1d06:	83 e0       	ldi	r24, 0x03	; 3
    1d08:	89 8f       	std	Y+25, r24	; 0x19
    1d0a:	ce 01       	movw	r24, r28
    1d0c:	49 96       	adiw	r24, 0x19	; 25
    1d0e:	0e 94 73 11 	call	0x22e6	; 0x22e6 <__pack_f>
    1d12:	a0 96       	adiw	r28, 0x20	; 32
    1d14:	e2 e1       	ldi	r30, 0x12	; 18
    1d16:	0c 94 35 13 	jmp	0x266a	; 0x266a <__epilogue_restores__>

00001d1a <__divsf3>:
    1d1a:	a8 e1       	ldi	r26, 0x18	; 24
    1d1c:	b0 e0       	ldi	r27, 0x00	; 0
    1d1e:	e3 e9       	ldi	r30, 0x93	; 147
    1d20:	fe e0       	ldi	r31, 0x0E	; 14
    1d22:	0c 94 21 13 	jmp	0x2642	; 0x2642 <__prologue_saves__+0x10>
    1d26:	69 83       	std	Y+1, r22	; 0x01
    1d28:	7a 83       	std	Y+2, r23	; 0x02
    1d2a:	8b 83       	std	Y+3, r24	; 0x03
    1d2c:	9c 83       	std	Y+4, r25	; 0x04
    1d2e:	2d 83       	std	Y+5, r18	; 0x05
    1d30:	3e 83       	std	Y+6, r19	; 0x06
    1d32:	4f 83       	std	Y+7, r20	; 0x07
    1d34:	58 87       	std	Y+8, r21	; 0x08
    1d36:	b9 e0       	ldi	r27, 0x09	; 9
    1d38:	eb 2e       	mov	r14, r27
    1d3a:	f1 2c       	mov	r15, r1
    1d3c:	ec 0e       	add	r14, r28
    1d3e:	fd 1e       	adc	r15, r29
    1d40:	ce 01       	movw	r24, r28
    1d42:	01 96       	adiw	r24, 0x01	; 1
    1d44:	b7 01       	movw	r22, r14
    1d46:	0e 94 48 12 	call	0x2490	; 0x2490 <__unpack_f>
    1d4a:	8e 01       	movw	r16, r28
    1d4c:	0f 5e       	subi	r16, 0xEF	; 239
    1d4e:	1f 4f       	sbci	r17, 0xFF	; 255
    1d50:	ce 01       	movw	r24, r28
    1d52:	05 96       	adiw	r24, 0x05	; 5
    1d54:	b8 01       	movw	r22, r16
    1d56:	0e 94 48 12 	call	0x2490	; 0x2490 <__unpack_f>
    1d5a:	29 85       	ldd	r18, Y+9	; 0x09
    1d5c:	22 30       	cpi	r18, 0x02	; 2
    1d5e:	08 f4       	brcc	.+2      	; 0x1d62 <__divsf3+0x48>
    1d60:	7e c0       	rjmp	.+252    	; 0x1e5e <__divsf3+0x144>
    1d62:	39 89       	ldd	r19, Y+17	; 0x11
    1d64:	32 30       	cpi	r19, 0x02	; 2
    1d66:	10 f4       	brcc	.+4      	; 0x1d6c <__divsf3+0x52>
    1d68:	b8 01       	movw	r22, r16
    1d6a:	7c c0       	rjmp	.+248    	; 0x1e64 <__divsf3+0x14a>
    1d6c:	8a 85       	ldd	r24, Y+10	; 0x0a
    1d6e:	9a 89       	ldd	r25, Y+18	; 0x12
    1d70:	89 27       	eor	r24, r25
    1d72:	8a 87       	std	Y+10, r24	; 0x0a
    1d74:	24 30       	cpi	r18, 0x04	; 4
    1d76:	11 f0       	breq	.+4      	; 0x1d7c <__divsf3+0x62>
    1d78:	22 30       	cpi	r18, 0x02	; 2
    1d7a:	31 f4       	brne	.+12     	; 0x1d88 <__divsf3+0x6e>
    1d7c:	23 17       	cp	r18, r19
    1d7e:	09 f0       	breq	.+2      	; 0x1d82 <__divsf3+0x68>
    1d80:	6e c0       	rjmp	.+220    	; 0x1e5e <__divsf3+0x144>
    1d82:	62 e8       	ldi	r22, 0x82	; 130
    1d84:	70 e0       	ldi	r23, 0x00	; 0
    1d86:	6e c0       	rjmp	.+220    	; 0x1e64 <__divsf3+0x14a>
    1d88:	34 30       	cpi	r19, 0x04	; 4
    1d8a:	39 f4       	brne	.+14     	; 0x1d9a <__divsf3+0x80>
    1d8c:	1d 86       	std	Y+13, r1	; 0x0d
    1d8e:	1e 86       	std	Y+14, r1	; 0x0e
    1d90:	1f 86       	std	Y+15, r1	; 0x0f
    1d92:	18 8a       	std	Y+16, r1	; 0x10
    1d94:	1c 86       	std	Y+12, r1	; 0x0c
    1d96:	1b 86       	std	Y+11, r1	; 0x0b
    1d98:	04 c0       	rjmp	.+8      	; 0x1da2 <__divsf3+0x88>
    1d9a:	32 30       	cpi	r19, 0x02	; 2
    1d9c:	21 f4       	brne	.+8      	; 0x1da6 <__divsf3+0x8c>
    1d9e:	84 e0       	ldi	r24, 0x04	; 4
    1da0:	89 87       	std	Y+9, r24	; 0x09
    1da2:	b7 01       	movw	r22, r14
    1da4:	5f c0       	rjmp	.+190    	; 0x1e64 <__divsf3+0x14a>
    1da6:	2b 85       	ldd	r18, Y+11	; 0x0b
    1da8:	3c 85       	ldd	r19, Y+12	; 0x0c
    1daa:	8b 89       	ldd	r24, Y+19	; 0x13
    1dac:	9c 89       	ldd	r25, Y+20	; 0x14
    1dae:	28 1b       	sub	r18, r24
    1db0:	39 0b       	sbc	r19, r25
    1db2:	3c 87       	std	Y+12, r19	; 0x0c
    1db4:	2b 87       	std	Y+11, r18	; 0x0b
    1db6:	ed 84       	ldd	r14, Y+13	; 0x0d
    1db8:	fe 84       	ldd	r15, Y+14	; 0x0e
    1dba:	0f 85       	ldd	r16, Y+15	; 0x0f
    1dbc:	18 89       	ldd	r17, Y+16	; 0x10
    1dbe:	ad 88       	ldd	r10, Y+21	; 0x15
    1dc0:	be 88       	ldd	r11, Y+22	; 0x16
    1dc2:	cf 88       	ldd	r12, Y+23	; 0x17
    1dc4:	d8 8c       	ldd	r13, Y+24	; 0x18
    1dc6:	ea 14       	cp	r14, r10
    1dc8:	fb 04       	cpc	r15, r11
    1dca:	0c 05       	cpc	r16, r12
    1dcc:	1d 05       	cpc	r17, r13
    1dce:	40 f4       	brcc	.+16     	; 0x1de0 <__divsf3+0xc6>
    1dd0:	ee 0c       	add	r14, r14
    1dd2:	ff 1c       	adc	r15, r15
    1dd4:	00 1f       	adc	r16, r16
    1dd6:	11 1f       	adc	r17, r17
    1dd8:	21 50       	subi	r18, 0x01	; 1
    1dda:	30 40       	sbci	r19, 0x00	; 0
    1ddc:	3c 87       	std	Y+12, r19	; 0x0c
    1dde:	2b 87       	std	Y+11, r18	; 0x0b
    1de0:	20 e0       	ldi	r18, 0x00	; 0
    1de2:	30 e0       	ldi	r19, 0x00	; 0
    1de4:	40 e0       	ldi	r20, 0x00	; 0
    1de6:	50 e0       	ldi	r21, 0x00	; 0
    1de8:	80 e0       	ldi	r24, 0x00	; 0
    1dea:	90 e0       	ldi	r25, 0x00	; 0
    1dec:	a0 e0       	ldi	r26, 0x00	; 0
    1dee:	b0 e4       	ldi	r27, 0x40	; 64
    1df0:	60 e0       	ldi	r22, 0x00	; 0
    1df2:	70 e0       	ldi	r23, 0x00	; 0
    1df4:	ea 14       	cp	r14, r10
    1df6:	fb 04       	cpc	r15, r11
    1df8:	0c 05       	cpc	r16, r12
    1dfa:	1d 05       	cpc	r17, r13
    1dfc:	40 f0       	brcs	.+16     	; 0x1e0e <__divsf3+0xf4>
    1dfe:	28 2b       	or	r18, r24
    1e00:	39 2b       	or	r19, r25
    1e02:	4a 2b       	or	r20, r26
    1e04:	5b 2b       	or	r21, r27
    1e06:	ea 18       	sub	r14, r10
    1e08:	fb 08       	sbc	r15, r11
    1e0a:	0c 09       	sbc	r16, r12
    1e0c:	1d 09       	sbc	r17, r13
    1e0e:	b6 95       	lsr	r27
    1e10:	a7 95       	ror	r26
    1e12:	97 95       	ror	r25
    1e14:	87 95       	ror	r24
    1e16:	ee 0c       	add	r14, r14
    1e18:	ff 1c       	adc	r15, r15
    1e1a:	00 1f       	adc	r16, r16
    1e1c:	11 1f       	adc	r17, r17
    1e1e:	6f 5f       	subi	r22, 0xFF	; 255
    1e20:	7f 4f       	sbci	r23, 0xFF	; 255
    1e22:	6f 31       	cpi	r22, 0x1F	; 31
    1e24:	71 05       	cpc	r23, r1
    1e26:	31 f7       	brne	.-52     	; 0x1df4 <__divsf3+0xda>
    1e28:	da 01       	movw	r26, r20
    1e2a:	c9 01       	movw	r24, r18
    1e2c:	8f 77       	andi	r24, 0x7F	; 127
    1e2e:	90 70       	andi	r25, 0x00	; 0
    1e30:	a0 70       	andi	r26, 0x00	; 0
    1e32:	b0 70       	andi	r27, 0x00	; 0
    1e34:	80 34       	cpi	r24, 0x40	; 64
    1e36:	91 05       	cpc	r25, r1
    1e38:	a1 05       	cpc	r26, r1
    1e3a:	b1 05       	cpc	r27, r1
    1e3c:	61 f4       	brne	.+24     	; 0x1e56 <__divsf3+0x13c>
    1e3e:	27 fd       	sbrc	r18, 7
    1e40:	0a c0       	rjmp	.+20     	; 0x1e56 <__divsf3+0x13c>
    1e42:	e1 14       	cp	r14, r1
    1e44:	f1 04       	cpc	r15, r1
    1e46:	01 05       	cpc	r16, r1
    1e48:	11 05       	cpc	r17, r1
    1e4a:	29 f0       	breq	.+10     	; 0x1e56 <__divsf3+0x13c>
    1e4c:	20 5c       	subi	r18, 0xC0	; 192
    1e4e:	3f 4f       	sbci	r19, 0xFF	; 255
    1e50:	4f 4f       	sbci	r20, 0xFF	; 255
    1e52:	5f 4f       	sbci	r21, 0xFF	; 255
    1e54:	20 78       	andi	r18, 0x80	; 128
    1e56:	2d 87       	std	Y+13, r18	; 0x0d
    1e58:	3e 87       	std	Y+14, r19	; 0x0e
    1e5a:	4f 87       	std	Y+15, r20	; 0x0f
    1e5c:	58 8b       	std	Y+16, r21	; 0x10
    1e5e:	be 01       	movw	r22, r28
    1e60:	67 5f       	subi	r22, 0xF7	; 247
    1e62:	7f 4f       	sbci	r23, 0xFF	; 255
    1e64:	cb 01       	movw	r24, r22
    1e66:	0e 94 73 11 	call	0x22e6	; 0x22e6 <__pack_f>
    1e6a:	68 96       	adiw	r28, 0x18	; 24
    1e6c:	ea e0       	ldi	r30, 0x0A	; 10
    1e6e:	0c 94 3d 13 	jmp	0x267a	; 0x267a <__epilogue_restores__+0x10>

00001e72 <__gtsf2>:
    1e72:	a8 e1       	ldi	r26, 0x18	; 24
    1e74:	b0 e0       	ldi	r27, 0x00	; 0
    1e76:	ef e3       	ldi	r30, 0x3F	; 63
    1e78:	ff e0       	ldi	r31, 0x0F	; 15
    1e7a:	0c 94 25 13 	jmp	0x264a	; 0x264a <__prologue_saves__+0x18>
    1e7e:	69 83       	std	Y+1, r22	; 0x01
    1e80:	7a 83       	std	Y+2, r23	; 0x02
    1e82:	8b 83       	std	Y+3, r24	; 0x03
    1e84:	9c 83       	std	Y+4, r25	; 0x04
    1e86:	2d 83       	std	Y+5, r18	; 0x05
    1e88:	3e 83       	std	Y+6, r19	; 0x06
    1e8a:	4f 83       	std	Y+7, r20	; 0x07
    1e8c:	58 87       	std	Y+8, r21	; 0x08
    1e8e:	89 e0       	ldi	r24, 0x09	; 9
    1e90:	e8 2e       	mov	r14, r24
    1e92:	f1 2c       	mov	r15, r1
    1e94:	ec 0e       	add	r14, r28
    1e96:	fd 1e       	adc	r15, r29
    1e98:	ce 01       	movw	r24, r28
    1e9a:	01 96       	adiw	r24, 0x01	; 1
    1e9c:	b7 01       	movw	r22, r14
    1e9e:	0e 94 48 12 	call	0x2490	; 0x2490 <__unpack_f>
    1ea2:	8e 01       	movw	r16, r28
    1ea4:	0f 5e       	subi	r16, 0xEF	; 239
    1ea6:	1f 4f       	sbci	r17, 0xFF	; 255
    1ea8:	ce 01       	movw	r24, r28
    1eaa:	05 96       	adiw	r24, 0x05	; 5
    1eac:	b8 01       	movw	r22, r16
    1eae:	0e 94 48 12 	call	0x2490	; 0x2490 <__unpack_f>
    1eb2:	89 85       	ldd	r24, Y+9	; 0x09
    1eb4:	82 30       	cpi	r24, 0x02	; 2
    1eb6:	40 f0       	brcs	.+16     	; 0x1ec8 <__gtsf2+0x56>
    1eb8:	89 89       	ldd	r24, Y+17	; 0x11
    1eba:	82 30       	cpi	r24, 0x02	; 2
    1ebc:	28 f0       	brcs	.+10     	; 0x1ec8 <__gtsf2+0x56>
    1ebe:	c7 01       	movw	r24, r14
    1ec0:	b8 01       	movw	r22, r16
    1ec2:	0e 94 c0 12 	call	0x2580	; 0x2580 <__fpcmp_parts_f>
    1ec6:	01 c0       	rjmp	.+2      	; 0x1eca <__gtsf2+0x58>
    1ec8:	8f ef       	ldi	r24, 0xFF	; 255
    1eca:	68 96       	adiw	r28, 0x18	; 24
    1ecc:	e6 e0       	ldi	r30, 0x06	; 6
    1ece:	0c 94 41 13 	jmp	0x2682	; 0x2682 <__epilogue_restores__+0x18>

00001ed2 <__gesf2>:
    1ed2:	a8 e1       	ldi	r26, 0x18	; 24
    1ed4:	b0 e0       	ldi	r27, 0x00	; 0
    1ed6:	ef e6       	ldi	r30, 0x6F	; 111
    1ed8:	ff e0       	ldi	r31, 0x0F	; 15
    1eda:	0c 94 25 13 	jmp	0x264a	; 0x264a <__prologue_saves__+0x18>
    1ede:	69 83       	std	Y+1, r22	; 0x01
    1ee0:	7a 83       	std	Y+2, r23	; 0x02
    1ee2:	8b 83       	std	Y+3, r24	; 0x03
    1ee4:	9c 83       	std	Y+4, r25	; 0x04
    1ee6:	2d 83       	std	Y+5, r18	; 0x05
    1ee8:	3e 83       	std	Y+6, r19	; 0x06
    1eea:	4f 83       	std	Y+7, r20	; 0x07
    1eec:	58 87       	std	Y+8, r21	; 0x08
    1eee:	89 e0       	ldi	r24, 0x09	; 9
    1ef0:	e8 2e       	mov	r14, r24
    1ef2:	f1 2c       	mov	r15, r1
    1ef4:	ec 0e       	add	r14, r28
    1ef6:	fd 1e       	adc	r15, r29
    1ef8:	ce 01       	movw	r24, r28
    1efa:	01 96       	adiw	r24, 0x01	; 1
    1efc:	b7 01       	movw	r22, r14
    1efe:	0e 94 48 12 	call	0x2490	; 0x2490 <__unpack_f>
    1f02:	8e 01       	movw	r16, r28
    1f04:	0f 5e       	subi	r16, 0xEF	; 239
    1f06:	1f 4f       	sbci	r17, 0xFF	; 255
    1f08:	ce 01       	movw	r24, r28
    1f0a:	05 96       	adiw	r24, 0x05	; 5
    1f0c:	b8 01       	movw	r22, r16
    1f0e:	0e 94 48 12 	call	0x2490	; 0x2490 <__unpack_f>
    1f12:	89 85       	ldd	r24, Y+9	; 0x09
    1f14:	82 30       	cpi	r24, 0x02	; 2
    1f16:	40 f0       	brcs	.+16     	; 0x1f28 <__gesf2+0x56>
    1f18:	89 89       	ldd	r24, Y+17	; 0x11
    1f1a:	82 30       	cpi	r24, 0x02	; 2
    1f1c:	28 f0       	brcs	.+10     	; 0x1f28 <__gesf2+0x56>
    1f1e:	c7 01       	movw	r24, r14
    1f20:	b8 01       	movw	r22, r16
    1f22:	0e 94 c0 12 	call	0x2580	; 0x2580 <__fpcmp_parts_f>
    1f26:	01 c0       	rjmp	.+2      	; 0x1f2a <__gesf2+0x58>
    1f28:	8f ef       	ldi	r24, 0xFF	; 255
    1f2a:	68 96       	adiw	r28, 0x18	; 24
    1f2c:	e6 e0       	ldi	r30, 0x06	; 6
    1f2e:	0c 94 41 13 	jmp	0x2682	; 0x2682 <__epilogue_restores__+0x18>

00001f32 <__ltsf2>:
    1f32:	a8 e1       	ldi	r26, 0x18	; 24
    1f34:	b0 e0       	ldi	r27, 0x00	; 0
    1f36:	ef e9       	ldi	r30, 0x9F	; 159
    1f38:	ff e0       	ldi	r31, 0x0F	; 15
    1f3a:	0c 94 25 13 	jmp	0x264a	; 0x264a <__prologue_saves__+0x18>
    1f3e:	69 83       	std	Y+1, r22	; 0x01
    1f40:	7a 83       	std	Y+2, r23	; 0x02
    1f42:	8b 83       	std	Y+3, r24	; 0x03
    1f44:	9c 83       	std	Y+4, r25	; 0x04
    1f46:	2d 83       	std	Y+5, r18	; 0x05
    1f48:	3e 83       	std	Y+6, r19	; 0x06
    1f4a:	4f 83       	std	Y+7, r20	; 0x07
    1f4c:	58 87       	std	Y+8, r21	; 0x08
    1f4e:	89 e0       	ldi	r24, 0x09	; 9
    1f50:	e8 2e       	mov	r14, r24
    1f52:	f1 2c       	mov	r15, r1
    1f54:	ec 0e       	add	r14, r28
    1f56:	fd 1e       	adc	r15, r29
    1f58:	ce 01       	movw	r24, r28
    1f5a:	01 96       	adiw	r24, 0x01	; 1
    1f5c:	b7 01       	movw	r22, r14
    1f5e:	0e 94 48 12 	call	0x2490	; 0x2490 <__unpack_f>
    1f62:	8e 01       	movw	r16, r28
    1f64:	0f 5e       	subi	r16, 0xEF	; 239
    1f66:	1f 4f       	sbci	r17, 0xFF	; 255
    1f68:	ce 01       	movw	r24, r28
    1f6a:	05 96       	adiw	r24, 0x05	; 5
    1f6c:	b8 01       	movw	r22, r16
    1f6e:	0e 94 48 12 	call	0x2490	; 0x2490 <__unpack_f>
    1f72:	89 85       	ldd	r24, Y+9	; 0x09
    1f74:	82 30       	cpi	r24, 0x02	; 2
    1f76:	40 f0       	brcs	.+16     	; 0x1f88 <__ltsf2+0x56>
    1f78:	89 89       	ldd	r24, Y+17	; 0x11
    1f7a:	82 30       	cpi	r24, 0x02	; 2
    1f7c:	28 f0       	brcs	.+10     	; 0x1f88 <__ltsf2+0x56>
    1f7e:	c7 01       	movw	r24, r14
    1f80:	b8 01       	movw	r22, r16
    1f82:	0e 94 c0 12 	call	0x2580	; 0x2580 <__fpcmp_parts_f>
    1f86:	01 c0       	rjmp	.+2      	; 0x1f8a <__ltsf2+0x58>
    1f88:	81 e0       	ldi	r24, 0x01	; 1
    1f8a:	68 96       	adiw	r28, 0x18	; 24
    1f8c:	e6 e0       	ldi	r30, 0x06	; 6
    1f8e:	0c 94 41 13 	jmp	0x2682	; 0x2682 <__epilogue_restores__+0x18>

00001f92 <__lesf2>:
    1f92:	a8 e1       	ldi	r26, 0x18	; 24
    1f94:	b0 e0       	ldi	r27, 0x00	; 0
    1f96:	ef ec       	ldi	r30, 0xCF	; 207
    1f98:	ff e0       	ldi	r31, 0x0F	; 15
    1f9a:	0c 94 25 13 	jmp	0x264a	; 0x264a <__prologue_saves__+0x18>
    1f9e:	69 83       	std	Y+1, r22	; 0x01
    1fa0:	7a 83       	std	Y+2, r23	; 0x02
    1fa2:	8b 83       	std	Y+3, r24	; 0x03
    1fa4:	9c 83       	std	Y+4, r25	; 0x04
    1fa6:	2d 83       	std	Y+5, r18	; 0x05
    1fa8:	3e 83       	std	Y+6, r19	; 0x06
    1faa:	4f 83       	std	Y+7, r20	; 0x07
    1fac:	58 87       	std	Y+8, r21	; 0x08
    1fae:	89 e0       	ldi	r24, 0x09	; 9
    1fb0:	e8 2e       	mov	r14, r24
    1fb2:	f1 2c       	mov	r15, r1
    1fb4:	ec 0e       	add	r14, r28
    1fb6:	fd 1e       	adc	r15, r29
    1fb8:	ce 01       	movw	r24, r28
    1fba:	01 96       	adiw	r24, 0x01	; 1
    1fbc:	b7 01       	movw	r22, r14
    1fbe:	0e 94 48 12 	call	0x2490	; 0x2490 <__unpack_f>
    1fc2:	8e 01       	movw	r16, r28
    1fc4:	0f 5e       	subi	r16, 0xEF	; 239
    1fc6:	1f 4f       	sbci	r17, 0xFF	; 255
    1fc8:	ce 01       	movw	r24, r28
    1fca:	05 96       	adiw	r24, 0x05	; 5
    1fcc:	b8 01       	movw	r22, r16
    1fce:	0e 94 48 12 	call	0x2490	; 0x2490 <__unpack_f>
    1fd2:	89 85       	ldd	r24, Y+9	; 0x09
    1fd4:	82 30       	cpi	r24, 0x02	; 2
    1fd6:	40 f0       	brcs	.+16     	; 0x1fe8 <__lesf2+0x56>
    1fd8:	89 89       	ldd	r24, Y+17	; 0x11
    1fda:	82 30       	cpi	r24, 0x02	; 2
    1fdc:	28 f0       	brcs	.+10     	; 0x1fe8 <__lesf2+0x56>
    1fde:	c7 01       	movw	r24, r14
    1fe0:	b8 01       	movw	r22, r16
    1fe2:	0e 94 c0 12 	call	0x2580	; 0x2580 <__fpcmp_parts_f>
    1fe6:	01 c0       	rjmp	.+2      	; 0x1fea <__lesf2+0x58>
    1fe8:	81 e0       	ldi	r24, 0x01	; 1
    1fea:	68 96       	adiw	r28, 0x18	; 24
    1fec:	e6 e0       	ldi	r30, 0x06	; 6
    1fee:	0c 94 41 13 	jmp	0x2682	; 0x2682 <__epilogue_restores__+0x18>

00001ff2 <__floatsisf>:
    1ff2:	a8 e0       	ldi	r26, 0x08	; 8
    1ff4:	b0 e0       	ldi	r27, 0x00	; 0
    1ff6:	ef ef       	ldi	r30, 0xFF	; 255
    1ff8:	ff e0       	ldi	r31, 0x0F	; 15
    1ffa:	0c 94 22 13 	jmp	0x2644	; 0x2644 <__prologue_saves__+0x12>
    1ffe:	9b 01       	movw	r18, r22
    2000:	ac 01       	movw	r20, r24
    2002:	83 e0       	ldi	r24, 0x03	; 3
    2004:	89 83       	std	Y+1, r24	; 0x01
    2006:	da 01       	movw	r26, r20
    2008:	c9 01       	movw	r24, r18
    200a:	88 27       	eor	r24, r24
    200c:	b7 fd       	sbrc	r27, 7
    200e:	83 95       	inc	r24
    2010:	99 27       	eor	r25, r25
    2012:	aa 27       	eor	r26, r26
    2014:	bb 27       	eor	r27, r27
    2016:	b8 2e       	mov	r11, r24
    2018:	21 15       	cp	r18, r1
    201a:	31 05       	cpc	r19, r1
    201c:	41 05       	cpc	r20, r1
    201e:	51 05       	cpc	r21, r1
    2020:	19 f4       	brne	.+6      	; 0x2028 <__floatsisf+0x36>
    2022:	82 e0       	ldi	r24, 0x02	; 2
    2024:	89 83       	std	Y+1, r24	; 0x01
    2026:	3a c0       	rjmp	.+116    	; 0x209c <__floatsisf+0xaa>
    2028:	88 23       	and	r24, r24
    202a:	a9 f0       	breq	.+42     	; 0x2056 <__floatsisf+0x64>
    202c:	20 30       	cpi	r18, 0x00	; 0
    202e:	80 e0       	ldi	r24, 0x00	; 0
    2030:	38 07       	cpc	r19, r24
    2032:	80 e0       	ldi	r24, 0x00	; 0
    2034:	48 07       	cpc	r20, r24
    2036:	80 e8       	ldi	r24, 0x80	; 128
    2038:	58 07       	cpc	r21, r24
    203a:	29 f4       	brne	.+10     	; 0x2046 <__floatsisf+0x54>
    203c:	60 e0       	ldi	r22, 0x00	; 0
    203e:	70 e0       	ldi	r23, 0x00	; 0
    2040:	80 e0       	ldi	r24, 0x00	; 0
    2042:	9f ec       	ldi	r25, 0xCF	; 207
    2044:	30 c0       	rjmp	.+96     	; 0x20a6 <__floatsisf+0xb4>
    2046:	ee 24       	eor	r14, r14
    2048:	ff 24       	eor	r15, r15
    204a:	87 01       	movw	r16, r14
    204c:	e2 1a       	sub	r14, r18
    204e:	f3 0a       	sbc	r15, r19
    2050:	04 0b       	sbc	r16, r20
    2052:	15 0b       	sbc	r17, r21
    2054:	02 c0       	rjmp	.+4      	; 0x205a <__floatsisf+0x68>
    2056:	79 01       	movw	r14, r18
    2058:	8a 01       	movw	r16, r20
    205a:	8e e1       	ldi	r24, 0x1E	; 30
    205c:	c8 2e       	mov	r12, r24
    205e:	d1 2c       	mov	r13, r1
    2060:	dc 82       	std	Y+4, r13	; 0x04
    2062:	cb 82       	std	Y+3, r12	; 0x03
    2064:	ed 82       	std	Y+5, r14	; 0x05
    2066:	fe 82       	std	Y+6, r15	; 0x06
    2068:	0f 83       	std	Y+7, r16	; 0x07
    206a:	18 87       	std	Y+8, r17	; 0x08
    206c:	c8 01       	movw	r24, r16
    206e:	b7 01       	movw	r22, r14
    2070:	0e 94 24 11 	call	0x2248	; 0x2248 <__clzsi2>
    2074:	01 97       	sbiw	r24, 0x01	; 1
    2076:	18 16       	cp	r1, r24
    2078:	19 06       	cpc	r1, r25
    207a:	84 f4       	brge	.+32     	; 0x209c <__floatsisf+0xaa>
    207c:	08 2e       	mov	r0, r24
    207e:	04 c0       	rjmp	.+8      	; 0x2088 <__floatsisf+0x96>
    2080:	ee 0c       	add	r14, r14
    2082:	ff 1c       	adc	r15, r15
    2084:	00 1f       	adc	r16, r16
    2086:	11 1f       	adc	r17, r17
    2088:	0a 94       	dec	r0
    208a:	d2 f7       	brpl	.-12     	; 0x2080 <__floatsisf+0x8e>
    208c:	ed 82       	std	Y+5, r14	; 0x05
    208e:	fe 82       	std	Y+6, r15	; 0x06
    2090:	0f 83       	std	Y+7, r16	; 0x07
    2092:	18 87       	std	Y+8, r17	; 0x08
    2094:	c8 1a       	sub	r12, r24
    2096:	d9 0a       	sbc	r13, r25
    2098:	dc 82       	std	Y+4, r13	; 0x04
    209a:	cb 82       	std	Y+3, r12	; 0x03
    209c:	ba 82       	std	Y+2, r11	; 0x02
    209e:	ce 01       	movw	r24, r28
    20a0:	01 96       	adiw	r24, 0x01	; 1
    20a2:	0e 94 73 11 	call	0x22e6	; 0x22e6 <__pack_f>
    20a6:	28 96       	adiw	r28, 0x08	; 8
    20a8:	e9 e0       	ldi	r30, 0x09	; 9
    20aa:	0c 94 3e 13 	jmp	0x267c	; 0x267c <__epilogue_restores__+0x12>

000020ae <__fixsfsi>:
    20ae:	ac e0       	ldi	r26, 0x0C	; 12
    20b0:	b0 e0       	ldi	r27, 0x00	; 0
    20b2:	ed e5       	ldi	r30, 0x5D	; 93
    20b4:	f0 e1       	ldi	r31, 0x10	; 16
    20b6:	0c 94 29 13 	jmp	0x2652	; 0x2652 <__prologue_saves__+0x20>
    20ba:	69 83       	std	Y+1, r22	; 0x01
    20bc:	7a 83       	std	Y+2, r23	; 0x02
    20be:	8b 83       	std	Y+3, r24	; 0x03
    20c0:	9c 83       	std	Y+4, r25	; 0x04
    20c2:	ce 01       	movw	r24, r28
    20c4:	01 96       	adiw	r24, 0x01	; 1
    20c6:	be 01       	movw	r22, r28
    20c8:	6b 5f       	subi	r22, 0xFB	; 251
    20ca:	7f 4f       	sbci	r23, 0xFF	; 255
    20cc:	0e 94 48 12 	call	0x2490	; 0x2490 <__unpack_f>
    20d0:	8d 81       	ldd	r24, Y+5	; 0x05
    20d2:	82 30       	cpi	r24, 0x02	; 2
    20d4:	61 f1       	breq	.+88     	; 0x212e <__fixsfsi+0x80>
    20d6:	82 30       	cpi	r24, 0x02	; 2
    20d8:	50 f1       	brcs	.+84     	; 0x212e <__fixsfsi+0x80>
    20da:	84 30       	cpi	r24, 0x04	; 4
    20dc:	21 f4       	brne	.+8      	; 0x20e6 <__fixsfsi+0x38>
    20de:	8e 81       	ldd	r24, Y+6	; 0x06
    20e0:	88 23       	and	r24, r24
    20e2:	51 f1       	breq	.+84     	; 0x2138 <__fixsfsi+0x8a>
    20e4:	2e c0       	rjmp	.+92     	; 0x2142 <__fixsfsi+0x94>
    20e6:	2f 81       	ldd	r18, Y+7	; 0x07
    20e8:	38 85       	ldd	r19, Y+8	; 0x08
    20ea:	37 fd       	sbrc	r19, 7
    20ec:	20 c0       	rjmp	.+64     	; 0x212e <__fixsfsi+0x80>
    20ee:	6e 81       	ldd	r22, Y+6	; 0x06
    20f0:	2f 31       	cpi	r18, 0x1F	; 31
    20f2:	31 05       	cpc	r19, r1
    20f4:	1c f0       	brlt	.+6      	; 0x20fc <__fixsfsi+0x4e>
    20f6:	66 23       	and	r22, r22
    20f8:	f9 f0       	breq	.+62     	; 0x2138 <__fixsfsi+0x8a>
    20fa:	23 c0       	rjmp	.+70     	; 0x2142 <__fixsfsi+0x94>
    20fc:	8e e1       	ldi	r24, 0x1E	; 30
    20fe:	90 e0       	ldi	r25, 0x00	; 0
    2100:	82 1b       	sub	r24, r18
    2102:	93 0b       	sbc	r25, r19
    2104:	29 85       	ldd	r18, Y+9	; 0x09
    2106:	3a 85       	ldd	r19, Y+10	; 0x0a
    2108:	4b 85       	ldd	r20, Y+11	; 0x0b
    210a:	5c 85       	ldd	r21, Y+12	; 0x0c
    210c:	04 c0       	rjmp	.+8      	; 0x2116 <__fixsfsi+0x68>
    210e:	56 95       	lsr	r21
    2110:	47 95       	ror	r20
    2112:	37 95       	ror	r19
    2114:	27 95       	ror	r18
    2116:	8a 95       	dec	r24
    2118:	d2 f7       	brpl	.-12     	; 0x210e <__fixsfsi+0x60>
    211a:	66 23       	and	r22, r22
    211c:	b1 f0       	breq	.+44     	; 0x214a <__fixsfsi+0x9c>
    211e:	50 95       	com	r21
    2120:	40 95       	com	r20
    2122:	30 95       	com	r19
    2124:	21 95       	neg	r18
    2126:	3f 4f       	sbci	r19, 0xFF	; 255
    2128:	4f 4f       	sbci	r20, 0xFF	; 255
    212a:	5f 4f       	sbci	r21, 0xFF	; 255
    212c:	0e c0       	rjmp	.+28     	; 0x214a <__fixsfsi+0x9c>
    212e:	20 e0       	ldi	r18, 0x00	; 0
    2130:	30 e0       	ldi	r19, 0x00	; 0
    2132:	40 e0       	ldi	r20, 0x00	; 0
    2134:	50 e0       	ldi	r21, 0x00	; 0
    2136:	09 c0       	rjmp	.+18     	; 0x214a <__fixsfsi+0x9c>
    2138:	2f ef       	ldi	r18, 0xFF	; 255
    213a:	3f ef       	ldi	r19, 0xFF	; 255
    213c:	4f ef       	ldi	r20, 0xFF	; 255
    213e:	5f e7       	ldi	r21, 0x7F	; 127
    2140:	04 c0       	rjmp	.+8      	; 0x214a <__fixsfsi+0x9c>
    2142:	20 e0       	ldi	r18, 0x00	; 0
    2144:	30 e0       	ldi	r19, 0x00	; 0
    2146:	40 e0       	ldi	r20, 0x00	; 0
    2148:	50 e8       	ldi	r21, 0x80	; 128
    214a:	b9 01       	movw	r22, r18
    214c:	ca 01       	movw	r24, r20
    214e:	2c 96       	adiw	r28, 0x0c	; 12
    2150:	e2 e0       	ldi	r30, 0x02	; 2
    2152:	0c 94 45 13 	jmp	0x268a	; 0x268a <__epilogue_restores__+0x20>

00002156 <__floatunsisf>:
    2156:	a8 e0       	ldi	r26, 0x08	; 8
    2158:	b0 e0       	ldi	r27, 0x00	; 0
    215a:	e1 eb       	ldi	r30, 0xB1	; 177
    215c:	f0 e1       	ldi	r31, 0x10	; 16
    215e:	0c 94 21 13 	jmp	0x2642	; 0x2642 <__prologue_saves__+0x10>
    2162:	7b 01       	movw	r14, r22
    2164:	8c 01       	movw	r16, r24
    2166:	61 15       	cp	r22, r1
    2168:	71 05       	cpc	r23, r1
    216a:	81 05       	cpc	r24, r1
    216c:	91 05       	cpc	r25, r1
    216e:	19 f4       	brne	.+6      	; 0x2176 <__floatunsisf+0x20>
    2170:	82 e0       	ldi	r24, 0x02	; 2
    2172:	89 83       	std	Y+1, r24	; 0x01
    2174:	60 c0       	rjmp	.+192    	; 0x2236 <__floatunsisf+0xe0>
    2176:	83 e0       	ldi	r24, 0x03	; 3
    2178:	89 83       	std	Y+1, r24	; 0x01
    217a:	8e e1       	ldi	r24, 0x1E	; 30
    217c:	c8 2e       	mov	r12, r24
    217e:	d1 2c       	mov	r13, r1
    2180:	dc 82       	std	Y+4, r13	; 0x04
    2182:	cb 82       	std	Y+3, r12	; 0x03
    2184:	ed 82       	std	Y+5, r14	; 0x05
    2186:	fe 82       	std	Y+6, r15	; 0x06
    2188:	0f 83       	std	Y+7, r16	; 0x07
    218a:	18 87       	std	Y+8, r17	; 0x08
    218c:	c8 01       	movw	r24, r16
    218e:	b7 01       	movw	r22, r14
    2190:	0e 94 24 11 	call	0x2248	; 0x2248 <__clzsi2>
    2194:	fc 01       	movw	r30, r24
    2196:	31 97       	sbiw	r30, 0x01	; 1
    2198:	f7 ff       	sbrs	r31, 7
    219a:	3b c0       	rjmp	.+118    	; 0x2212 <__floatunsisf+0xbc>
    219c:	22 27       	eor	r18, r18
    219e:	33 27       	eor	r19, r19
    21a0:	2e 1b       	sub	r18, r30
    21a2:	3f 0b       	sbc	r19, r31
    21a4:	57 01       	movw	r10, r14
    21a6:	68 01       	movw	r12, r16
    21a8:	02 2e       	mov	r0, r18
    21aa:	04 c0       	rjmp	.+8      	; 0x21b4 <__floatunsisf+0x5e>
    21ac:	d6 94       	lsr	r13
    21ae:	c7 94       	ror	r12
    21b0:	b7 94       	ror	r11
    21b2:	a7 94       	ror	r10
    21b4:	0a 94       	dec	r0
    21b6:	d2 f7       	brpl	.-12     	; 0x21ac <__floatunsisf+0x56>
    21b8:	40 e0       	ldi	r20, 0x00	; 0
    21ba:	50 e0       	ldi	r21, 0x00	; 0
    21bc:	60 e0       	ldi	r22, 0x00	; 0
    21be:	70 e0       	ldi	r23, 0x00	; 0
    21c0:	81 e0       	ldi	r24, 0x01	; 1
    21c2:	90 e0       	ldi	r25, 0x00	; 0
    21c4:	a0 e0       	ldi	r26, 0x00	; 0
    21c6:	b0 e0       	ldi	r27, 0x00	; 0
    21c8:	04 c0       	rjmp	.+8      	; 0x21d2 <__floatunsisf+0x7c>
    21ca:	88 0f       	add	r24, r24
    21cc:	99 1f       	adc	r25, r25
    21ce:	aa 1f       	adc	r26, r26
    21d0:	bb 1f       	adc	r27, r27
    21d2:	2a 95       	dec	r18
    21d4:	d2 f7       	brpl	.-12     	; 0x21ca <__floatunsisf+0x74>
    21d6:	01 97       	sbiw	r24, 0x01	; 1
    21d8:	a1 09       	sbc	r26, r1
    21da:	b1 09       	sbc	r27, r1
    21dc:	8e 21       	and	r24, r14
    21de:	9f 21       	and	r25, r15
    21e0:	a0 23       	and	r26, r16
    21e2:	b1 23       	and	r27, r17
    21e4:	00 97       	sbiw	r24, 0x00	; 0
    21e6:	a1 05       	cpc	r26, r1
    21e8:	b1 05       	cpc	r27, r1
    21ea:	21 f0       	breq	.+8      	; 0x21f4 <__floatunsisf+0x9e>
    21ec:	41 e0       	ldi	r20, 0x01	; 1
    21ee:	50 e0       	ldi	r21, 0x00	; 0
    21f0:	60 e0       	ldi	r22, 0x00	; 0
    21f2:	70 e0       	ldi	r23, 0x00	; 0
    21f4:	4a 29       	or	r20, r10
    21f6:	5b 29       	or	r21, r11
    21f8:	6c 29       	or	r22, r12
    21fa:	7d 29       	or	r23, r13
    21fc:	4d 83       	std	Y+5, r20	; 0x05
    21fe:	5e 83       	std	Y+6, r21	; 0x06
    2200:	6f 83       	std	Y+7, r22	; 0x07
    2202:	78 87       	std	Y+8, r23	; 0x08
    2204:	8e e1       	ldi	r24, 0x1E	; 30
    2206:	90 e0       	ldi	r25, 0x00	; 0
    2208:	8e 1b       	sub	r24, r30
    220a:	9f 0b       	sbc	r25, r31
    220c:	9c 83       	std	Y+4, r25	; 0x04
    220e:	8b 83       	std	Y+3, r24	; 0x03
    2210:	12 c0       	rjmp	.+36     	; 0x2236 <__floatunsisf+0xe0>
    2212:	30 97       	sbiw	r30, 0x00	; 0
    2214:	81 f0       	breq	.+32     	; 0x2236 <__floatunsisf+0xe0>
    2216:	0e 2e       	mov	r0, r30
    2218:	04 c0       	rjmp	.+8      	; 0x2222 <__floatunsisf+0xcc>
    221a:	ee 0c       	add	r14, r14
    221c:	ff 1c       	adc	r15, r15
    221e:	00 1f       	adc	r16, r16
    2220:	11 1f       	adc	r17, r17
    2222:	0a 94       	dec	r0
    2224:	d2 f7       	brpl	.-12     	; 0x221a <__floatunsisf+0xc4>
    2226:	ed 82       	std	Y+5, r14	; 0x05
    2228:	fe 82       	std	Y+6, r15	; 0x06
    222a:	0f 83       	std	Y+7, r16	; 0x07
    222c:	18 87       	std	Y+8, r17	; 0x08
    222e:	ce 1a       	sub	r12, r30
    2230:	df 0a       	sbc	r13, r31
    2232:	dc 82       	std	Y+4, r13	; 0x04
    2234:	cb 82       	std	Y+3, r12	; 0x03
    2236:	1a 82       	std	Y+2, r1	; 0x02
    2238:	ce 01       	movw	r24, r28
    223a:	01 96       	adiw	r24, 0x01	; 1
    223c:	0e 94 73 11 	call	0x22e6	; 0x22e6 <__pack_f>
    2240:	28 96       	adiw	r28, 0x08	; 8
    2242:	ea e0       	ldi	r30, 0x0A	; 10
    2244:	0c 94 3d 13 	jmp	0x267a	; 0x267a <__epilogue_restores__+0x10>

00002248 <__clzsi2>:
    2248:	ef 92       	push	r14
    224a:	ff 92       	push	r15
    224c:	0f 93       	push	r16
    224e:	1f 93       	push	r17
    2250:	7b 01       	movw	r14, r22
    2252:	8c 01       	movw	r16, r24
    2254:	80 e0       	ldi	r24, 0x00	; 0
    2256:	e8 16       	cp	r14, r24
    2258:	80 e0       	ldi	r24, 0x00	; 0
    225a:	f8 06       	cpc	r15, r24
    225c:	81 e0       	ldi	r24, 0x01	; 1
    225e:	08 07       	cpc	r16, r24
    2260:	80 e0       	ldi	r24, 0x00	; 0
    2262:	18 07       	cpc	r17, r24
    2264:	88 f4       	brcc	.+34     	; 0x2288 <__clzsi2+0x40>
    2266:	8f ef       	ldi	r24, 0xFF	; 255
    2268:	e8 16       	cp	r14, r24
    226a:	f1 04       	cpc	r15, r1
    226c:	01 05       	cpc	r16, r1
    226e:	11 05       	cpc	r17, r1
    2270:	31 f0       	breq	.+12     	; 0x227e <__clzsi2+0x36>
    2272:	28 f0       	brcs	.+10     	; 0x227e <__clzsi2+0x36>
    2274:	88 e0       	ldi	r24, 0x08	; 8
    2276:	90 e0       	ldi	r25, 0x00	; 0
    2278:	a0 e0       	ldi	r26, 0x00	; 0
    227a:	b0 e0       	ldi	r27, 0x00	; 0
    227c:	17 c0       	rjmp	.+46     	; 0x22ac <__clzsi2+0x64>
    227e:	80 e0       	ldi	r24, 0x00	; 0
    2280:	90 e0       	ldi	r25, 0x00	; 0
    2282:	a0 e0       	ldi	r26, 0x00	; 0
    2284:	b0 e0       	ldi	r27, 0x00	; 0
    2286:	12 c0       	rjmp	.+36     	; 0x22ac <__clzsi2+0x64>
    2288:	80 e0       	ldi	r24, 0x00	; 0
    228a:	e8 16       	cp	r14, r24
    228c:	80 e0       	ldi	r24, 0x00	; 0
    228e:	f8 06       	cpc	r15, r24
    2290:	80 e0       	ldi	r24, 0x00	; 0
    2292:	08 07       	cpc	r16, r24
    2294:	81 e0       	ldi	r24, 0x01	; 1
    2296:	18 07       	cpc	r17, r24
    2298:	28 f0       	brcs	.+10     	; 0x22a4 <__clzsi2+0x5c>
    229a:	88 e1       	ldi	r24, 0x18	; 24
    229c:	90 e0       	ldi	r25, 0x00	; 0
    229e:	a0 e0       	ldi	r26, 0x00	; 0
    22a0:	b0 e0       	ldi	r27, 0x00	; 0
    22a2:	04 c0       	rjmp	.+8      	; 0x22ac <__clzsi2+0x64>
    22a4:	80 e1       	ldi	r24, 0x10	; 16
    22a6:	90 e0       	ldi	r25, 0x00	; 0
    22a8:	a0 e0       	ldi	r26, 0x00	; 0
    22aa:	b0 e0       	ldi	r27, 0x00	; 0
    22ac:	20 e2       	ldi	r18, 0x20	; 32
    22ae:	30 e0       	ldi	r19, 0x00	; 0
    22b0:	40 e0       	ldi	r20, 0x00	; 0
    22b2:	50 e0       	ldi	r21, 0x00	; 0
    22b4:	28 1b       	sub	r18, r24
    22b6:	39 0b       	sbc	r19, r25
    22b8:	4a 0b       	sbc	r20, r26
    22ba:	5b 0b       	sbc	r21, r27
    22bc:	04 c0       	rjmp	.+8      	; 0x22c6 <__clzsi2+0x7e>
    22be:	16 95       	lsr	r17
    22c0:	07 95       	ror	r16
    22c2:	f7 94       	ror	r15
    22c4:	e7 94       	ror	r14
    22c6:	8a 95       	dec	r24
    22c8:	d2 f7       	brpl	.-12     	; 0x22be <__clzsi2+0x76>
    22ca:	f7 01       	movw	r30, r14
    22cc:	e6 57       	subi	r30, 0x76	; 118
    22ce:	ff 4f       	sbci	r31, 0xFF	; 255
    22d0:	80 81       	ld	r24, Z
    22d2:	28 1b       	sub	r18, r24
    22d4:	31 09       	sbc	r19, r1
    22d6:	41 09       	sbc	r20, r1
    22d8:	51 09       	sbc	r21, r1
    22da:	c9 01       	movw	r24, r18
    22dc:	1f 91       	pop	r17
    22de:	0f 91       	pop	r16
    22e0:	ff 90       	pop	r15
    22e2:	ef 90       	pop	r14
    22e4:	08 95       	ret

000022e6 <__pack_f>:
    22e6:	df 92       	push	r13
    22e8:	ef 92       	push	r14
    22ea:	ff 92       	push	r15
    22ec:	0f 93       	push	r16
    22ee:	1f 93       	push	r17
    22f0:	fc 01       	movw	r30, r24
    22f2:	e4 80       	ldd	r14, Z+4	; 0x04
    22f4:	f5 80       	ldd	r15, Z+5	; 0x05
    22f6:	06 81       	ldd	r16, Z+6	; 0x06
    22f8:	17 81       	ldd	r17, Z+7	; 0x07
    22fa:	d1 80       	ldd	r13, Z+1	; 0x01
    22fc:	80 81       	ld	r24, Z
    22fe:	82 30       	cpi	r24, 0x02	; 2
    2300:	48 f4       	brcc	.+18     	; 0x2314 <__pack_f+0x2e>
    2302:	80 e0       	ldi	r24, 0x00	; 0
    2304:	90 e0       	ldi	r25, 0x00	; 0
    2306:	a0 e1       	ldi	r26, 0x10	; 16
    2308:	b0 e0       	ldi	r27, 0x00	; 0
    230a:	e8 2a       	or	r14, r24
    230c:	f9 2a       	or	r15, r25
    230e:	0a 2b       	or	r16, r26
    2310:	1b 2b       	or	r17, r27
    2312:	a5 c0       	rjmp	.+330    	; 0x245e <__pack_f+0x178>
    2314:	84 30       	cpi	r24, 0x04	; 4
    2316:	09 f4       	brne	.+2      	; 0x231a <__pack_f+0x34>
    2318:	9f c0       	rjmp	.+318    	; 0x2458 <__pack_f+0x172>
    231a:	82 30       	cpi	r24, 0x02	; 2
    231c:	21 f4       	brne	.+8      	; 0x2326 <__pack_f+0x40>
    231e:	ee 24       	eor	r14, r14
    2320:	ff 24       	eor	r15, r15
    2322:	87 01       	movw	r16, r14
    2324:	05 c0       	rjmp	.+10     	; 0x2330 <__pack_f+0x4a>
    2326:	e1 14       	cp	r14, r1
    2328:	f1 04       	cpc	r15, r1
    232a:	01 05       	cpc	r16, r1
    232c:	11 05       	cpc	r17, r1
    232e:	19 f4       	brne	.+6      	; 0x2336 <__pack_f+0x50>
    2330:	e0 e0       	ldi	r30, 0x00	; 0
    2332:	f0 e0       	ldi	r31, 0x00	; 0
    2334:	96 c0       	rjmp	.+300    	; 0x2462 <__pack_f+0x17c>
    2336:	62 81       	ldd	r22, Z+2	; 0x02
    2338:	73 81       	ldd	r23, Z+3	; 0x03
    233a:	9f ef       	ldi	r25, 0xFF	; 255
    233c:	62 38       	cpi	r22, 0x82	; 130
    233e:	79 07       	cpc	r23, r25
    2340:	0c f0       	brlt	.+2      	; 0x2344 <__pack_f+0x5e>
    2342:	5b c0       	rjmp	.+182    	; 0x23fa <__pack_f+0x114>
    2344:	22 e8       	ldi	r18, 0x82	; 130
    2346:	3f ef       	ldi	r19, 0xFF	; 255
    2348:	26 1b       	sub	r18, r22
    234a:	37 0b       	sbc	r19, r23
    234c:	2a 31       	cpi	r18, 0x1A	; 26
    234e:	31 05       	cpc	r19, r1
    2350:	2c f0       	brlt	.+10     	; 0x235c <__pack_f+0x76>
    2352:	20 e0       	ldi	r18, 0x00	; 0
    2354:	30 e0       	ldi	r19, 0x00	; 0
    2356:	40 e0       	ldi	r20, 0x00	; 0
    2358:	50 e0       	ldi	r21, 0x00	; 0
    235a:	2a c0       	rjmp	.+84     	; 0x23b0 <__pack_f+0xca>
    235c:	b8 01       	movw	r22, r16
    235e:	a7 01       	movw	r20, r14
    2360:	02 2e       	mov	r0, r18
    2362:	04 c0       	rjmp	.+8      	; 0x236c <__pack_f+0x86>
    2364:	76 95       	lsr	r23
    2366:	67 95       	ror	r22
    2368:	57 95       	ror	r21
    236a:	47 95       	ror	r20
    236c:	0a 94       	dec	r0
    236e:	d2 f7       	brpl	.-12     	; 0x2364 <__pack_f+0x7e>
    2370:	81 e0       	ldi	r24, 0x01	; 1
    2372:	90 e0       	ldi	r25, 0x00	; 0
    2374:	a0 e0       	ldi	r26, 0x00	; 0
    2376:	b0 e0       	ldi	r27, 0x00	; 0
    2378:	04 c0       	rjmp	.+8      	; 0x2382 <__pack_f+0x9c>
    237a:	88 0f       	add	r24, r24
    237c:	99 1f       	adc	r25, r25
    237e:	aa 1f       	adc	r26, r26
    2380:	bb 1f       	adc	r27, r27
    2382:	2a 95       	dec	r18
    2384:	d2 f7       	brpl	.-12     	; 0x237a <__pack_f+0x94>
    2386:	01 97       	sbiw	r24, 0x01	; 1
    2388:	a1 09       	sbc	r26, r1
    238a:	b1 09       	sbc	r27, r1
    238c:	8e 21       	and	r24, r14
    238e:	9f 21       	and	r25, r15
    2390:	a0 23       	and	r26, r16
    2392:	b1 23       	and	r27, r17
    2394:	00 97       	sbiw	r24, 0x00	; 0
    2396:	a1 05       	cpc	r26, r1
    2398:	b1 05       	cpc	r27, r1
    239a:	21 f0       	breq	.+8      	; 0x23a4 <__pack_f+0xbe>
    239c:	81 e0       	ldi	r24, 0x01	; 1
    239e:	90 e0       	ldi	r25, 0x00	; 0
    23a0:	a0 e0       	ldi	r26, 0x00	; 0
    23a2:	b0 e0       	ldi	r27, 0x00	; 0
    23a4:	9a 01       	movw	r18, r20
    23a6:	ab 01       	movw	r20, r22
    23a8:	28 2b       	or	r18, r24
    23aa:	39 2b       	or	r19, r25
    23ac:	4a 2b       	or	r20, r26
    23ae:	5b 2b       	or	r21, r27
    23b0:	da 01       	movw	r26, r20
    23b2:	c9 01       	movw	r24, r18
    23b4:	8f 77       	andi	r24, 0x7F	; 127
    23b6:	90 70       	andi	r25, 0x00	; 0
    23b8:	a0 70       	andi	r26, 0x00	; 0
    23ba:	b0 70       	andi	r27, 0x00	; 0
    23bc:	80 34       	cpi	r24, 0x40	; 64
    23be:	91 05       	cpc	r25, r1
    23c0:	a1 05       	cpc	r26, r1
    23c2:	b1 05       	cpc	r27, r1
    23c4:	39 f4       	brne	.+14     	; 0x23d4 <__pack_f+0xee>
    23c6:	27 ff       	sbrs	r18, 7
    23c8:	09 c0       	rjmp	.+18     	; 0x23dc <__pack_f+0xf6>
    23ca:	20 5c       	subi	r18, 0xC0	; 192
    23cc:	3f 4f       	sbci	r19, 0xFF	; 255
    23ce:	4f 4f       	sbci	r20, 0xFF	; 255
    23d0:	5f 4f       	sbci	r21, 0xFF	; 255
    23d2:	04 c0       	rjmp	.+8      	; 0x23dc <__pack_f+0xf6>
    23d4:	21 5c       	subi	r18, 0xC1	; 193
    23d6:	3f 4f       	sbci	r19, 0xFF	; 255
    23d8:	4f 4f       	sbci	r20, 0xFF	; 255
    23da:	5f 4f       	sbci	r21, 0xFF	; 255
    23dc:	e0 e0       	ldi	r30, 0x00	; 0
    23de:	f0 e0       	ldi	r31, 0x00	; 0
    23e0:	20 30       	cpi	r18, 0x00	; 0
    23e2:	a0 e0       	ldi	r26, 0x00	; 0
    23e4:	3a 07       	cpc	r19, r26
    23e6:	a0 e0       	ldi	r26, 0x00	; 0
    23e8:	4a 07       	cpc	r20, r26
    23ea:	a0 e4       	ldi	r26, 0x40	; 64
    23ec:	5a 07       	cpc	r21, r26
    23ee:	10 f0       	brcs	.+4      	; 0x23f4 <__pack_f+0x10e>
    23f0:	e1 e0       	ldi	r30, 0x01	; 1
    23f2:	f0 e0       	ldi	r31, 0x00	; 0
    23f4:	79 01       	movw	r14, r18
    23f6:	8a 01       	movw	r16, r20
    23f8:	27 c0       	rjmp	.+78     	; 0x2448 <__pack_f+0x162>
    23fa:	60 38       	cpi	r22, 0x80	; 128
    23fc:	71 05       	cpc	r23, r1
    23fe:	64 f5       	brge	.+88     	; 0x2458 <__pack_f+0x172>
    2400:	fb 01       	movw	r30, r22
    2402:	e1 58       	subi	r30, 0x81	; 129
    2404:	ff 4f       	sbci	r31, 0xFF	; 255
    2406:	d8 01       	movw	r26, r16
    2408:	c7 01       	movw	r24, r14
    240a:	8f 77       	andi	r24, 0x7F	; 127
    240c:	90 70       	andi	r25, 0x00	; 0
    240e:	a0 70       	andi	r26, 0x00	; 0
    2410:	b0 70       	andi	r27, 0x00	; 0
    2412:	80 34       	cpi	r24, 0x40	; 64
    2414:	91 05       	cpc	r25, r1
    2416:	a1 05       	cpc	r26, r1
    2418:	b1 05       	cpc	r27, r1
    241a:	39 f4       	brne	.+14     	; 0x242a <__pack_f+0x144>
    241c:	e7 fe       	sbrs	r14, 7
    241e:	0d c0       	rjmp	.+26     	; 0x243a <__pack_f+0x154>
    2420:	80 e4       	ldi	r24, 0x40	; 64
    2422:	90 e0       	ldi	r25, 0x00	; 0
    2424:	a0 e0       	ldi	r26, 0x00	; 0
    2426:	b0 e0       	ldi	r27, 0x00	; 0
    2428:	04 c0       	rjmp	.+8      	; 0x2432 <__pack_f+0x14c>
    242a:	8f e3       	ldi	r24, 0x3F	; 63
    242c:	90 e0       	ldi	r25, 0x00	; 0
    242e:	a0 e0       	ldi	r26, 0x00	; 0
    2430:	b0 e0       	ldi	r27, 0x00	; 0
    2432:	e8 0e       	add	r14, r24
    2434:	f9 1e       	adc	r15, r25
    2436:	0a 1f       	adc	r16, r26
    2438:	1b 1f       	adc	r17, r27
    243a:	17 ff       	sbrs	r17, 7
    243c:	05 c0       	rjmp	.+10     	; 0x2448 <__pack_f+0x162>
    243e:	16 95       	lsr	r17
    2440:	07 95       	ror	r16
    2442:	f7 94       	ror	r15
    2444:	e7 94       	ror	r14
    2446:	31 96       	adiw	r30, 0x01	; 1
    2448:	87 e0       	ldi	r24, 0x07	; 7
    244a:	16 95       	lsr	r17
    244c:	07 95       	ror	r16
    244e:	f7 94       	ror	r15
    2450:	e7 94       	ror	r14
    2452:	8a 95       	dec	r24
    2454:	d1 f7       	brne	.-12     	; 0x244a <__pack_f+0x164>
    2456:	05 c0       	rjmp	.+10     	; 0x2462 <__pack_f+0x17c>
    2458:	ee 24       	eor	r14, r14
    245a:	ff 24       	eor	r15, r15
    245c:	87 01       	movw	r16, r14
    245e:	ef ef       	ldi	r30, 0xFF	; 255
    2460:	f0 e0       	ldi	r31, 0x00	; 0
    2462:	6e 2f       	mov	r22, r30
    2464:	67 95       	ror	r22
    2466:	66 27       	eor	r22, r22
    2468:	67 95       	ror	r22
    246a:	90 2f       	mov	r25, r16
    246c:	9f 77       	andi	r25, 0x7F	; 127
    246e:	d7 94       	ror	r13
    2470:	dd 24       	eor	r13, r13
    2472:	d7 94       	ror	r13
    2474:	8e 2f       	mov	r24, r30
    2476:	86 95       	lsr	r24
    2478:	49 2f       	mov	r20, r25
    247a:	46 2b       	or	r20, r22
    247c:	58 2f       	mov	r21, r24
    247e:	5d 29       	or	r21, r13
    2480:	b7 01       	movw	r22, r14
    2482:	ca 01       	movw	r24, r20
    2484:	1f 91       	pop	r17
    2486:	0f 91       	pop	r16
    2488:	ff 90       	pop	r15
    248a:	ef 90       	pop	r14
    248c:	df 90       	pop	r13
    248e:	08 95       	ret

00002490 <__unpack_f>:
    2490:	fc 01       	movw	r30, r24
    2492:	db 01       	movw	r26, r22
    2494:	40 81       	ld	r20, Z
    2496:	51 81       	ldd	r21, Z+1	; 0x01
    2498:	22 81       	ldd	r18, Z+2	; 0x02
    249a:	62 2f       	mov	r22, r18
    249c:	6f 77       	andi	r22, 0x7F	; 127
    249e:	70 e0       	ldi	r23, 0x00	; 0
    24a0:	22 1f       	adc	r18, r18
    24a2:	22 27       	eor	r18, r18
    24a4:	22 1f       	adc	r18, r18
    24a6:	93 81       	ldd	r25, Z+3	; 0x03
    24a8:	89 2f       	mov	r24, r25
    24aa:	88 0f       	add	r24, r24
    24ac:	82 2b       	or	r24, r18
    24ae:	28 2f       	mov	r18, r24
    24b0:	30 e0       	ldi	r19, 0x00	; 0
    24b2:	99 1f       	adc	r25, r25
    24b4:	99 27       	eor	r25, r25
    24b6:	99 1f       	adc	r25, r25
    24b8:	11 96       	adiw	r26, 0x01	; 1
    24ba:	9c 93       	st	X, r25
    24bc:	11 97       	sbiw	r26, 0x01	; 1
    24be:	21 15       	cp	r18, r1
    24c0:	31 05       	cpc	r19, r1
    24c2:	a9 f5       	brne	.+106    	; 0x252e <__unpack_f+0x9e>
    24c4:	41 15       	cp	r20, r1
    24c6:	51 05       	cpc	r21, r1
    24c8:	61 05       	cpc	r22, r1
    24ca:	71 05       	cpc	r23, r1
    24cc:	11 f4       	brne	.+4      	; 0x24d2 <__unpack_f+0x42>
    24ce:	82 e0       	ldi	r24, 0x02	; 2
    24d0:	37 c0       	rjmp	.+110    	; 0x2540 <__unpack_f+0xb0>
    24d2:	82 e8       	ldi	r24, 0x82	; 130
    24d4:	9f ef       	ldi	r25, 0xFF	; 255
    24d6:	13 96       	adiw	r26, 0x03	; 3
    24d8:	9c 93       	st	X, r25
    24da:	8e 93       	st	-X, r24
    24dc:	12 97       	sbiw	r26, 0x02	; 2
    24de:	9a 01       	movw	r18, r20
    24e0:	ab 01       	movw	r20, r22
    24e2:	67 e0       	ldi	r22, 0x07	; 7
    24e4:	22 0f       	add	r18, r18
    24e6:	33 1f       	adc	r19, r19
    24e8:	44 1f       	adc	r20, r20
    24ea:	55 1f       	adc	r21, r21
    24ec:	6a 95       	dec	r22
    24ee:	d1 f7       	brne	.-12     	; 0x24e4 <__unpack_f+0x54>
    24f0:	83 e0       	ldi	r24, 0x03	; 3
    24f2:	8c 93       	st	X, r24
    24f4:	0d c0       	rjmp	.+26     	; 0x2510 <__unpack_f+0x80>
    24f6:	22 0f       	add	r18, r18
    24f8:	33 1f       	adc	r19, r19
    24fa:	44 1f       	adc	r20, r20
    24fc:	55 1f       	adc	r21, r21
    24fe:	12 96       	adiw	r26, 0x02	; 2
    2500:	8d 91       	ld	r24, X+
    2502:	9c 91       	ld	r25, X
    2504:	13 97       	sbiw	r26, 0x03	; 3
    2506:	01 97       	sbiw	r24, 0x01	; 1
    2508:	13 96       	adiw	r26, 0x03	; 3
    250a:	9c 93       	st	X, r25
    250c:	8e 93       	st	-X, r24
    250e:	12 97       	sbiw	r26, 0x02	; 2
    2510:	20 30       	cpi	r18, 0x00	; 0
    2512:	80 e0       	ldi	r24, 0x00	; 0
    2514:	38 07       	cpc	r19, r24
    2516:	80 e0       	ldi	r24, 0x00	; 0
    2518:	48 07       	cpc	r20, r24
    251a:	80 e4       	ldi	r24, 0x40	; 64
    251c:	58 07       	cpc	r21, r24
    251e:	58 f3       	brcs	.-42     	; 0x24f6 <__unpack_f+0x66>
    2520:	14 96       	adiw	r26, 0x04	; 4
    2522:	2d 93       	st	X+, r18
    2524:	3d 93       	st	X+, r19
    2526:	4d 93       	st	X+, r20
    2528:	5c 93       	st	X, r21
    252a:	17 97       	sbiw	r26, 0x07	; 7
    252c:	08 95       	ret
    252e:	2f 3f       	cpi	r18, 0xFF	; 255
    2530:	31 05       	cpc	r19, r1
    2532:	79 f4       	brne	.+30     	; 0x2552 <__unpack_f+0xc2>
    2534:	41 15       	cp	r20, r1
    2536:	51 05       	cpc	r21, r1
    2538:	61 05       	cpc	r22, r1
    253a:	71 05       	cpc	r23, r1
    253c:	19 f4       	brne	.+6      	; 0x2544 <__unpack_f+0xb4>
    253e:	84 e0       	ldi	r24, 0x04	; 4
    2540:	8c 93       	st	X, r24
    2542:	08 95       	ret
    2544:	64 ff       	sbrs	r22, 4
    2546:	03 c0       	rjmp	.+6      	; 0x254e <__unpack_f+0xbe>
    2548:	81 e0       	ldi	r24, 0x01	; 1
    254a:	8c 93       	st	X, r24
    254c:	12 c0       	rjmp	.+36     	; 0x2572 <__unpack_f+0xe2>
    254e:	1c 92       	st	X, r1
    2550:	10 c0       	rjmp	.+32     	; 0x2572 <__unpack_f+0xe2>
    2552:	2f 57       	subi	r18, 0x7F	; 127
    2554:	30 40       	sbci	r19, 0x00	; 0
    2556:	13 96       	adiw	r26, 0x03	; 3
    2558:	3c 93       	st	X, r19
    255a:	2e 93       	st	-X, r18
    255c:	12 97       	sbiw	r26, 0x02	; 2
    255e:	83 e0       	ldi	r24, 0x03	; 3
    2560:	8c 93       	st	X, r24
    2562:	87 e0       	ldi	r24, 0x07	; 7
    2564:	44 0f       	add	r20, r20
    2566:	55 1f       	adc	r21, r21
    2568:	66 1f       	adc	r22, r22
    256a:	77 1f       	adc	r23, r23
    256c:	8a 95       	dec	r24
    256e:	d1 f7       	brne	.-12     	; 0x2564 <__unpack_f+0xd4>
    2570:	70 64       	ori	r23, 0x40	; 64
    2572:	14 96       	adiw	r26, 0x04	; 4
    2574:	4d 93       	st	X+, r20
    2576:	5d 93       	st	X+, r21
    2578:	6d 93       	st	X+, r22
    257a:	7c 93       	st	X, r23
    257c:	17 97       	sbiw	r26, 0x07	; 7
    257e:	08 95       	ret

00002580 <__fpcmp_parts_f>:
    2580:	1f 93       	push	r17
    2582:	dc 01       	movw	r26, r24
    2584:	fb 01       	movw	r30, r22
    2586:	9c 91       	ld	r25, X
    2588:	92 30       	cpi	r25, 0x02	; 2
    258a:	08 f4       	brcc	.+2      	; 0x258e <__fpcmp_parts_f+0xe>
    258c:	47 c0       	rjmp	.+142    	; 0x261c <__fpcmp_parts_f+0x9c>
    258e:	80 81       	ld	r24, Z
    2590:	82 30       	cpi	r24, 0x02	; 2
    2592:	08 f4       	brcc	.+2      	; 0x2596 <__fpcmp_parts_f+0x16>
    2594:	43 c0       	rjmp	.+134    	; 0x261c <__fpcmp_parts_f+0x9c>
    2596:	94 30       	cpi	r25, 0x04	; 4
    2598:	51 f4       	brne	.+20     	; 0x25ae <__fpcmp_parts_f+0x2e>
    259a:	11 96       	adiw	r26, 0x01	; 1
    259c:	1c 91       	ld	r17, X
    259e:	84 30       	cpi	r24, 0x04	; 4
    25a0:	99 f5       	brne	.+102    	; 0x2608 <__fpcmp_parts_f+0x88>
    25a2:	81 81       	ldd	r24, Z+1	; 0x01
    25a4:	68 2f       	mov	r22, r24
    25a6:	70 e0       	ldi	r23, 0x00	; 0
    25a8:	61 1b       	sub	r22, r17
    25aa:	71 09       	sbc	r23, r1
    25ac:	3f c0       	rjmp	.+126    	; 0x262c <__fpcmp_parts_f+0xac>
    25ae:	84 30       	cpi	r24, 0x04	; 4
    25b0:	21 f0       	breq	.+8      	; 0x25ba <__fpcmp_parts_f+0x3a>
    25b2:	92 30       	cpi	r25, 0x02	; 2
    25b4:	31 f4       	brne	.+12     	; 0x25c2 <__fpcmp_parts_f+0x42>
    25b6:	82 30       	cpi	r24, 0x02	; 2
    25b8:	b9 f1       	breq	.+110    	; 0x2628 <__fpcmp_parts_f+0xa8>
    25ba:	81 81       	ldd	r24, Z+1	; 0x01
    25bc:	88 23       	and	r24, r24
    25be:	89 f1       	breq	.+98     	; 0x2622 <__fpcmp_parts_f+0xa2>
    25c0:	2d c0       	rjmp	.+90     	; 0x261c <__fpcmp_parts_f+0x9c>
    25c2:	11 96       	adiw	r26, 0x01	; 1
    25c4:	1c 91       	ld	r17, X
    25c6:	11 97       	sbiw	r26, 0x01	; 1
    25c8:	82 30       	cpi	r24, 0x02	; 2
    25ca:	f1 f0       	breq	.+60     	; 0x2608 <__fpcmp_parts_f+0x88>
    25cc:	81 81       	ldd	r24, Z+1	; 0x01
    25ce:	18 17       	cp	r17, r24
    25d0:	d9 f4       	brne	.+54     	; 0x2608 <__fpcmp_parts_f+0x88>
    25d2:	12 96       	adiw	r26, 0x02	; 2
    25d4:	2d 91       	ld	r18, X+
    25d6:	3c 91       	ld	r19, X
    25d8:	13 97       	sbiw	r26, 0x03	; 3
    25da:	82 81       	ldd	r24, Z+2	; 0x02
    25dc:	93 81       	ldd	r25, Z+3	; 0x03
    25de:	82 17       	cp	r24, r18
    25e0:	93 07       	cpc	r25, r19
    25e2:	94 f0       	brlt	.+36     	; 0x2608 <__fpcmp_parts_f+0x88>
    25e4:	28 17       	cp	r18, r24
    25e6:	39 07       	cpc	r19, r25
    25e8:	bc f0       	brlt	.+46     	; 0x2618 <__fpcmp_parts_f+0x98>
    25ea:	14 96       	adiw	r26, 0x04	; 4
    25ec:	8d 91       	ld	r24, X+
    25ee:	9d 91       	ld	r25, X+
    25f0:	0d 90       	ld	r0, X+
    25f2:	bc 91       	ld	r27, X
    25f4:	a0 2d       	mov	r26, r0
    25f6:	24 81       	ldd	r18, Z+4	; 0x04
    25f8:	35 81       	ldd	r19, Z+5	; 0x05
    25fa:	46 81       	ldd	r20, Z+6	; 0x06
    25fc:	57 81       	ldd	r21, Z+7	; 0x07
    25fe:	28 17       	cp	r18, r24
    2600:	39 07       	cpc	r19, r25
    2602:	4a 07       	cpc	r20, r26
    2604:	5b 07       	cpc	r21, r27
    2606:	18 f4       	brcc	.+6      	; 0x260e <__fpcmp_parts_f+0x8e>
    2608:	11 23       	and	r17, r17
    260a:	41 f0       	breq	.+16     	; 0x261c <__fpcmp_parts_f+0x9c>
    260c:	0a c0       	rjmp	.+20     	; 0x2622 <__fpcmp_parts_f+0xa2>
    260e:	82 17       	cp	r24, r18
    2610:	93 07       	cpc	r25, r19
    2612:	a4 07       	cpc	r26, r20
    2614:	b5 07       	cpc	r27, r21
    2616:	40 f4       	brcc	.+16     	; 0x2628 <__fpcmp_parts_f+0xa8>
    2618:	11 23       	and	r17, r17
    261a:	19 f0       	breq	.+6      	; 0x2622 <__fpcmp_parts_f+0xa2>
    261c:	61 e0       	ldi	r22, 0x01	; 1
    261e:	70 e0       	ldi	r23, 0x00	; 0
    2620:	05 c0       	rjmp	.+10     	; 0x262c <__fpcmp_parts_f+0xac>
    2622:	6f ef       	ldi	r22, 0xFF	; 255
    2624:	7f ef       	ldi	r23, 0xFF	; 255
    2626:	02 c0       	rjmp	.+4      	; 0x262c <__fpcmp_parts_f+0xac>
    2628:	60 e0       	ldi	r22, 0x00	; 0
    262a:	70 e0       	ldi	r23, 0x00	; 0
    262c:	cb 01       	movw	r24, r22
    262e:	1f 91       	pop	r17
    2630:	08 95       	ret

00002632 <__prologue_saves__>:
    2632:	2f 92       	push	r2
    2634:	3f 92       	push	r3
    2636:	4f 92       	push	r4
    2638:	5f 92       	push	r5
    263a:	6f 92       	push	r6
    263c:	7f 92       	push	r7
    263e:	8f 92       	push	r8
    2640:	9f 92       	push	r9
    2642:	af 92       	push	r10
    2644:	bf 92       	push	r11
    2646:	cf 92       	push	r12
    2648:	df 92       	push	r13
    264a:	ef 92       	push	r14
    264c:	ff 92       	push	r15
    264e:	0f 93       	push	r16
    2650:	1f 93       	push	r17
    2652:	cf 93       	push	r28
    2654:	df 93       	push	r29
    2656:	cd b7       	in	r28, 0x3d	; 61
    2658:	de b7       	in	r29, 0x3e	; 62
    265a:	ca 1b       	sub	r28, r26
    265c:	db 0b       	sbc	r29, r27
    265e:	0f b6       	in	r0, 0x3f	; 63
    2660:	f8 94       	cli
    2662:	de bf       	out	0x3e, r29	; 62
    2664:	0f be       	out	0x3f, r0	; 63
    2666:	cd bf       	out	0x3d, r28	; 61
    2668:	09 94       	ijmp

0000266a <__epilogue_restores__>:
    266a:	2a 88       	ldd	r2, Y+18	; 0x12
    266c:	39 88       	ldd	r3, Y+17	; 0x11
    266e:	48 88       	ldd	r4, Y+16	; 0x10
    2670:	5f 84       	ldd	r5, Y+15	; 0x0f
    2672:	6e 84       	ldd	r6, Y+14	; 0x0e
    2674:	7d 84       	ldd	r7, Y+13	; 0x0d
    2676:	8c 84       	ldd	r8, Y+12	; 0x0c
    2678:	9b 84       	ldd	r9, Y+11	; 0x0b
    267a:	aa 84       	ldd	r10, Y+10	; 0x0a
    267c:	b9 84       	ldd	r11, Y+9	; 0x09
    267e:	c8 84       	ldd	r12, Y+8	; 0x08
    2680:	df 80       	ldd	r13, Y+7	; 0x07
    2682:	ee 80       	ldd	r14, Y+6	; 0x06
    2684:	fd 80       	ldd	r15, Y+5	; 0x05
    2686:	0c 81       	ldd	r16, Y+4	; 0x04
    2688:	1b 81       	ldd	r17, Y+3	; 0x03
    268a:	aa 81       	ldd	r26, Y+2	; 0x02
    268c:	b9 81       	ldd	r27, Y+1	; 0x01
    268e:	ce 0f       	add	r28, r30
    2690:	d1 1d       	adc	r29, r1
    2692:	0f b6       	in	r0, 0x3f	; 63
    2694:	f8 94       	cli
    2696:	de bf       	out	0x3e, r29	; 62
    2698:	0f be       	out	0x3f, r0	; 63
    269a:	cd bf       	out	0x3d, r28	; 61
    269c:	ed 01       	movw	r28, r26
    269e:	08 95       	ret

000026a0 <_exit>:
    26a0:	f8 94       	cli

000026a2 <__stop_program>:
    26a2:	ff cf       	rjmp	.-2      	; 0x26a2 <__stop_program>
